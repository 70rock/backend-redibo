
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Renter
 * 
 */
export type Renter = $Result.DefaultSelection<Prisma.$RenterPayload>
/**
 * Model Car
 * 
 */
export type Car = $Result.DefaultSelection<Prisma.$CarPayload>
/**
 * Model Reservation
 * 
 */
export type Reservation = $Result.DefaultSelection<Prisma.$ReservationPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model Report
 * 
 */
export type Report = $Result.DefaultSelection<Prisma.$ReportPayload>
/**
 * Model Combustible
 * 
 */
export type Combustible = $Result.DefaultSelection<Prisma.$CombustiblePayload>
/**
 * Model CaracteristicaAdicional
 * 
 */
export type CaracteristicaAdicional = $Result.DefaultSelection<Prisma.$CaracteristicaAdicionalPayload>
/**
 * Model Imagen
 * 
 */
export type Imagen = $Result.DefaultSelection<Prisma.$ImagenPayload>
/**
 * Model Favorito
 * 
 */
export type Favorito = $Result.DefaultSelection<Prisma.$FavoritoPayload>
/**
 * Model Descuento
 * 
 */
export type Descuento = $Result.DefaultSelection<Prisma.$DescuentoPayload>
/**
 * Model CalificacionHostUsuario
 * 
 */
export type CalificacionHostUsuario = $Result.DefaultSelection<Prisma.$CalificacionHostUsuarioPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Genero: {
  MASCULINO: 'MASCULINO',
  FEMENINO: 'FEMENINO',
  OTRO: 'OTRO'
};

export type Genero = (typeof Genero)[keyof typeof Genero]


export const EstadoReservacion: {
  PENDIENTE: 'PENDIENTE',
  CONFIRMADA: 'CONFIRMADA',
  EN_CURSO: 'EN_CURSO',
  COMPLETADA: 'COMPLETADA',
  CANCELADA: 'CANCELADA'
};

export type EstadoReservacion = (typeof EstadoReservacion)[keyof typeof EstadoReservacion]


export const EstadoReporte: {
  PENDIENTE: 'PENDIENTE',
  EN_REVISION: 'EN_REVISION',
  RESUELTO: 'RESUELTO',
  DESCARTADO: 'DESCARTADO'
};

export type EstadoReporte = (typeof EstadoReporte)[keyof typeof EstadoReporte]


export const UserRole: {
  ADMIN: 'ADMIN',
  HOST: 'HOST',
  RENTER: 'RENTER'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const CarStatus: {
  DISPONIBLE: 'DISPONIBLE',
  RESERVADO: 'RESERVADO',
  MANTENIMIENTO: 'MANTENIMIENTO'
};

export type CarStatus = (typeof CarStatus)[keyof typeof CarStatus]

}

export type Genero = $Enums.Genero

export const Genero: typeof $Enums.Genero

export type EstadoReservacion = $Enums.EstadoReservacion

export const EstadoReservacion: typeof $Enums.EstadoReservacion

export type EstadoReporte = $Enums.EstadoReporte

export const EstadoReporte: typeof $Enums.EstadoReporte

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type CarStatus = $Enums.CarStatus

export const CarStatus: typeof $Enums.CarStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.renter`: Exposes CRUD operations for the **Renter** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Renters
    * const renters = await prisma.renter.findMany()
    * ```
    */
  get renter(): Prisma.RenterDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.car`: Exposes CRUD operations for the **Car** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cars
    * const cars = await prisma.car.findMany()
    * ```
    */
  get car(): Prisma.CarDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservation`: Exposes CRUD operations for the **Reservation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservations
    * const reservations = await prisma.reservation.findMany()
    * ```
    */
  get reservation(): Prisma.ReservationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.report`: Exposes CRUD operations for the **Report** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reports
    * const reports = await prisma.report.findMany()
    * ```
    */
  get report(): Prisma.ReportDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.combustible`: Exposes CRUD operations for the **Combustible** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Combustibles
    * const combustibles = await prisma.combustible.findMany()
    * ```
    */
  get combustible(): Prisma.CombustibleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.caracteristicaAdicional`: Exposes CRUD operations for the **CaracteristicaAdicional** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CaracteristicaAdicionals
    * const caracteristicaAdicionals = await prisma.caracteristicaAdicional.findMany()
    * ```
    */
  get caracteristicaAdicional(): Prisma.CaracteristicaAdicionalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.imagen`: Exposes CRUD operations for the **Imagen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Imagens
    * const imagens = await prisma.imagen.findMany()
    * ```
    */
  get imagen(): Prisma.ImagenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favorito`: Exposes CRUD operations for the **Favorito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favoritos
    * const favoritos = await prisma.favorito.findMany()
    * ```
    */
  get favorito(): Prisma.FavoritoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.descuento`: Exposes CRUD operations for the **Descuento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Descuentos
    * const descuentos = await prisma.descuento.findMany()
    * ```
    */
  get descuento(): Prisma.DescuentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.calificacionHostUsuario`: Exposes CRUD operations for the **CalificacionHostUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CalificacionHostUsuarios
    * const calificacionHostUsuarios = await prisma.calificacionHostUsuario.findMany()
    * ```
    */
  get calificacionHostUsuario(): Prisma.CalificacionHostUsuarioDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Renter: 'Renter',
    Car: 'Car',
    Reservation: 'Reservation',
    Review: 'Review',
    Report: 'Report',
    Combustible: 'Combustible',
    CaracteristicaAdicional: 'CaracteristicaAdicional',
    Imagen: 'Imagen',
    Favorito: 'Favorito',
    Descuento: 'Descuento',
    CalificacionHostUsuario: 'CalificacionHostUsuario'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "renter" | "car" | "reservation" | "review" | "report" | "combustible" | "caracteristicaAdicional" | "imagen" | "favorito" | "descuento" | "calificacionHostUsuario"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Renter: {
        payload: Prisma.$RenterPayload<ExtArgs>
        fields: Prisma.RenterFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RenterFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RenterFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          findFirst: {
            args: Prisma.RenterFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RenterFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          findMany: {
            args: Prisma.RenterFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>[]
          }
          create: {
            args: Prisma.RenterCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          createMany: {
            args: Prisma.RenterCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RenterCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>[]
          }
          delete: {
            args: Prisma.RenterDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          update: {
            args: Prisma.RenterUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          deleteMany: {
            args: Prisma.RenterDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RenterUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RenterUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>[]
          }
          upsert: {
            args: Prisma.RenterUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          aggregate: {
            args: Prisma.RenterAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRenter>
          }
          groupBy: {
            args: Prisma.RenterGroupByArgs<ExtArgs>
            result: $Utils.Optional<RenterGroupByOutputType>[]
          }
          count: {
            args: Prisma.RenterCountArgs<ExtArgs>
            result: $Utils.Optional<RenterCountAggregateOutputType> | number
          }
        }
      }
      Car: {
        payload: Prisma.$CarPayload<ExtArgs>
        fields: Prisma.CarFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CarFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CarFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload>
          }
          findFirst: {
            args: Prisma.CarFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CarFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload>
          }
          findMany: {
            args: Prisma.CarFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload>[]
          }
          create: {
            args: Prisma.CarCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload>
          }
          createMany: {
            args: Prisma.CarCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CarCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload>[]
          }
          delete: {
            args: Prisma.CarDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload>
          }
          update: {
            args: Prisma.CarUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload>
          }
          deleteMany: {
            args: Prisma.CarDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CarUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CarUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload>[]
          }
          upsert: {
            args: Prisma.CarUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarPayload>
          }
          aggregate: {
            args: Prisma.CarAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCar>
          }
          groupBy: {
            args: Prisma.CarGroupByArgs<ExtArgs>
            result: $Utils.Optional<CarGroupByOutputType>[]
          }
          count: {
            args: Prisma.CarCountArgs<ExtArgs>
            result: $Utils.Optional<CarCountAggregateOutputType> | number
          }
        }
      }
      Reservation: {
        payload: Prisma.$ReservationPayload<ExtArgs>
        fields: Prisma.ReservationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          findFirst: {
            args: Prisma.ReservationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          findMany: {
            args: Prisma.ReservationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>[]
          }
          create: {
            args: Prisma.ReservationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          createMany: {
            args: Prisma.ReservationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>[]
          }
          delete: {
            args: Prisma.ReservationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          update: {
            args: Prisma.ReservationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          deleteMany: {
            args: Prisma.ReservationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>[]
          }
          upsert: {
            args: Prisma.ReservationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          aggregate: {
            args: Prisma.ReservationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservation>
          }
          groupBy: {
            args: Prisma.ReservationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservationCountArgs<ExtArgs>
            result: $Utils.Optional<ReservationCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReviewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      Report: {
        payload: Prisma.$ReportPayload<ExtArgs>
        fields: Prisma.ReportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          findFirst: {
            args: Prisma.ReportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          findMany: {
            args: Prisma.ReportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          create: {
            args: Prisma.ReportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          createMany: {
            args: Prisma.ReportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReportCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          delete: {
            args: Prisma.ReportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          update: {
            args: Prisma.ReportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          deleteMany: {
            args: Prisma.ReportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReportUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          upsert: {
            args: Prisma.ReportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          aggregate: {
            args: Prisma.ReportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReport>
          }
          groupBy: {
            args: Prisma.ReportGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReportCountArgs<ExtArgs>
            result: $Utils.Optional<ReportCountAggregateOutputType> | number
          }
        }
      }
      Combustible: {
        payload: Prisma.$CombustiblePayload<ExtArgs>
        fields: Prisma.CombustibleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CombustibleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CombustibleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload>
          }
          findFirst: {
            args: Prisma.CombustibleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CombustibleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload>
          }
          findMany: {
            args: Prisma.CombustibleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload>[]
          }
          create: {
            args: Prisma.CombustibleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload>
          }
          createMany: {
            args: Prisma.CombustibleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CombustibleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload>[]
          }
          delete: {
            args: Prisma.CombustibleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload>
          }
          update: {
            args: Prisma.CombustibleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload>
          }
          deleteMany: {
            args: Prisma.CombustibleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CombustibleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CombustibleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload>[]
          }
          upsert: {
            args: Prisma.CombustibleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblePayload>
          }
          aggregate: {
            args: Prisma.CombustibleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCombustible>
          }
          groupBy: {
            args: Prisma.CombustibleGroupByArgs<ExtArgs>
            result: $Utils.Optional<CombustibleGroupByOutputType>[]
          }
          count: {
            args: Prisma.CombustibleCountArgs<ExtArgs>
            result: $Utils.Optional<CombustibleCountAggregateOutputType> | number
          }
        }
      }
      CaracteristicaAdicional: {
        payload: Prisma.$CaracteristicaAdicionalPayload<ExtArgs>
        fields: Prisma.CaracteristicaAdicionalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CaracteristicaAdicionalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CaracteristicaAdicionalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload>
          }
          findFirst: {
            args: Prisma.CaracteristicaAdicionalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CaracteristicaAdicionalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload>
          }
          findMany: {
            args: Prisma.CaracteristicaAdicionalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload>[]
          }
          create: {
            args: Prisma.CaracteristicaAdicionalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload>
          }
          createMany: {
            args: Prisma.CaracteristicaAdicionalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CaracteristicaAdicionalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload>[]
          }
          delete: {
            args: Prisma.CaracteristicaAdicionalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload>
          }
          update: {
            args: Prisma.CaracteristicaAdicionalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload>
          }
          deleteMany: {
            args: Prisma.CaracteristicaAdicionalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CaracteristicaAdicionalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CaracteristicaAdicionalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload>[]
          }
          upsert: {
            args: Prisma.CaracteristicaAdicionalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CaracteristicaAdicionalPayload>
          }
          aggregate: {
            args: Prisma.CaracteristicaAdicionalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCaracteristicaAdicional>
          }
          groupBy: {
            args: Prisma.CaracteristicaAdicionalGroupByArgs<ExtArgs>
            result: $Utils.Optional<CaracteristicaAdicionalGroupByOutputType>[]
          }
          count: {
            args: Prisma.CaracteristicaAdicionalCountArgs<ExtArgs>
            result: $Utils.Optional<CaracteristicaAdicionalCountAggregateOutputType> | number
          }
        }
      }
      Imagen: {
        payload: Prisma.$ImagenPayload<ExtArgs>
        fields: Prisma.ImagenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImagenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImagenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload>
          }
          findFirst: {
            args: Prisma.ImagenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImagenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload>
          }
          findMany: {
            args: Prisma.ImagenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload>[]
          }
          create: {
            args: Prisma.ImagenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload>
          }
          createMany: {
            args: Prisma.ImagenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ImagenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload>[]
          }
          delete: {
            args: Prisma.ImagenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload>
          }
          update: {
            args: Prisma.ImagenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload>
          }
          deleteMany: {
            args: Prisma.ImagenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImagenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ImagenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload>[]
          }
          upsert: {
            args: Prisma.ImagenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenPayload>
          }
          aggregate: {
            args: Prisma.ImagenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImagen>
          }
          groupBy: {
            args: Prisma.ImagenGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImagenGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImagenCountArgs<ExtArgs>
            result: $Utils.Optional<ImagenCountAggregateOutputType> | number
          }
        }
      }
      Favorito: {
        payload: Prisma.$FavoritoPayload<ExtArgs>
        fields: Prisma.FavoritoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoritoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoritoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          findFirst: {
            args: Prisma.FavoritoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoritoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          findMany: {
            args: Prisma.FavoritoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>[]
          }
          create: {
            args: Prisma.FavoritoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          createMany: {
            args: Prisma.FavoritoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoritoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>[]
          }
          delete: {
            args: Prisma.FavoritoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          update: {
            args: Prisma.FavoritoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          deleteMany: {
            args: Prisma.FavoritoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoritoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FavoritoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>[]
          }
          upsert: {
            args: Prisma.FavoritoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          aggregate: {
            args: Prisma.FavoritoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavorito>
          }
          groupBy: {
            args: Prisma.FavoritoGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoritoGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoritoCountArgs<ExtArgs>
            result: $Utils.Optional<FavoritoCountAggregateOutputType> | number
          }
        }
      }
      Descuento: {
        payload: Prisma.$DescuentoPayload<ExtArgs>
        fields: Prisma.DescuentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DescuentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DescuentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          findFirst: {
            args: Prisma.DescuentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DescuentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          findMany: {
            args: Prisma.DescuentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>[]
          }
          create: {
            args: Prisma.DescuentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          createMany: {
            args: Prisma.DescuentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DescuentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>[]
          }
          delete: {
            args: Prisma.DescuentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          update: {
            args: Prisma.DescuentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          deleteMany: {
            args: Prisma.DescuentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DescuentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DescuentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>[]
          }
          upsert: {
            args: Prisma.DescuentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          aggregate: {
            args: Prisma.DescuentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDescuento>
          }
          groupBy: {
            args: Prisma.DescuentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DescuentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DescuentoCountArgs<ExtArgs>
            result: $Utils.Optional<DescuentoCountAggregateOutputType> | number
          }
        }
      }
      CalificacionHostUsuario: {
        payload: Prisma.$CalificacionHostUsuarioPayload<ExtArgs>
        fields: Prisma.CalificacionHostUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CalificacionHostUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CalificacionHostUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload>
          }
          findFirst: {
            args: Prisma.CalificacionHostUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CalificacionHostUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload>
          }
          findMany: {
            args: Prisma.CalificacionHostUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload>[]
          }
          create: {
            args: Prisma.CalificacionHostUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload>
          }
          createMany: {
            args: Prisma.CalificacionHostUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CalificacionHostUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload>[]
          }
          delete: {
            args: Prisma.CalificacionHostUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload>
          }
          update: {
            args: Prisma.CalificacionHostUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.CalificacionHostUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CalificacionHostUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CalificacionHostUsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload>[]
          }
          upsert: {
            args: Prisma.CalificacionHostUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionHostUsuarioPayload>
          }
          aggregate: {
            args: Prisma.CalificacionHostUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCalificacionHostUsuario>
          }
          groupBy: {
            args: Prisma.CalificacionHostUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<CalificacionHostUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.CalificacionHostUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<CalificacionHostUsuarioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    renter?: RenterOmit
    car?: CarOmit
    reservation?: ReservationOmit
    review?: ReviewOmit
    report?: ReportOmit
    combustible?: CombustibleOmit
    caracteristicaAdicional?: CaracteristicaAdicionalOmit
    imagen?: ImagenOmit
    favorito?: FavoritoOmit
    descuento?: DescuentoOmit
    calificacionHostUsuario?: CalificacionHostUsuarioOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    reviews: number
    reports: number
    reservations: number
    cars: number
    calificacionesHechas: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviews?: boolean | UserCountOutputTypeCountReviewsArgs
    reports?: boolean | UserCountOutputTypeCountReportsArgs
    reservations?: boolean | UserCountOutputTypeCountReservationsArgs
    cars?: boolean | UserCountOutputTypeCountCarsArgs
    calificacionesHechas?: boolean | UserCountOutputTypeCountCalificacionesHechasArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCarsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCalificacionesHechasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionHostUsuarioWhereInput
  }


  /**
   * Count Type RenterCountOutputType
   */

  export type RenterCountOutputType = {
    reviews: number
    reports: number
    reservations: number
    favoritos: number
    calificacionesRecibidas: number
  }

  export type RenterCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviews?: boolean | RenterCountOutputTypeCountReviewsArgs
    reports?: boolean | RenterCountOutputTypeCountReportsArgs
    reservations?: boolean | RenterCountOutputTypeCountReservationsArgs
    favoritos?: boolean | RenterCountOutputTypeCountFavoritosArgs
    calificacionesRecibidas?: boolean | RenterCountOutputTypeCountCalificacionesRecibidasArgs
  }

  // Custom InputTypes
  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RenterCountOutputType
     */
    select?: RenterCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeCountReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
  }

  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }

  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritoWhereInput
  }

  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeCountCalificacionesRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionHostUsuarioWhereInput
  }


  /**
   * Count Type CarCountOutputType
   */

  export type CarCountOutputType = {
    combustibles: number
    caracteristicas: number
    imagenes: number
    favoritos: number
    reservations: number
    reviews: number
  }

  export type CarCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    combustibles?: boolean | CarCountOutputTypeCountCombustiblesArgs
    caracteristicas?: boolean | CarCountOutputTypeCountCaracteristicasArgs
    imagenes?: boolean | CarCountOutputTypeCountImagenesArgs
    favoritos?: boolean | CarCountOutputTypeCountFavoritosArgs
    reservations?: boolean | CarCountOutputTypeCountReservationsArgs
    reviews?: boolean | CarCountOutputTypeCountReviewsArgs
  }

  // Custom InputTypes
  /**
   * CarCountOutputType without action
   */
  export type CarCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarCountOutputType
     */
    select?: CarCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CarCountOutputType without action
   */
  export type CarCountOutputTypeCountCombustiblesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CombustibleWhereInput
  }

  /**
   * CarCountOutputType without action
   */
  export type CarCountOutputTypeCountCaracteristicasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CaracteristicaAdicionalWhereInput
  }

  /**
   * CarCountOutputType without action
   */
  export type CarCountOutputTypeCountImagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImagenWhereInput
  }

  /**
   * CarCountOutputType without action
   */
  export type CarCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritoWhereInput
  }

  /**
   * CarCountOutputType without action
   */
  export type CarCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }

  /**
   * CarCountOutputType without action
   */
  export type CarCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }


  /**
   * Count Type ReservationCountOutputType
   */

  export type ReservationCountOutputType = {
    reviews: number
    calificaciones: number
  }

  export type ReservationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviews?: boolean | ReservationCountOutputTypeCountReviewsArgs
    calificaciones?: boolean | ReservationCountOutputTypeCountCalificacionesArgs
  }

  // Custom InputTypes
  /**
   * ReservationCountOutputType without action
   */
  export type ReservationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservationCountOutputType
     */
    select?: ReservationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReservationCountOutputType without action
   */
  export type ReservationCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * ReservationCountOutputType without action
   */
  export type ReservationCountOutputTypeCountCalificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionHostUsuarioWhereInput
  }


  /**
   * Count Type DescuentoCountOutputType
   */

  export type DescuentoCountOutputType = {
    reservas: number
  }

  export type DescuentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | DescuentoCountOutputTypeCountReservasArgs
  }

  // Custom InputTypes
  /**
   * DescuentoCountOutputType without action
   */
  export type DescuentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescuentoCountOutputType
     */
    select?: DescuentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DescuentoCountOutputType without action
   */
  export type DescuentoCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    nombre: string | null
    email: string | null
    password: string | null
    googleId: string | null
    image: string | null
    telefono: string | null
    genero: $Enums.Genero | null
    fechaNacimiento: Date | null
    direccion: string | null
    ciudad: string | null
    provincia: string | null
    pais: string | null
    createdAt: Date | null
    updatedAt: Date | null
    role: $Enums.UserRole | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    nombre: string | null
    email: string | null
    password: string | null
    googleId: string | null
    image: string | null
    telefono: string | null
    genero: $Enums.Genero | null
    fechaNacimiento: Date | null
    direccion: string | null
    ciudad: string | null
    provincia: string | null
    pais: string | null
    createdAt: Date | null
    updatedAt: Date | null
    role: $Enums.UserRole | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    nombre: number
    email: number
    password: number
    googleId: number
    image: number
    telefono: number
    genero: number
    fechaNacimiento: number
    direccion: number
    ciudad: number
    provincia: number
    pais: number
    createdAt: number
    updatedAt: number
    role: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    googleId?: true
    image?: true
    telefono?: true
    genero?: true
    fechaNacimiento?: true
    direccion?: true
    ciudad?: true
    provincia?: true
    pais?: true
    createdAt?: true
    updatedAt?: true
    role?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    googleId?: true
    image?: true
    telefono?: true
    genero?: true
    fechaNacimiento?: true
    direccion?: true
    ciudad?: true
    provincia?: true
    pais?: true
    createdAt?: true
    updatedAt?: true
    role?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    googleId?: true
    image?: true
    telefono?: true
    genero?: true
    fechaNacimiento?: true
    direccion?: true
    ciudad?: true
    provincia?: true
    pais?: true
    createdAt?: true
    updatedAt?: true
    role?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    nombre: string | null
    email: string
    password: string | null
    googleId: string | null
    image: string | null
    telefono: string | null
    genero: $Enums.Genero | null
    fechaNacimiento: Date | null
    direccion: string | null
    ciudad: string | null
    provincia: string | null
    pais: string | null
    createdAt: Date
    updatedAt: Date
    role: $Enums.UserRole
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    googleId?: boolean
    image?: boolean
    telefono?: boolean
    genero?: boolean
    fechaNacimiento?: boolean
    direccion?: boolean
    ciudad?: boolean
    provincia?: boolean
    pais?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    reports?: boolean | User$reportsArgs<ExtArgs>
    reservations?: boolean | User$reservationsArgs<ExtArgs>
    cars?: boolean | User$carsArgs<ExtArgs>
    calificacionesHechas?: boolean | User$calificacionesHechasArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    googleId?: boolean
    image?: boolean
    telefono?: boolean
    genero?: boolean
    fechaNacimiento?: boolean
    direccion?: boolean
    ciudad?: boolean
    provincia?: boolean
    pais?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    googleId?: boolean
    image?: boolean
    telefono?: boolean
    genero?: boolean
    fechaNacimiento?: boolean
    direccion?: boolean
    ciudad?: boolean
    provincia?: boolean
    pais?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    googleId?: boolean
    image?: boolean
    telefono?: boolean
    genero?: boolean
    fechaNacimiento?: boolean
    direccion?: boolean
    ciudad?: boolean
    provincia?: boolean
    pais?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "email" | "password" | "googleId" | "image" | "telefono" | "genero" | "fechaNacimiento" | "direccion" | "ciudad" | "provincia" | "pais" | "createdAt" | "updatedAt" | "role", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    reports?: boolean | User$reportsArgs<ExtArgs>
    reservations?: boolean | User$reservationsArgs<ExtArgs>
    cars?: boolean | User$carsArgs<ExtArgs>
    calificacionesHechas?: boolean | User$calificacionesHechasArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      reports: Prisma.$ReportPayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
      cars: Prisma.$CarPayload<ExtArgs>[]
      calificacionesHechas: Prisma.$CalificacionHostUsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre: string | null
      email: string
      password: string | null
      googleId: string | null
      image: string | null
      telefono: string | null
      genero: $Enums.Genero | null
      fechaNacimiento: Date | null
      direccion: string | null
      ciudad: string | null
      provincia: string | null
      pais: string | null
      createdAt: Date
      updatedAt: Date
      role: $Enums.UserRole
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reviews<T extends User$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reports<T extends User$reportsArgs<ExtArgs> = {}>(args?: Subset<T, User$reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends User$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, User$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cars<T extends User$carsArgs<ExtArgs> = {}>(args?: Subset<T, User$carsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calificacionesHechas<T extends User$calificacionesHechasArgs<ExtArgs> = {}>(args?: Subset<T, User$calificacionesHechasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly nombre: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly googleId: FieldRef<"User", 'String'>
    readonly image: FieldRef<"User", 'String'>
    readonly telefono: FieldRef<"User", 'String'>
    readonly genero: FieldRef<"User", 'Genero'>
    readonly fechaNacimiento: FieldRef<"User", 'DateTime'>
    readonly direccion: FieldRef<"User", 'String'>
    readonly ciudad: FieldRef<"User", 'String'>
    readonly provincia: FieldRef<"User", 'String'>
    readonly pais: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly role: FieldRef<"User", 'UserRole'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.reviews
   */
  export type User$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * User.reports
   */
  export type User$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    cursor?: ReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * User.reservations
   */
  export type User$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * User.cars
   */
  export type User$carsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    where?: CarWhereInput
    orderBy?: CarOrderByWithRelationInput | CarOrderByWithRelationInput[]
    cursor?: CarWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CarScalarFieldEnum | CarScalarFieldEnum[]
  }

  /**
   * User.calificacionesHechas
   */
  export type User$calificacionesHechasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    where?: CalificacionHostUsuarioWhereInput
    orderBy?: CalificacionHostUsuarioOrderByWithRelationInput | CalificacionHostUsuarioOrderByWithRelationInput[]
    cursor?: CalificacionHostUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalificacionHostUsuarioScalarFieldEnum | CalificacionHostUsuarioScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Renter
   */

  export type AggregateRenter = {
    _count: RenterCountAggregateOutputType | null
    _avg: RenterAvgAggregateOutputType | null
    _sum: RenterSumAggregateOutputType | null
    _min: RenterMinAggregateOutputType | null
    _max: RenterMaxAggregateOutputType | null
  }

  export type RenterAvgAggregateOutputType = {
    age: number | null
    rating: number | null
  }

  export type RenterSumAggregateOutputType = {
    age: number | null
    rating: number | null
  }

  export type RenterMinAggregateOutputType = {
    id: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    occupation: string | null
    address: string | null
    age: number | null
    profilePicture: string | null
    rating: number | null
    memberSince: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RenterMaxAggregateOutputType = {
    id: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    occupation: string | null
    address: string | null
    age: number | null
    profilePicture: string | null
    rating: number | null
    memberSince: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RenterCountAggregateOutputType = {
    id: number
    firstName: number
    lastName: number
    email: number
    phone: number
    occupation: number
    address: number
    age: number
    profilePicture: number
    rating: number
    memberSince: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RenterAvgAggregateInputType = {
    age?: true
    rating?: true
  }

  export type RenterSumAggregateInputType = {
    age?: true
    rating?: true
  }

  export type RenterMinAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    occupation?: true
    address?: true
    age?: true
    profilePicture?: true
    rating?: true
    memberSince?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RenterMaxAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    occupation?: true
    address?: true
    age?: true
    profilePicture?: true
    rating?: true
    memberSince?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RenterCountAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    occupation?: true
    address?: true
    age?: true
    profilePicture?: true
    rating?: true
    memberSince?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RenterAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Renter to aggregate.
     */
    where?: RenterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Renters to fetch.
     */
    orderBy?: RenterOrderByWithRelationInput | RenterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RenterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Renters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Renters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Renters
    **/
    _count?: true | RenterCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RenterAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RenterSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RenterMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RenterMaxAggregateInputType
  }

  export type GetRenterAggregateType<T extends RenterAggregateArgs> = {
        [P in keyof T & keyof AggregateRenter]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRenter[P]>
      : GetScalarType<T[P], AggregateRenter[P]>
  }




  export type RenterGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RenterWhereInput
    orderBy?: RenterOrderByWithAggregationInput | RenterOrderByWithAggregationInput[]
    by: RenterScalarFieldEnum[] | RenterScalarFieldEnum
    having?: RenterScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RenterCountAggregateInputType | true
    _avg?: RenterAvgAggregateInputType
    _sum?: RenterSumAggregateInputType
    _min?: RenterMinAggregateInputType
    _max?: RenterMaxAggregateInputType
  }

  export type RenterGroupByOutputType = {
    id: string
    firstName: string
    lastName: string
    email: string
    phone: string | null
    occupation: string | null
    address: string | null
    age: number | null
    profilePicture: string | null
    rating: number
    memberSince: Date
    createdAt: Date
    updatedAt: Date
    _count: RenterCountAggregateOutputType | null
    _avg: RenterAvgAggregateOutputType | null
    _sum: RenterSumAggregateOutputType | null
    _min: RenterMinAggregateOutputType | null
    _max: RenterMaxAggregateOutputType | null
  }

  type GetRenterGroupByPayload<T extends RenterGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RenterGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RenterGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RenterGroupByOutputType[P]>
            : GetScalarType<T[P], RenterGroupByOutputType[P]>
        }
      >
    >


  export type RenterSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    occupation?: boolean
    address?: boolean
    age?: boolean
    profilePicture?: boolean
    rating?: boolean
    memberSince?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    reviews?: boolean | Renter$reviewsArgs<ExtArgs>
    reports?: boolean | Renter$reportsArgs<ExtArgs>
    reservations?: boolean | Renter$reservationsArgs<ExtArgs>
    favoritos?: boolean | Renter$favoritosArgs<ExtArgs>
    calificacionesRecibidas?: boolean | Renter$calificacionesRecibidasArgs<ExtArgs>
    _count?: boolean | RenterCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["renter"]>

  export type RenterSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    occupation?: boolean
    address?: boolean
    age?: boolean
    profilePicture?: boolean
    rating?: boolean
    memberSince?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["renter"]>

  export type RenterSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    occupation?: boolean
    address?: boolean
    age?: boolean
    profilePicture?: boolean
    rating?: boolean
    memberSince?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["renter"]>

  export type RenterSelectScalar = {
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    occupation?: boolean
    address?: boolean
    age?: boolean
    profilePicture?: boolean
    rating?: boolean
    memberSince?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RenterOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firstName" | "lastName" | "email" | "phone" | "occupation" | "address" | "age" | "profilePicture" | "rating" | "memberSince" | "createdAt" | "updatedAt", ExtArgs["result"]["renter"]>
  export type RenterInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviews?: boolean | Renter$reviewsArgs<ExtArgs>
    reports?: boolean | Renter$reportsArgs<ExtArgs>
    reservations?: boolean | Renter$reservationsArgs<ExtArgs>
    favoritos?: boolean | Renter$favoritosArgs<ExtArgs>
    calificacionesRecibidas?: boolean | Renter$calificacionesRecibidasArgs<ExtArgs>
    _count?: boolean | RenterCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RenterIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RenterIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RenterPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Renter"
    objects: {
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      reports: Prisma.$ReportPayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
      favoritos: Prisma.$FavoritoPayload<ExtArgs>[]
      calificacionesRecibidas: Prisma.$CalificacionHostUsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      firstName: string
      lastName: string
      email: string
      phone: string | null
      occupation: string | null
      address: string | null
      age: number | null
      profilePicture: string | null
      rating: number
      memberSince: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["renter"]>
    composites: {}
  }

  type RenterGetPayload<S extends boolean | null | undefined | RenterDefaultArgs> = $Result.GetResult<Prisma.$RenterPayload, S>

  type RenterCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RenterFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RenterCountAggregateInputType | true
    }

  export interface RenterDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Renter'], meta: { name: 'Renter' } }
    /**
     * Find zero or one Renter that matches the filter.
     * @param {RenterFindUniqueArgs} args - Arguments to find a Renter
     * @example
     * // Get one Renter
     * const renter = await prisma.renter.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RenterFindUniqueArgs>(args: SelectSubset<T, RenterFindUniqueArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Renter that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RenterFindUniqueOrThrowArgs} args - Arguments to find a Renter
     * @example
     * // Get one Renter
     * const renter = await prisma.renter.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RenterFindUniqueOrThrowArgs>(args: SelectSubset<T, RenterFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Renter that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterFindFirstArgs} args - Arguments to find a Renter
     * @example
     * // Get one Renter
     * const renter = await prisma.renter.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RenterFindFirstArgs>(args?: SelectSubset<T, RenterFindFirstArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Renter that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterFindFirstOrThrowArgs} args - Arguments to find a Renter
     * @example
     * // Get one Renter
     * const renter = await prisma.renter.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RenterFindFirstOrThrowArgs>(args?: SelectSubset<T, RenterFindFirstOrThrowArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Renters that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Renters
     * const renters = await prisma.renter.findMany()
     * 
     * // Get first 10 Renters
     * const renters = await prisma.renter.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const renterWithIdOnly = await prisma.renter.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RenterFindManyArgs>(args?: SelectSubset<T, RenterFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Renter.
     * @param {RenterCreateArgs} args - Arguments to create a Renter.
     * @example
     * // Create one Renter
     * const Renter = await prisma.renter.create({
     *   data: {
     *     // ... data to create a Renter
     *   }
     * })
     * 
     */
    create<T extends RenterCreateArgs>(args: SelectSubset<T, RenterCreateArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Renters.
     * @param {RenterCreateManyArgs} args - Arguments to create many Renters.
     * @example
     * // Create many Renters
     * const renter = await prisma.renter.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RenterCreateManyArgs>(args?: SelectSubset<T, RenterCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Renters and returns the data saved in the database.
     * @param {RenterCreateManyAndReturnArgs} args - Arguments to create many Renters.
     * @example
     * // Create many Renters
     * const renter = await prisma.renter.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Renters and only return the `id`
     * const renterWithIdOnly = await prisma.renter.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RenterCreateManyAndReturnArgs>(args?: SelectSubset<T, RenterCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Renter.
     * @param {RenterDeleteArgs} args - Arguments to delete one Renter.
     * @example
     * // Delete one Renter
     * const Renter = await prisma.renter.delete({
     *   where: {
     *     // ... filter to delete one Renter
     *   }
     * })
     * 
     */
    delete<T extends RenterDeleteArgs>(args: SelectSubset<T, RenterDeleteArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Renter.
     * @param {RenterUpdateArgs} args - Arguments to update one Renter.
     * @example
     * // Update one Renter
     * const renter = await prisma.renter.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RenterUpdateArgs>(args: SelectSubset<T, RenterUpdateArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Renters.
     * @param {RenterDeleteManyArgs} args - Arguments to filter Renters to delete.
     * @example
     * // Delete a few Renters
     * const { count } = await prisma.renter.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RenterDeleteManyArgs>(args?: SelectSubset<T, RenterDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Renters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Renters
     * const renter = await prisma.renter.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RenterUpdateManyArgs>(args: SelectSubset<T, RenterUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Renters and returns the data updated in the database.
     * @param {RenterUpdateManyAndReturnArgs} args - Arguments to update many Renters.
     * @example
     * // Update many Renters
     * const renter = await prisma.renter.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Renters and only return the `id`
     * const renterWithIdOnly = await prisma.renter.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RenterUpdateManyAndReturnArgs>(args: SelectSubset<T, RenterUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Renter.
     * @param {RenterUpsertArgs} args - Arguments to update or create a Renter.
     * @example
     * // Update or create a Renter
     * const renter = await prisma.renter.upsert({
     *   create: {
     *     // ... data to create a Renter
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Renter we want to update
     *   }
     * })
     */
    upsert<T extends RenterUpsertArgs>(args: SelectSubset<T, RenterUpsertArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Renters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterCountArgs} args - Arguments to filter Renters to count.
     * @example
     * // Count the number of Renters
     * const count = await prisma.renter.count({
     *   where: {
     *     // ... the filter for the Renters we want to count
     *   }
     * })
    **/
    count<T extends RenterCountArgs>(
      args?: Subset<T, RenterCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RenterCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Renter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RenterAggregateArgs>(args: Subset<T, RenterAggregateArgs>): Prisma.PrismaPromise<GetRenterAggregateType<T>>

    /**
     * Group by Renter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RenterGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RenterGroupByArgs['orderBy'] }
        : { orderBy?: RenterGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RenterGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRenterGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Renter model
   */
  readonly fields: RenterFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Renter.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RenterClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reviews<T extends Renter$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Renter$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reports<T extends Renter$reportsArgs<ExtArgs> = {}>(args?: Subset<T, Renter$reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends Renter$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, Renter$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favoritos<T extends Renter$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, Renter$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calificacionesRecibidas<T extends Renter$calificacionesRecibidasArgs<ExtArgs> = {}>(args?: Subset<T, Renter$calificacionesRecibidasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Renter model
   */
  interface RenterFieldRefs {
    readonly id: FieldRef<"Renter", 'String'>
    readonly firstName: FieldRef<"Renter", 'String'>
    readonly lastName: FieldRef<"Renter", 'String'>
    readonly email: FieldRef<"Renter", 'String'>
    readonly phone: FieldRef<"Renter", 'String'>
    readonly occupation: FieldRef<"Renter", 'String'>
    readonly address: FieldRef<"Renter", 'String'>
    readonly age: FieldRef<"Renter", 'Int'>
    readonly profilePicture: FieldRef<"Renter", 'String'>
    readonly rating: FieldRef<"Renter", 'Float'>
    readonly memberSince: FieldRef<"Renter", 'DateTime'>
    readonly createdAt: FieldRef<"Renter", 'DateTime'>
    readonly updatedAt: FieldRef<"Renter", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Renter findUnique
   */
  export type RenterFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renter to fetch.
     */
    where: RenterWhereUniqueInput
  }

  /**
   * Renter findUniqueOrThrow
   */
  export type RenterFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renter to fetch.
     */
    where: RenterWhereUniqueInput
  }

  /**
   * Renter findFirst
   */
  export type RenterFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renter to fetch.
     */
    where?: RenterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Renters to fetch.
     */
    orderBy?: RenterOrderByWithRelationInput | RenterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Renters.
     */
    cursor?: RenterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Renters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Renters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Renters.
     */
    distinct?: RenterScalarFieldEnum | RenterScalarFieldEnum[]
  }

  /**
   * Renter findFirstOrThrow
   */
  export type RenterFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renter to fetch.
     */
    where?: RenterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Renters to fetch.
     */
    orderBy?: RenterOrderByWithRelationInput | RenterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Renters.
     */
    cursor?: RenterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Renters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Renters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Renters.
     */
    distinct?: RenterScalarFieldEnum | RenterScalarFieldEnum[]
  }

  /**
   * Renter findMany
   */
  export type RenterFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renters to fetch.
     */
    where?: RenterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Renters to fetch.
     */
    orderBy?: RenterOrderByWithRelationInput | RenterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Renters.
     */
    cursor?: RenterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Renters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Renters.
     */
    skip?: number
    distinct?: RenterScalarFieldEnum | RenterScalarFieldEnum[]
  }

  /**
   * Renter create
   */
  export type RenterCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * The data needed to create a Renter.
     */
    data: XOR<RenterCreateInput, RenterUncheckedCreateInput>
  }

  /**
   * Renter createMany
   */
  export type RenterCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Renters.
     */
    data: RenterCreateManyInput | RenterCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Renter createManyAndReturn
   */
  export type RenterCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * The data used to create many Renters.
     */
    data: RenterCreateManyInput | RenterCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Renter update
   */
  export type RenterUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * The data needed to update a Renter.
     */
    data: XOR<RenterUpdateInput, RenterUncheckedUpdateInput>
    /**
     * Choose, which Renter to update.
     */
    where: RenterWhereUniqueInput
  }

  /**
   * Renter updateMany
   */
  export type RenterUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Renters.
     */
    data: XOR<RenterUpdateManyMutationInput, RenterUncheckedUpdateManyInput>
    /**
     * Filter which Renters to update
     */
    where?: RenterWhereInput
    /**
     * Limit how many Renters to update.
     */
    limit?: number
  }

  /**
   * Renter updateManyAndReturn
   */
  export type RenterUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * The data used to update Renters.
     */
    data: XOR<RenterUpdateManyMutationInput, RenterUncheckedUpdateManyInput>
    /**
     * Filter which Renters to update
     */
    where?: RenterWhereInput
    /**
     * Limit how many Renters to update.
     */
    limit?: number
  }

  /**
   * Renter upsert
   */
  export type RenterUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * The filter to search for the Renter to update in case it exists.
     */
    where: RenterWhereUniqueInput
    /**
     * In case the Renter found by the `where` argument doesn't exist, create a new Renter with this data.
     */
    create: XOR<RenterCreateInput, RenterUncheckedCreateInput>
    /**
     * In case the Renter was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RenterUpdateInput, RenterUncheckedUpdateInput>
  }

  /**
   * Renter delete
   */
  export type RenterDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter which Renter to delete.
     */
    where: RenterWhereUniqueInput
  }

  /**
   * Renter deleteMany
   */
  export type RenterDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Renters to delete
     */
    where?: RenterWhereInput
    /**
     * Limit how many Renters to delete.
     */
    limit?: number
  }

  /**
   * Renter.reviews
   */
  export type Renter$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Renter.reports
   */
  export type Renter$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    cursor?: ReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Renter.reservations
   */
  export type Renter$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Renter.favoritos
   */
  export type Renter$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    where?: FavoritoWhereInput
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    cursor?: FavoritoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Renter.calificacionesRecibidas
   */
  export type Renter$calificacionesRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    where?: CalificacionHostUsuarioWhereInput
    orderBy?: CalificacionHostUsuarioOrderByWithRelationInput | CalificacionHostUsuarioOrderByWithRelationInput[]
    cursor?: CalificacionHostUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalificacionHostUsuarioScalarFieldEnum | CalificacionHostUsuarioScalarFieldEnum[]
  }

  /**
   * Renter without action
   */
  export type RenterDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
  }


  /**
   * Model Car
   */

  export type AggregateCar = {
    _count: CarCountAggregateOutputType | null
    _avg: CarAvgAggregateOutputType | null
    _sum: CarSumAggregateOutputType | null
    _min: CarMinAggregateOutputType | null
    _max: CarMaxAggregateOutputType | null
  }

  export type CarAvgAggregateOutputType = {
    año: number | null
    asientos: number | null
    puertas: number | null
    precioPorDia: number | null
    numMantenimientos: number | null
  }

  export type CarSumAggregateOutputType = {
    año: number | null
    asientos: number | null
    puertas: number | null
    precioPorDia: number | null
    numMantenimientos: number | null
  }

  export type CarMinAggregateOutputType = {
    id: string | null
    vin: string | null
    año: number | null
    marca: string | null
    modelo: string | null
    placa: string | null
    asientos: number | null
    puertas: number | null
    soat: boolean | null
    precioPorDia: number | null
    numMantenimientos: number | null
    transmision: string | null
    estado: $Enums.CarStatus | null
    direccion: string | null
    ciudad: string | null
    provincia: string | null
    pais: string | null
    color: string | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CarMaxAggregateOutputType = {
    id: string | null
    vin: string | null
    año: number | null
    marca: string | null
    modelo: string | null
    placa: string | null
    asientos: number | null
    puertas: number | null
    soat: boolean | null
    precioPorDia: number | null
    numMantenimientos: number | null
    transmision: string | null
    estado: $Enums.CarStatus | null
    direccion: string | null
    ciudad: string | null
    provincia: string | null
    pais: string | null
    color: string | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CarCountAggregateOutputType = {
    id: number
    vin: number
    año: number
    marca: number
    modelo: number
    placa: number
    asientos: number
    puertas: number
    soat: number
    precioPorDia: number
    numMantenimientos: number
    transmision: number
    estado: number
    direccion: number
    ciudad: number
    provincia: number
    pais: number
    color: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CarAvgAggregateInputType = {
    año?: true
    asientos?: true
    puertas?: true
    precioPorDia?: true
    numMantenimientos?: true
  }

  export type CarSumAggregateInputType = {
    año?: true
    asientos?: true
    puertas?: true
    precioPorDia?: true
    numMantenimientos?: true
  }

  export type CarMinAggregateInputType = {
    id?: true
    vin?: true
    año?: true
    marca?: true
    modelo?: true
    placa?: true
    asientos?: true
    puertas?: true
    soat?: true
    precioPorDia?: true
    numMantenimientos?: true
    transmision?: true
    estado?: true
    direccion?: true
    ciudad?: true
    provincia?: true
    pais?: true
    color?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CarMaxAggregateInputType = {
    id?: true
    vin?: true
    año?: true
    marca?: true
    modelo?: true
    placa?: true
    asientos?: true
    puertas?: true
    soat?: true
    precioPorDia?: true
    numMantenimientos?: true
    transmision?: true
    estado?: true
    direccion?: true
    ciudad?: true
    provincia?: true
    pais?: true
    color?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CarCountAggregateInputType = {
    id?: true
    vin?: true
    año?: true
    marca?: true
    modelo?: true
    placa?: true
    asientos?: true
    puertas?: true
    soat?: true
    precioPorDia?: true
    numMantenimientos?: true
    transmision?: true
    estado?: true
    direccion?: true
    ciudad?: true
    provincia?: true
    pais?: true
    color?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CarAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Car to aggregate.
     */
    where?: CarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cars to fetch.
     */
    orderBy?: CarOrderByWithRelationInput | CarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cars
    **/
    _count?: true | CarCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CarAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CarSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CarMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CarMaxAggregateInputType
  }

  export type GetCarAggregateType<T extends CarAggregateArgs> = {
        [P in keyof T & keyof AggregateCar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCar[P]>
      : GetScalarType<T[P], AggregateCar[P]>
  }




  export type CarGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarWhereInput
    orderBy?: CarOrderByWithAggregationInput | CarOrderByWithAggregationInput[]
    by: CarScalarFieldEnum[] | CarScalarFieldEnum
    having?: CarScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CarCountAggregateInputType | true
    _avg?: CarAvgAggregateInputType
    _sum?: CarSumAggregateInputType
    _min?: CarMinAggregateInputType
    _max?: CarMaxAggregateInputType
  }

  export type CarGroupByOutputType = {
    id: string
    vin: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos: number | null
    puertas: number | null
    soat: boolean | null
    precioPorDia: number
    numMantenimientos: number | null
    transmision: string | null
    estado: $Enums.CarStatus
    direccion: string | null
    ciudad: string | null
    provincia: string | null
    pais: string | null
    color: string
    userId: string
    createdAt: Date
    updatedAt: Date
    _count: CarCountAggregateOutputType | null
    _avg: CarAvgAggregateOutputType | null
    _sum: CarSumAggregateOutputType | null
    _min: CarMinAggregateOutputType | null
    _max: CarMaxAggregateOutputType | null
  }

  type GetCarGroupByPayload<T extends CarGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CarGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CarGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CarGroupByOutputType[P]>
            : GetScalarType<T[P], CarGroupByOutputType[P]>
        }
      >
    >


  export type CarSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    vin?: boolean
    año?: boolean
    marca?: boolean
    modelo?: boolean
    placa?: boolean
    asientos?: boolean
    puertas?: boolean
    soat?: boolean
    precioPorDia?: boolean
    numMantenimientos?: boolean
    transmision?: boolean
    estado?: boolean
    direccion?: boolean
    ciudad?: boolean
    provincia?: boolean
    pais?: boolean
    color?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    combustibles?: boolean | Car$combustiblesArgs<ExtArgs>
    caracteristicas?: boolean | Car$caracteristicasArgs<ExtArgs>
    imagenes?: boolean | Car$imagenesArgs<ExtArgs>
    favoritos?: boolean | Car$favoritosArgs<ExtArgs>
    reservations?: boolean | Car$reservationsArgs<ExtArgs>
    reviews?: boolean | Car$reviewsArgs<ExtArgs>
    _count?: boolean | CarCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["car"]>

  export type CarSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    vin?: boolean
    año?: boolean
    marca?: boolean
    modelo?: boolean
    placa?: boolean
    asientos?: boolean
    puertas?: boolean
    soat?: boolean
    precioPorDia?: boolean
    numMantenimientos?: boolean
    transmision?: boolean
    estado?: boolean
    direccion?: boolean
    ciudad?: boolean
    provincia?: boolean
    pais?: boolean
    color?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["car"]>

  export type CarSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    vin?: boolean
    año?: boolean
    marca?: boolean
    modelo?: boolean
    placa?: boolean
    asientos?: boolean
    puertas?: boolean
    soat?: boolean
    precioPorDia?: boolean
    numMantenimientos?: boolean
    transmision?: boolean
    estado?: boolean
    direccion?: boolean
    ciudad?: boolean
    provincia?: boolean
    pais?: boolean
    color?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["car"]>

  export type CarSelectScalar = {
    id?: boolean
    vin?: boolean
    año?: boolean
    marca?: boolean
    modelo?: boolean
    placa?: boolean
    asientos?: boolean
    puertas?: boolean
    soat?: boolean
    precioPorDia?: boolean
    numMantenimientos?: boolean
    transmision?: boolean
    estado?: boolean
    direccion?: boolean
    ciudad?: boolean
    provincia?: boolean
    pais?: boolean
    color?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CarOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "vin" | "año" | "marca" | "modelo" | "placa" | "asientos" | "puertas" | "soat" | "precioPorDia" | "numMantenimientos" | "transmision" | "estado" | "direccion" | "ciudad" | "provincia" | "pais" | "color" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["car"]>
  export type CarInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    combustibles?: boolean | Car$combustiblesArgs<ExtArgs>
    caracteristicas?: boolean | Car$caracteristicasArgs<ExtArgs>
    imagenes?: boolean | Car$imagenesArgs<ExtArgs>
    favoritos?: boolean | Car$favoritosArgs<ExtArgs>
    reservations?: boolean | Car$reservationsArgs<ExtArgs>
    reviews?: boolean | Car$reviewsArgs<ExtArgs>
    _count?: boolean | CarCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CarIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CarIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CarPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Car"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      combustibles: Prisma.$CombustiblePayload<ExtArgs>[]
      caracteristicas: Prisma.$CaracteristicaAdicionalPayload<ExtArgs>[]
      imagenes: Prisma.$ImagenPayload<ExtArgs>[]
      favoritos: Prisma.$FavoritoPayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      vin: string | null
      año: number
      marca: string
      modelo: string
      placa: string
      asientos: number | null
      puertas: number | null
      soat: boolean | null
      precioPorDia: number
      numMantenimientos: number | null
      transmision: string | null
      estado: $Enums.CarStatus
      direccion: string | null
      ciudad: string | null
      provincia: string | null
      pais: string | null
      color: string
      userId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["car"]>
    composites: {}
  }

  type CarGetPayload<S extends boolean | null | undefined | CarDefaultArgs> = $Result.GetResult<Prisma.$CarPayload, S>

  type CarCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CarFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CarCountAggregateInputType | true
    }

  export interface CarDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Car'], meta: { name: 'Car' } }
    /**
     * Find zero or one Car that matches the filter.
     * @param {CarFindUniqueArgs} args - Arguments to find a Car
     * @example
     * // Get one Car
     * const car = await prisma.car.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CarFindUniqueArgs>(args: SelectSubset<T, CarFindUniqueArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Car that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CarFindUniqueOrThrowArgs} args - Arguments to find a Car
     * @example
     * // Get one Car
     * const car = await prisma.car.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CarFindUniqueOrThrowArgs>(args: SelectSubset<T, CarFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Car that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarFindFirstArgs} args - Arguments to find a Car
     * @example
     * // Get one Car
     * const car = await prisma.car.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CarFindFirstArgs>(args?: SelectSubset<T, CarFindFirstArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Car that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarFindFirstOrThrowArgs} args - Arguments to find a Car
     * @example
     * // Get one Car
     * const car = await prisma.car.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CarFindFirstOrThrowArgs>(args?: SelectSubset<T, CarFindFirstOrThrowArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cars
     * const cars = await prisma.car.findMany()
     * 
     * // Get first 10 Cars
     * const cars = await prisma.car.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const carWithIdOnly = await prisma.car.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CarFindManyArgs>(args?: SelectSubset<T, CarFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Car.
     * @param {CarCreateArgs} args - Arguments to create a Car.
     * @example
     * // Create one Car
     * const Car = await prisma.car.create({
     *   data: {
     *     // ... data to create a Car
     *   }
     * })
     * 
     */
    create<T extends CarCreateArgs>(args: SelectSubset<T, CarCreateArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cars.
     * @param {CarCreateManyArgs} args - Arguments to create many Cars.
     * @example
     * // Create many Cars
     * const car = await prisma.car.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CarCreateManyArgs>(args?: SelectSubset<T, CarCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cars and returns the data saved in the database.
     * @param {CarCreateManyAndReturnArgs} args - Arguments to create many Cars.
     * @example
     * // Create many Cars
     * const car = await prisma.car.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cars and only return the `id`
     * const carWithIdOnly = await prisma.car.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CarCreateManyAndReturnArgs>(args?: SelectSubset<T, CarCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Car.
     * @param {CarDeleteArgs} args - Arguments to delete one Car.
     * @example
     * // Delete one Car
     * const Car = await prisma.car.delete({
     *   where: {
     *     // ... filter to delete one Car
     *   }
     * })
     * 
     */
    delete<T extends CarDeleteArgs>(args: SelectSubset<T, CarDeleteArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Car.
     * @param {CarUpdateArgs} args - Arguments to update one Car.
     * @example
     * // Update one Car
     * const car = await prisma.car.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CarUpdateArgs>(args: SelectSubset<T, CarUpdateArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cars.
     * @param {CarDeleteManyArgs} args - Arguments to filter Cars to delete.
     * @example
     * // Delete a few Cars
     * const { count } = await prisma.car.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CarDeleteManyArgs>(args?: SelectSubset<T, CarDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cars
     * const car = await prisma.car.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CarUpdateManyArgs>(args: SelectSubset<T, CarUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cars and returns the data updated in the database.
     * @param {CarUpdateManyAndReturnArgs} args - Arguments to update many Cars.
     * @example
     * // Update many Cars
     * const car = await prisma.car.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cars and only return the `id`
     * const carWithIdOnly = await prisma.car.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CarUpdateManyAndReturnArgs>(args: SelectSubset<T, CarUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Car.
     * @param {CarUpsertArgs} args - Arguments to update or create a Car.
     * @example
     * // Update or create a Car
     * const car = await prisma.car.upsert({
     *   create: {
     *     // ... data to create a Car
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Car we want to update
     *   }
     * })
     */
    upsert<T extends CarUpsertArgs>(args: SelectSubset<T, CarUpsertArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarCountArgs} args - Arguments to filter Cars to count.
     * @example
     * // Count the number of Cars
     * const count = await prisma.car.count({
     *   where: {
     *     // ... the filter for the Cars we want to count
     *   }
     * })
    **/
    count<T extends CarCountArgs>(
      args?: Subset<T, CarCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CarCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Car.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CarAggregateArgs>(args: Subset<T, CarAggregateArgs>): Prisma.PrismaPromise<GetCarAggregateType<T>>

    /**
     * Group by Car.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CarGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CarGroupByArgs['orderBy'] }
        : { orderBy?: CarGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Car model
   */
  readonly fields: CarFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Car.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CarClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    combustibles<T extends Car$combustiblesArgs<ExtArgs> = {}>(args?: Subset<T, Car$combustiblesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    caracteristicas<T extends Car$caracteristicasArgs<ExtArgs> = {}>(args?: Subset<T, Car$caracteristicasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    imagenes<T extends Car$imagenesArgs<ExtArgs> = {}>(args?: Subset<T, Car$imagenesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favoritos<T extends Car$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, Car$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends Car$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, Car$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends Car$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Car$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Car model
   */
  interface CarFieldRefs {
    readonly id: FieldRef<"Car", 'String'>
    readonly vin: FieldRef<"Car", 'String'>
    readonly año: FieldRef<"Car", 'Int'>
    readonly marca: FieldRef<"Car", 'String'>
    readonly modelo: FieldRef<"Car", 'String'>
    readonly placa: FieldRef<"Car", 'String'>
    readonly asientos: FieldRef<"Car", 'Int'>
    readonly puertas: FieldRef<"Car", 'Int'>
    readonly soat: FieldRef<"Car", 'Boolean'>
    readonly precioPorDia: FieldRef<"Car", 'Float'>
    readonly numMantenimientos: FieldRef<"Car", 'Int'>
    readonly transmision: FieldRef<"Car", 'String'>
    readonly estado: FieldRef<"Car", 'CarStatus'>
    readonly direccion: FieldRef<"Car", 'String'>
    readonly ciudad: FieldRef<"Car", 'String'>
    readonly provincia: FieldRef<"Car", 'String'>
    readonly pais: FieldRef<"Car", 'String'>
    readonly color: FieldRef<"Car", 'String'>
    readonly userId: FieldRef<"Car", 'String'>
    readonly createdAt: FieldRef<"Car", 'DateTime'>
    readonly updatedAt: FieldRef<"Car", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Car findUnique
   */
  export type CarFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    /**
     * Filter, which Car to fetch.
     */
    where: CarWhereUniqueInput
  }

  /**
   * Car findUniqueOrThrow
   */
  export type CarFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    /**
     * Filter, which Car to fetch.
     */
    where: CarWhereUniqueInput
  }

  /**
   * Car findFirst
   */
  export type CarFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    /**
     * Filter, which Car to fetch.
     */
    where?: CarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cars to fetch.
     */
    orderBy?: CarOrderByWithRelationInput | CarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cars.
     */
    cursor?: CarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cars.
     */
    distinct?: CarScalarFieldEnum | CarScalarFieldEnum[]
  }

  /**
   * Car findFirstOrThrow
   */
  export type CarFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    /**
     * Filter, which Car to fetch.
     */
    where?: CarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cars to fetch.
     */
    orderBy?: CarOrderByWithRelationInput | CarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cars.
     */
    cursor?: CarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cars.
     */
    distinct?: CarScalarFieldEnum | CarScalarFieldEnum[]
  }

  /**
   * Car findMany
   */
  export type CarFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    /**
     * Filter, which Cars to fetch.
     */
    where?: CarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cars to fetch.
     */
    orderBy?: CarOrderByWithRelationInput | CarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cars.
     */
    cursor?: CarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cars.
     */
    skip?: number
    distinct?: CarScalarFieldEnum | CarScalarFieldEnum[]
  }

  /**
   * Car create
   */
  export type CarCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    /**
     * The data needed to create a Car.
     */
    data: XOR<CarCreateInput, CarUncheckedCreateInput>
  }

  /**
   * Car createMany
   */
  export type CarCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cars.
     */
    data: CarCreateManyInput | CarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Car createManyAndReturn
   */
  export type CarCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * The data used to create many Cars.
     */
    data: CarCreateManyInput | CarCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Car update
   */
  export type CarUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    /**
     * The data needed to update a Car.
     */
    data: XOR<CarUpdateInput, CarUncheckedUpdateInput>
    /**
     * Choose, which Car to update.
     */
    where: CarWhereUniqueInput
  }

  /**
   * Car updateMany
   */
  export type CarUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cars.
     */
    data: XOR<CarUpdateManyMutationInput, CarUncheckedUpdateManyInput>
    /**
     * Filter which Cars to update
     */
    where?: CarWhereInput
    /**
     * Limit how many Cars to update.
     */
    limit?: number
  }

  /**
   * Car updateManyAndReturn
   */
  export type CarUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * The data used to update Cars.
     */
    data: XOR<CarUpdateManyMutationInput, CarUncheckedUpdateManyInput>
    /**
     * Filter which Cars to update
     */
    where?: CarWhereInput
    /**
     * Limit how many Cars to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Car upsert
   */
  export type CarUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    /**
     * The filter to search for the Car to update in case it exists.
     */
    where: CarWhereUniqueInput
    /**
     * In case the Car found by the `where` argument doesn't exist, create a new Car with this data.
     */
    create: XOR<CarCreateInput, CarUncheckedCreateInput>
    /**
     * In case the Car was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CarUpdateInput, CarUncheckedUpdateInput>
  }

  /**
   * Car delete
   */
  export type CarDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    /**
     * Filter which Car to delete.
     */
    where: CarWhereUniqueInput
  }

  /**
   * Car deleteMany
   */
  export type CarDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cars to delete
     */
    where?: CarWhereInput
    /**
     * Limit how many Cars to delete.
     */
    limit?: number
  }

  /**
   * Car.combustibles
   */
  export type Car$combustiblesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    where?: CombustibleWhereInput
    orderBy?: CombustibleOrderByWithRelationInput | CombustibleOrderByWithRelationInput[]
    cursor?: CombustibleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CombustibleScalarFieldEnum | CombustibleScalarFieldEnum[]
  }

  /**
   * Car.caracteristicas
   */
  export type Car$caracteristicasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    where?: CaracteristicaAdicionalWhereInput
    orderBy?: CaracteristicaAdicionalOrderByWithRelationInput | CaracteristicaAdicionalOrderByWithRelationInput[]
    cursor?: CaracteristicaAdicionalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CaracteristicaAdicionalScalarFieldEnum | CaracteristicaAdicionalScalarFieldEnum[]
  }

  /**
   * Car.imagenes
   */
  export type Car$imagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    where?: ImagenWhereInput
    orderBy?: ImagenOrderByWithRelationInput | ImagenOrderByWithRelationInput[]
    cursor?: ImagenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImagenScalarFieldEnum | ImagenScalarFieldEnum[]
  }

  /**
   * Car.favoritos
   */
  export type Car$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    where?: FavoritoWhereInput
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    cursor?: FavoritoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Car.reservations
   */
  export type Car$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Car.reviews
   */
  export type Car$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Car without action
   */
  export type CarDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
  }


  /**
   * Model Reservation
   */

  export type AggregateReservation = {
    _count: ReservationCountAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  export type ReservationMinAggregateOutputType = {
    id: string | null
    renterId: string | null
    hostId: string | null
    carId: string | null
    fechaInicio: Date | null
    fechaFin: Date | null
    fechaCreacion: Date | null
    fechaExpiracion: Date | null
    estado: $Enums.EstadoReservacion | null
    descuentoId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReservationMaxAggregateOutputType = {
    id: string | null
    renterId: string | null
    hostId: string | null
    carId: string | null
    fechaInicio: Date | null
    fechaFin: Date | null
    fechaCreacion: Date | null
    fechaExpiracion: Date | null
    estado: $Enums.EstadoReservacion | null
    descuentoId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReservationCountAggregateOutputType = {
    id: number
    renterId: number
    hostId: number
    carId: number
    fechaInicio: number
    fechaFin: number
    fechaCreacion: number
    fechaExpiracion: number
    estado: number
    descuentoId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReservationMinAggregateInputType = {
    id?: true
    renterId?: true
    hostId?: true
    carId?: true
    fechaInicio?: true
    fechaFin?: true
    fechaCreacion?: true
    fechaExpiracion?: true
    estado?: true
    descuentoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReservationMaxAggregateInputType = {
    id?: true
    renterId?: true
    hostId?: true
    carId?: true
    fechaInicio?: true
    fechaFin?: true
    fechaCreacion?: true
    fechaExpiracion?: true
    estado?: true
    descuentoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReservationCountAggregateInputType = {
    id?: true
    renterId?: true
    hostId?: true
    carId?: true
    fechaInicio?: true
    fechaFin?: true
    fechaCreacion?: true
    fechaExpiracion?: true
    estado?: true
    descuentoId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReservationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservation to aggregate.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservations
    **/
    _count?: true | ReservationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservationMaxAggregateInputType
  }

  export type GetReservationAggregateType<T extends ReservationAggregateArgs> = {
        [P in keyof T & keyof AggregateReservation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservation[P]>
      : GetScalarType<T[P], AggregateReservation[P]>
  }




  export type ReservationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithAggregationInput | ReservationOrderByWithAggregationInput[]
    by: ReservationScalarFieldEnum[] | ReservationScalarFieldEnum
    having?: ReservationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservationCountAggregateInputType | true
    _min?: ReservationMinAggregateInputType
    _max?: ReservationMaxAggregateInputType
  }

  export type ReservationGroupByOutputType = {
    id: string
    renterId: string
    hostId: string
    carId: string | null
    fechaInicio: Date
    fechaFin: Date
    fechaCreacion: Date
    fechaExpiracion: Date | null
    estado: $Enums.EstadoReservacion
    descuentoId: string | null
    createdAt: Date
    updatedAt: Date
    _count: ReservationCountAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  type GetReservationGroupByPayload<T extends ReservationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservationGroupByOutputType[P]>
            : GetScalarType<T[P], ReservationGroupByOutputType[P]>
        }
      >
    >


  export type ReservationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    hostId?: boolean
    carId?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    fechaCreacion?: boolean
    fechaExpiracion?: boolean
    estado?: boolean
    descuentoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    car?: boolean | Reservation$carArgs<ExtArgs>
    descuento?: boolean | Reservation$descuentoArgs<ExtArgs>
    reviews?: boolean | Reservation$reviewsArgs<ExtArgs>
    calificaciones?: boolean | Reservation$calificacionesArgs<ExtArgs>
    _count?: boolean | ReservationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>

  export type ReservationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    hostId?: boolean
    carId?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    fechaCreacion?: boolean
    fechaExpiracion?: boolean
    estado?: boolean
    descuentoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    car?: boolean | Reservation$carArgs<ExtArgs>
    descuento?: boolean | Reservation$descuentoArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>

  export type ReservationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    hostId?: boolean
    carId?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    fechaCreacion?: boolean
    fechaExpiracion?: boolean
    estado?: boolean
    descuentoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    car?: boolean | Reservation$carArgs<ExtArgs>
    descuento?: boolean | Reservation$descuentoArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>

  export type ReservationSelectScalar = {
    id?: boolean
    renterId?: boolean
    hostId?: boolean
    carId?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    fechaCreacion?: boolean
    fechaExpiracion?: boolean
    estado?: boolean
    descuentoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReservationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "renterId" | "hostId" | "carId" | "fechaInicio" | "fechaFin" | "fechaCreacion" | "fechaExpiracion" | "estado" | "descuentoId" | "createdAt" | "updatedAt", ExtArgs["result"]["reservation"]>
  export type ReservationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    car?: boolean | Reservation$carArgs<ExtArgs>
    descuento?: boolean | Reservation$descuentoArgs<ExtArgs>
    reviews?: boolean | Reservation$reviewsArgs<ExtArgs>
    calificaciones?: boolean | Reservation$calificacionesArgs<ExtArgs>
    _count?: boolean | ReservationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReservationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    car?: boolean | Reservation$carArgs<ExtArgs>
    descuento?: boolean | Reservation$descuentoArgs<ExtArgs>
  }
  export type ReservationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    car?: boolean | Reservation$carArgs<ExtArgs>
    descuento?: boolean | Reservation$descuentoArgs<ExtArgs>
  }

  export type $ReservationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reservation"
    objects: {
      renter: Prisma.$RenterPayload<ExtArgs>
      host: Prisma.$UserPayload<ExtArgs>
      car: Prisma.$CarPayload<ExtArgs> | null
      descuento: Prisma.$DescuentoPayload<ExtArgs> | null
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      calificaciones: Prisma.$CalificacionHostUsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      renterId: string
      hostId: string
      carId: string | null
      fechaInicio: Date
      fechaFin: Date
      fechaCreacion: Date
      fechaExpiracion: Date | null
      estado: $Enums.EstadoReservacion
      descuentoId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["reservation"]>
    composites: {}
  }

  type ReservationGetPayload<S extends boolean | null | undefined | ReservationDefaultArgs> = $Result.GetResult<Prisma.$ReservationPayload, S>

  type ReservationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservationCountAggregateInputType | true
    }

  export interface ReservationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reservation'], meta: { name: 'Reservation' } }
    /**
     * Find zero or one Reservation that matches the filter.
     * @param {ReservationFindUniqueArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservationFindUniqueArgs>(args: SelectSubset<T, ReservationFindUniqueArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reservation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservationFindUniqueOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservationFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindFirstArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservationFindFirstArgs>(args?: SelectSubset<T, ReservationFindFirstArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindFirstOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservationFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservations
     * const reservations = await prisma.reservation.findMany()
     * 
     * // Get first 10 Reservations
     * const reservations = await prisma.reservation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservationWithIdOnly = await prisma.reservation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservationFindManyArgs>(args?: SelectSubset<T, ReservationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reservation.
     * @param {ReservationCreateArgs} args - Arguments to create a Reservation.
     * @example
     * // Create one Reservation
     * const Reservation = await prisma.reservation.create({
     *   data: {
     *     // ... data to create a Reservation
     *   }
     * })
     * 
     */
    create<T extends ReservationCreateArgs>(args: SelectSubset<T, ReservationCreateArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservations.
     * @param {ReservationCreateManyArgs} args - Arguments to create many Reservations.
     * @example
     * // Create many Reservations
     * const reservation = await prisma.reservation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservationCreateManyArgs>(args?: SelectSubset<T, ReservationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservations and returns the data saved in the database.
     * @param {ReservationCreateManyAndReturnArgs} args - Arguments to create many Reservations.
     * @example
     * // Create many Reservations
     * const reservation = await prisma.reservation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservations and only return the `id`
     * const reservationWithIdOnly = await prisma.reservation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservationCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reservation.
     * @param {ReservationDeleteArgs} args - Arguments to delete one Reservation.
     * @example
     * // Delete one Reservation
     * const Reservation = await prisma.reservation.delete({
     *   where: {
     *     // ... filter to delete one Reservation
     *   }
     * })
     * 
     */
    delete<T extends ReservationDeleteArgs>(args: SelectSubset<T, ReservationDeleteArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reservation.
     * @param {ReservationUpdateArgs} args - Arguments to update one Reservation.
     * @example
     * // Update one Reservation
     * const reservation = await prisma.reservation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservationUpdateArgs>(args: SelectSubset<T, ReservationUpdateArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservations.
     * @param {ReservationDeleteManyArgs} args - Arguments to filter Reservations to delete.
     * @example
     * // Delete a few Reservations
     * const { count } = await prisma.reservation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservationDeleteManyArgs>(args?: SelectSubset<T, ReservationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservations
     * const reservation = await prisma.reservation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservationUpdateManyArgs>(args: SelectSubset<T, ReservationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservations and returns the data updated in the database.
     * @param {ReservationUpdateManyAndReturnArgs} args - Arguments to update many Reservations.
     * @example
     * // Update many Reservations
     * const reservation = await prisma.reservation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reservations and only return the `id`
     * const reservationWithIdOnly = await prisma.reservation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservationUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reservation.
     * @param {ReservationUpsertArgs} args - Arguments to update or create a Reservation.
     * @example
     * // Update or create a Reservation
     * const reservation = await prisma.reservation.upsert({
     *   create: {
     *     // ... data to create a Reservation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservation we want to update
     *   }
     * })
     */
    upsert<T extends ReservationUpsertArgs>(args: SelectSubset<T, ReservationUpsertArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationCountArgs} args - Arguments to filter Reservations to count.
     * @example
     * // Count the number of Reservations
     * const count = await prisma.reservation.count({
     *   where: {
     *     // ... the filter for the Reservations we want to count
     *   }
     * })
    **/
    count<T extends ReservationCountArgs>(
      args?: Subset<T, ReservationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservationAggregateArgs>(args: Subset<T, ReservationAggregateArgs>): Prisma.PrismaPromise<GetReservationAggregateType<T>>

    /**
     * Group by Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservationGroupByArgs['orderBy'] }
        : { orderBy?: ReservationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reservation model
   */
  readonly fields: ReservationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reservation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    renter<T extends RenterDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RenterDefaultArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    host<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    car<T extends Reservation$carArgs<ExtArgs> = {}>(args?: Subset<T, Reservation$carArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    descuento<T extends Reservation$descuentoArgs<ExtArgs> = {}>(args?: Subset<T, Reservation$descuentoArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    reviews<T extends Reservation$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Reservation$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calificaciones<T extends Reservation$calificacionesArgs<ExtArgs> = {}>(args?: Subset<T, Reservation$calificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reservation model
   */
  interface ReservationFieldRefs {
    readonly id: FieldRef<"Reservation", 'String'>
    readonly renterId: FieldRef<"Reservation", 'String'>
    readonly hostId: FieldRef<"Reservation", 'String'>
    readonly carId: FieldRef<"Reservation", 'String'>
    readonly fechaInicio: FieldRef<"Reservation", 'DateTime'>
    readonly fechaFin: FieldRef<"Reservation", 'DateTime'>
    readonly fechaCreacion: FieldRef<"Reservation", 'DateTime'>
    readonly fechaExpiracion: FieldRef<"Reservation", 'DateTime'>
    readonly estado: FieldRef<"Reservation", 'EstadoReservacion'>
    readonly descuentoId: FieldRef<"Reservation", 'String'>
    readonly createdAt: FieldRef<"Reservation", 'DateTime'>
    readonly updatedAt: FieldRef<"Reservation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Reservation findUnique
   */
  export type ReservationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation findUniqueOrThrow
   */
  export type ReservationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation findFirst
   */
  export type ReservationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation findFirstOrThrow
   */
  export type ReservationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation findMany
   */
  export type ReservationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservations to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation create
   */
  export type ReservationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The data needed to create a Reservation.
     */
    data: XOR<ReservationCreateInput, ReservationUncheckedCreateInput>
  }

  /**
   * Reservation createMany
   */
  export type ReservationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservations.
     */
    data: ReservationCreateManyInput | ReservationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reservation createManyAndReturn
   */
  export type ReservationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * The data used to create many Reservations.
     */
    data: ReservationCreateManyInput | ReservationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reservation update
   */
  export type ReservationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The data needed to update a Reservation.
     */
    data: XOR<ReservationUpdateInput, ReservationUncheckedUpdateInput>
    /**
     * Choose, which Reservation to update.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation updateMany
   */
  export type ReservationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservations.
     */
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyInput>
    /**
     * Filter which Reservations to update
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to update.
     */
    limit?: number
  }

  /**
   * Reservation updateManyAndReturn
   */
  export type ReservationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * The data used to update Reservations.
     */
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyInput>
    /**
     * Filter which Reservations to update
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reservation upsert
   */
  export type ReservationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The filter to search for the Reservation to update in case it exists.
     */
    where: ReservationWhereUniqueInput
    /**
     * In case the Reservation found by the `where` argument doesn't exist, create a new Reservation with this data.
     */
    create: XOR<ReservationCreateInput, ReservationUncheckedCreateInput>
    /**
     * In case the Reservation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservationUpdateInput, ReservationUncheckedUpdateInput>
  }

  /**
   * Reservation delete
   */
  export type ReservationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter which Reservation to delete.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation deleteMany
   */
  export type ReservationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservations to delete
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to delete.
     */
    limit?: number
  }

  /**
   * Reservation.car
   */
  export type Reservation$carArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    where?: CarWhereInput
  }

  /**
   * Reservation.descuento
   */
  export type Reservation$descuentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    where?: DescuentoWhereInput
  }

  /**
   * Reservation.reviews
   */
  export type Reservation$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Reservation.calificaciones
   */
  export type Reservation$calificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    where?: CalificacionHostUsuarioWhereInput
    orderBy?: CalificacionHostUsuarioOrderByWithRelationInput | CalificacionHostUsuarioOrderByWithRelationInput[]
    cursor?: CalificacionHostUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalificacionHostUsuarioScalarFieldEnum | CalificacionHostUsuarioScalarFieldEnum[]
  }

  /**
   * Reservation without action
   */
  export type ReservationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    rating: number | null
    behaviorRating: number | null
    carCareRating: number | null
    punctualityRating: number | null
  }

  export type ReviewSumAggregateOutputType = {
    rating: number | null
    behaviorRating: number | null
    carCareRating: number | null
    punctualityRating: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: string | null
    renterId: string | null
    hostId: string | null
    reservationId: string | null
    carId: string | null
    rating: number | null
    behaviorRating: number | null
    carCareRating: number | null
    punctualityRating: number | null
    comment: string | null
    hostName: string | null
    hostPicture: string | null
    renterName: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: string | null
    renterId: string | null
    hostId: string | null
    reservationId: string | null
    carId: string | null
    rating: number | null
    behaviorRating: number | null
    carCareRating: number | null
    punctualityRating: number | null
    comment: string | null
    hostName: string | null
    hostPicture: string | null
    renterName: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    renterId: number
    hostId: number
    reservationId: number
    carId: number
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment: number
    hostName: number
    hostPicture: number
    renterName: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    rating?: true
    behaviorRating?: true
    carCareRating?: true
    punctualityRating?: true
  }

  export type ReviewSumAggregateInputType = {
    rating?: true
    behaviorRating?: true
    carCareRating?: true
    punctualityRating?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    renterId?: true
    hostId?: true
    reservationId?: true
    carId?: true
    rating?: true
    behaviorRating?: true
    carCareRating?: true
    punctualityRating?: true
    comment?: true
    hostName?: true
    hostPicture?: true
    renterName?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    renterId?: true
    hostId?: true
    reservationId?: true
    carId?: true
    rating?: true
    behaviorRating?: true
    carCareRating?: true
    punctualityRating?: true
    comment?: true
    hostName?: true
    hostPicture?: true
    renterName?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    renterId?: true
    hostId?: true
    reservationId?: true
    carId?: true
    rating?: true
    behaviorRating?: true
    carCareRating?: true
    punctualityRating?: true
    comment?: true
    hostName?: true
    hostPicture?: true
    renterName?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: string
    renterId: string
    hostId: string
    reservationId: string
    carId: string | null
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment: string | null
    hostName: string
    hostPicture: string | null
    renterName: string
    createdAt: Date
    updatedAt: Date
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    hostId?: boolean
    reservationId?: boolean
    carId?: boolean
    rating?: boolean
    behaviorRating?: boolean
    carCareRating?: boolean
    punctualityRating?: boolean
    comment?: boolean
    hostName?: boolean
    hostPicture?: boolean
    renterName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    car?: boolean | Review$carArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    hostId?: boolean
    reservationId?: boolean
    carId?: boolean
    rating?: boolean
    behaviorRating?: boolean
    carCareRating?: boolean
    punctualityRating?: boolean
    comment?: boolean
    hostName?: boolean
    hostPicture?: boolean
    renterName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    car?: boolean | Review$carArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    hostId?: boolean
    reservationId?: boolean
    carId?: boolean
    rating?: boolean
    behaviorRating?: boolean
    carCareRating?: boolean
    punctualityRating?: boolean
    comment?: boolean
    hostName?: boolean
    hostPicture?: boolean
    renterName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    car?: boolean | Review$carArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectScalar = {
    id?: boolean
    renterId?: boolean
    hostId?: boolean
    reservationId?: boolean
    carId?: boolean
    rating?: boolean
    behaviorRating?: boolean
    carCareRating?: boolean
    punctualityRating?: boolean
    comment?: boolean
    hostName?: boolean
    hostPicture?: boolean
    renterName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "renterId" | "hostId" | "reservationId" | "carId" | "rating" | "behaviorRating" | "carCareRating" | "punctualityRating" | "comment" | "hostName" | "hostPicture" | "renterName" | "createdAt" | "updatedAt", ExtArgs["result"]["review"]>
  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    car?: boolean | Review$carArgs<ExtArgs>
  }
  export type ReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    car?: boolean | Review$carArgs<ExtArgs>
  }
  export type ReviewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    host?: boolean | UserDefaultArgs<ExtArgs>
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    car?: boolean | Review$carArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      renter: Prisma.$RenterPayload<ExtArgs>
      host: Prisma.$UserPayload<ExtArgs>
      reservation: Prisma.$ReservationPayload<ExtArgs>
      car: Prisma.$CarPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      renterId: string
      hostId: string
      reservationId: string
      carId: string | null
      rating: number
      behaviorRating: number
      carCareRating: number
      punctualityRating: number
      comment: string | null
      hostName: string
      hostPicture: string | null
      renterName: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reviews and returns the data saved in the database.
     * @param {ReviewCreateManyAndReturnArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews and returns the data updated in the database.
     * @param {ReviewUpdateManyAndReturnArgs} args - Arguments to update many Reviews.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReviewUpdateManyAndReturnArgs>(args: SelectSubset<T, ReviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    renter<T extends RenterDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RenterDefaultArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    host<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reservation<T extends ReservationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservationDefaultArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    car<T extends Review$carArgs<ExtArgs> = {}>(args?: Subset<T, Review$carArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'String'>
    readonly renterId: FieldRef<"Review", 'String'>
    readonly hostId: FieldRef<"Review", 'String'>
    readonly reservationId: FieldRef<"Review", 'String'>
    readonly carId: FieldRef<"Review", 'String'>
    readonly rating: FieldRef<"Review", 'Int'>
    readonly behaviorRating: FieldRef<"Review", 'Int'>
    readonly carCareRating: FieldRef<"Review", 'Int'>
    readonly punctualityRating: FieldRef<"Review", 'Int'>
    readonly comment: FieldRef<"Review", 'String'>
    readonly hostName: FieldRef<"Review", 'String'>
    readonly hostPicture: FieldRef<"Review", 'String'>
    readonly renterName: FieldRef<"Review", 'String'>
    readonly createdAt: FieldRef<"Review", 'DateTime'>
    readonly updatedAt: FieldRef<"Review", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review createManyAndReturn
   */
  export type ReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to update.
     */
    limit?: number
  }

  /**
   * Review updateManyAndReturn
   */
  export type ReviewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to delete.
     */
    limit?: number
  }

  /**
   * Review.car
   */
  export type Review$carArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Car
     */
    select?: CarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Car
     */
    omit?: CarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarInclude<ExtArgs> | null
    where?: CarWhereInput
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model Report
   */

  export type AggregateReport = {
    _count: ReportCountAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  export type ReportMinAggregateOutputType = {
    id: string | null
    renterId: string | null
    reporterId: string | null
    reason: string | null
    additionalInfo: string | null
    status: $Enums.EstadoReporte | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReportMaxAggregateOutputType = {
    id: string | null
    renterId: string | null
    reporterId: string | null
    reason: string | null
    additionalInfo: string | null
    status: $Enums.EstadoReporte | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReportCountAggregateOutputType = {
    id: number
    renterId: number
    reporterId: number
    reason: number
    additionalInfo: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReportMinAggregateInputType = {
    id?: true
    renterId?: true
    reporterId?: true
    reason?: true
    additionalInfo?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReportMaxAggregateInputType = {
    id?: true
    renterId?: true
    reporterId?: true
    reason?: true
    additionalInfo?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReportCountAggregateInputType = {
    id?: true
    renterId?: true
    reporterId?: true
    reason?: true
    additionalInfo?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Report to aggregate.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reports
    **/
    _count?: true | ReportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportMaxAggregateInputType
  }

  export type GetReportAggregateType<T extends ReportAggregateArgs> = {
        [P in keyof T & keyof AggregateReport]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReport[P]>
      : GetScalarType<T[P], AggregateReport[P]>
  }




  export type ReportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithAggregationInput | ReportOrderByWithAggregationInput[]
    by: ReportScalarFieldEnum[] | ReportScalarFieldEnum
    having?: ReportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportCountAggregateInputType | true
    _min?: ReportMinAggregateInputType
    _max?: ReportMaxAggregateInputType
  }

  export type ReportGroupByOutputType = {
    id: string
    renterId: string
    reporterId: string
    reason: string
    additionalInfo: string | null
    status: $Enums.EstadoReporte
    createdAt: Date
    updatedAt: Date
    _count: ReportCountAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  type GetReportGroupByPayload<T extends ReportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportGroupByOutputType[P]>
            : GetScalarType<T[P], ReportGroupByOutputType[P]>
        }
      >
    >


  export type ReportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    reporterId?: boolean
    reason?: boolean
    additionalInfo?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    reporterId?: boolean
    reason?: boolean
    additionalInfo?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    reporterId?: boolean
    reason?: boolean
    additionalInfo?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectScalar = {
    id?: boolean
    renterId?: boolean
    reporterId?: boolean
    reason?: boolean
    additionalInfo?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "renterId" | "reporterId" | "reason" | "additionalInfo" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["report"]>
  export type ReportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReportIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReportIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    reporter?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ReportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Report"
    objects: {
      renter: Prisma.$RenterPayload<ExtArgs>
      reporter: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      renterId: string
      reporterId: string
      reason: string
      additionalInfo: string | null
      status: $Enums.EstadoReporte
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["report"]>
    composites: {}
  }

  type ReportGetPayload<S extends boolean | null | undefined | ReportDefaultArgs> = $Result.GetResult<Prisma.$ReportPayload, S>

  type ReportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportCountAggregateInputType | true
    }

  export interface ReportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Report'], meta: { name: 'Report' } }
    /**
     * Find zero or one Report that matches the filter.
     * @param {ReportFindUniqueArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReportFindUniqueArgs>(args: SelectSubset<T, ReportFindUniqueArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Report that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReportFindUniqueOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReportFindUniqueOrThrowArgs>(args: SelectSubset<T, ReportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindFirstArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReportFindFirstArgs>(args?: SelectSubset<T, ReportFindFirstArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindFirstOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReportFindFirstOrThrowArgs>(args?: SelectSubset<T, ReportFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reports
     * const reports = await prisma.report.findMany()
     * 
     * // Get first 10 Reports
     * const reports = await prisma.report.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportWithIdOnly = await prisma.report.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReportFindManyArgs>(args?: SelectSubset<T, ReportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Report.
     * @param {ReportCreateArgs} args - Arguments to create a Report.
     * @example
     * // Create one Report
     * const Report = await prisma.report.create({
     *   data: {
     *     // ... data to create a Report
     *   }
     * })
     * 
     */
    create<T extends ReportCreateArgs>(args: SelectSubset<T, ReportCreateArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reports.
     * @param {ReportCreateManyArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const report = await prisma.report.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReportCreateManyArgs>(args?: SelectSubset<T, ReportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reports and returns the data saved in the database.
     * @param {ReportCreateManyAndReturnArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const report = await prisma.report.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reports and only return the `id`
     * const reportWithIdOnly = await prisma.report.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReportCreateManyAndReturnArgs>(args?: SelectSubset<T, ReportCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Report.
     * @param {ReportDeleteArgs} args - Arguments to delete one Report.
     * @example
     * // Delete one Report
     * const Report = await prisma.report.delete({
     *   where: {
     *     // ... filter to delete one Report
     *   }
     * })
     * 
     */
    delete<T extends ReportDeleteArgs>(args: SelectSubset<T, ReportDeleteArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Report.
     * @param {ReportUpdateArgs} args - Arguments to update one Report.
     * @example
     * // Update one Report
     * const report = await prisma.report.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReportUpdateArgs>(args: SelectSubset<T, ReportUpdateArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reports.
     * @param {ReportDeleteManyArgs} args - Arguments to filter Reports to delete.
     * @example
     * // Delete a few Reports
     * const { count } = await prisma.report.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReportDeleteManyArgs>(args?: SelectSubset<T, ReportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reports
     * const report = await prisma.report.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReportUpdateManyArgs>(args: SelectSubset<T, ReportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports and returns the data updated in the database.
     * @param {ReportUpdateManyAndReturnArgs} args - Arguments to update many Reports.
     * @example
     * // Update many Reports
     * const report = await prisma.report.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reports and only return the `id`
     * const reportWithIdOnly = await prisma.report.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReportUpdateManyAndReturnArgs>(args: SelectSubset<T, ReportUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Report.
     * @param {ReportUpsertArgs} args - Arguments to update or create a Report.
     * @example
     * // Update or create a Report
     * const report = await prisma.report.upsert({
     *   create: {
     *     // ... data to create a Report
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Report we want to update
     *   }
     * })
     */
    upsert<T extends ReportUpsertArgs>(args: SelectSubset<T, ReportUpsertArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportCountArgs} args - Arguments to filter Reports to count.
     * @example
     * // Count the number of Reports
     * const count = await prisma.report.count({
     *   where: {
     *     // ... the filter for the Reports we want to count
     *   }
     * })
    **/
    count<T extends ReportCountArgs>(
      args?: Subset<T, ReportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportAggregateArgs>(args: Subset<T, ReportAggregateArgs>): Prisma.PrismaPromise<GetReportAggregateType<T>>

    /**
     * Group by Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReportGroupByArgs['orderBy'] }
        : { orderBy?: ReportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Report model
   */
  readonly fields: ReportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Report.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    renter<T extends RenterDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RenterDefaultArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reporter<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Report model
   */
  interface ReportFieldRefs {
    readonly id: FieldRef<"Report", 'String'>
    readonly renterId: FieldRef<"Report", 'String'>
    readonly reporterId: FieldRef<"Report", 'String'>
    readonly reason: FieldRef<"Report", 'String'>
    readonly additionalInfo: FieldRef<"Report", 'String'>
    readonly status: FieldRef<"Report", 'EstadoReporte'>
    readonly createdAt: FieldRef<"Report", 'DateTime'>
    readonly updatedAt: FieldRef<"Report", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Report findUnique
   */
  export type ReportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report findUniqueOrThrow
   */
  export type ReportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report findFirst
   */
  export type ReportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report findFirstOrThrow
   */
  export type ReportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report findMany
   */
  export type ReportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Reports to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report create
   */
  export type ReportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The data needed to create a Report.
     */
    data: XOR<ReportCreateInput, ReportUncheckedCreateInput>
  }

  /**
   * Report createMany
   */
  export type ReportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reports.
     */
    data: ReportCreateManyInput | ReportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Report createManyAndReturn
   */
  export type ReportCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * The data used to create many Reports.
     */
    data: ReportCreateManyInput | ReportCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Report update
   */
  export type ReportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The data needed to update a Report.
     */
    data: XOR<ReportUpdateInput, ReportUncheckedUpdateInput>
    /**
     * Choose, which Report to update.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report updateMany
   */
  export type ReportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reports.
     */
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyInput>
    /**
     * Filter which Reports to update
     */
    where?: ReportWhereInput
    /**
     * Limit how many Reports to update.
     */
    limit?: number
  }

  /**
   * Report updateManyAndReturn
   */
  export type ReportUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * The data used to update Reports.
     */
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyInput>
    /**
     * Filter which Reports to update
     */
    where?: ReportWhereInput
    /**
     * Limit how many Reports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Report upsert
   */
  export type ReportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The filter to search for the Report to update in case it exists.
     */
    where: ReportWhereUniqueInput
    /**
     * In case the Report found by the `where` argument doesn't exist, create a new Report with this data.
     */
    create: XOR<ReportCreateInput, ReportUncheckedCreateInput>
    /**
     * In case the Report was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReportUpdateInput, ReportUncheckedUpdateInput>
  }

  /**
   * Report delete
   */
  export type ReportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter which Report to delete.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report deleteMany
   */
  export type ReportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reports to delete
     */
    where?: ReportWhereInput
    /**
     * Limit how many Reports to delete.
     */
    limit?: number
  }

  /**
   * Report without action
   */
  export type ReportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
  }


  /**
   * Model Combustible
   */

  export type AggregateCombustible = {
    _count: CombustibleCountAggregateOutputType | null
    _min: CombustibleMinAggregateOutputType | null
    _max: CombustibleMaxAggregateOutputType | null
  }

  export type CombustibleMinAggregateOutputType = {
    id: string | null
    tipoDeCombustible: string | null
    carId: string | null
  }

  export type CombustibleMaxAggregateOutputType = {
    id: string | null
    tipoDeCombustible: string | null
    carId: string | null
  }

  export type CombustibleCountAggregateOutputType = {
    id: number
    tipoDeCombustible: number
    carId: number
    _all: number
  }


  export type CombustibleMinAggregateInputType = {
    id?: true
    tipoDeCombustible?: true
    carId?: true
  }

  export type CombustibleMaxAggregateInputType = {
    id?: true
    tipoDeCombustible?: true
    carId?: true
  }

  export type CombustibleCountAggregateInputType = {
    id?: true
    tipoDeCombustible?: true
    carId?: true
    _all?: true
  }

  export type CombustibleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Combustible to aggregate.
     */
    where?: CombustibleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Combustibles to fetch.
     */
    orderBy?: CombustibleOrderByWithRelationInput | CombustibleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CombustibleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Combustibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Combustibles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Combustibles
    **/
    _count?: true | CombustibleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CombustibleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CombustibleMaxAggregateInputType
  }

  export type GetCombustibleAggregateType<T extends CombustibleAggregateArgs> = {
        [P in keyof T & keyof AggregateCombustible]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCombustible[P]>
      : GetScalarType<T[P], AggregateCombustible[P]>
  }




  export type CombustibleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CombustibleWhereInput
    orderBy?: CombustibleOrderByWithAggregationInput | CombustibleOrderByWithAggregationInput[]
    by: CombustibleScalarFieldEnum[] | CombustibleScalarFieldEnum
    having?: CombustibleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CombustibleCountAggregateInputType | true
    _min?: CombustibleMinAggregateInputType
    _max?: CombustibleMaxAggregateInputType
  }

  export type CombustibleGroupByOutputType = {
    id: string
    tipoDeCombustible: string
    carId: string
    _count: CombustibleCountAggregateOutputType | null
    _min: CombustibleMinAggregateOutputType | null
    _max: CombustibleMaxAggregateOutputType | null
  }

  type GetCombustibleGroupByPayload<T extends CombustibleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CombustibleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CombustibleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CombustibleGroupByOutputType[P]>
            : GetScalarType<T[P], CombustibleGroupByOutputType[P]>
        }
      >
    >


  export type CombustibleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipoDeCombustible?: boolean
    carId?: boolean
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["combustible"]>

  export type CombustibleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipoDeCombustible?: boolean
    carId?: boolean
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["combustible"]>

  export type CombustibleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipoDeCombustible?: boolean
    carId?: boolean
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["combustible"]>

  export type CombustibleSelectScalar = {
    id?: boolean
    tipoDeCombustible?: boolean
    carId?: boolean
  }

  export type CombustibleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tipoDeCombustible" | "carId", ExtArgs["result"]["combustible"]>
  export type CombustibleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    car?: boolean | CarDefaultArgs<ExtArgs>
  }
  export type CombustibleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    car?: boolean | CarDefaultArgs<ExtArgs>
  }
  export type CombustibleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    car?: boolean | CarDefaultArgs<ExtArgs>
  }

  export type $CombustiblePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Combustible"
    objects: {
      car: Prisma.$CarPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tipoDeCombustible: string
      carId: string
    }, ExtArgs["result"]["combustible"]>
    composites: {}
  }

  type CombustibleGetPayload<S extends boolean | null | undefined | CombustibleDefaultArgs> = $Result.GetResult<Prisma.$CombustiblePayload, S>

  type CombustibleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CombustibleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CombustibleCountAggregateInputType | true
    }

  export interface CombustibleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Combustible'], meta: { name: 'Combustible' } }
    /**
     * Find zero or one Combustible that matches the filter.
     * @param {CombustibleFindUniqueArgs} args - Arguments to find a Combustible
     * @example
     * // Get one Combustible
     * const combustible = await prisma.combustible.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CombustibleFindUniqueArgs>(args: SelectSubset<T, CombustibleFindUniqueArgs<ExtArgs>>): Prisma__CombustibleClient<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Combustible that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CombustibleFindUniqueOrThrowArgs} args - Arguments to find a Combustible
     * @example
     * // Get one Combustible
     * const combustible = await prisma.combustible.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CombustibleFindUniqueOrThrowArgs>(args: SelectSubset<T, CombustibleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CombustibleClient<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Combustible that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustibleFindFirstArgs} args - Arguments to find a Combustible
     * @example
     * // Get one Combustible
     * const combustible = await prisma.combustible.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CombustibleFindFirstArgs>(args?: SelectSubset<T, CombustibleFindFirstArgs<ExtArgs>>): Prisma__CombustibleClient<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Combustible that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustibleFindFirstOrThrowArgs} args - Arguments to find a Combustible
     * @example
     * // Get one Combustible
     * const combustible = await prisma.combustible.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CombustibleFindFirstOrThrowArgs>(args?: SelectSubset<T, CombustibleFindFirstOrThrowArgs<ExtArgs>>): Prisma__CombustibleClient<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Combustibles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustibleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Combustibles
     * const combustibles = await prisma.combustible.findMany()
     * 
     * // Get first 10 Combustibles
     * const combustibles = await prisma.combustible.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const combustibleWithIdOnly = await prisma.combustible.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CombustibleFindManyArgs>(args?: SelectSubset<T, CombustibleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Combustible.
     * @param {CombustibleCreateArgs} args - Arguments to create a Combustible.
     * @example
     * // Create one Combustible
     * const Combustible = await prisma.combustible.create({
     *   data: {
     *     // ... data to create a Combustible
     *   }
     * })
     * 
     */
    create<T extends CombustibleCreateArgs>(args: SelectSubset<T, CombustibleCreateArgs<ExtArgs>>): Prisma__CombustibleClient<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Combustibles.
     * @param {CombustibleCreateManyArgs} args - Arguments to create many Combustibles.
     * @example
     * // Create many Combustibles
     * const combustible = await prisma.combustible.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CombustibleCreateManyArgs>(args?: SelectSubset<T, CombustibleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Combustibles and returns the data saved in the database.
     * @param {CombustibleCreateManyAndReturnArgs} args - Arguments to create many Combustibles.
     * @example
     * // Create many Combustibles
     * const combustible = await prisma.combustible.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Combustibles and only return the `id`
     * const combustibleWithIdOnly = await prisma.combustible.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CombustibleCreateManyAndReturnArgs>(args?: SelectSubset<T, CombustibleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Combustible.
     * @param {CombustibleDeleteArgs} args - Arguments to delete one Combustible.
     * @example
     * // Delete one Combustible
     * const Combustible = await prisma.combustible.delete({
     *   where: {
     *     // ... filter to delete one Combustible
     *   }
     * })
     * 
     */
    delete<T extends CombustibleDeleteArgs>(args: SelectSubset<T, CombustibleDeleteArgs<ExtArgs>>): Prisma__CombustibleClient<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Combustible.
     * @param {CombustibleUpdateArgs} args - Arguments to update one Combustible.
     * @example
     * // Update one Combustible
     * const combustible = await prisma.combustible.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CombustibleUpdateArgs>(args: SelectSubset<T, CombustibleUpdateArgs<ExtArgs>>): Prisma__CombustibleClient<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Combustibles.
     * @param {CombustibleDeleteManyArgs} args - Arguments to filter Combustibles to delete.
     * @example
     * // Delete a few Combustibles
     * const { count } = await prisma.combustible.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CombustibleDeleteManyArgs>(args?: SelectSubset<T, CombustibleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Combustibles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustibleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Combustibles
     * const combustible = await prisma.combustible.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CombustibleUpdateManyArgs>(args: SelectSubset<T, CombustibleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Combustibles and returns the data updated in the database.
     * @param {CombustibleUpdateManyAndReturnArgs} args - Arguments to update many Combustibles.
     * @example
     * // Update many Combustibles
     * const combustible = await prisma.combustible.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Combustibles and only return the `id`
     * const combustibleWithIdOnly = await prisma.combustible.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CombustibleUpdateManyAndReturnArgs>(args: SelectSubset<T, CombustibleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Combustible.
     * @param {CombustibleUpsertArgs} args - Arguments to update or create a Combustible.
     * @example
     * // Update or create a Combustible
     * const combustible = await prisma.combustible.upsert({
     *   create: {
     *     // ... data to create a Combustible
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Combustible we want to update
     *   }
     * })
     */
    upsert<T extends CombustibleUpsertArgs>(args: SelectSubset<T, CombustibleUpsertArgs<ExtArgs>>): Prisma__CombustibleClient<$Result.GetResult<Prisma.$CombustiblePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Combustibles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustibleCountArgs} args - Arguments to filter Combustibles to count.
     * @example
     * // Count the number of Combustibles
     * const count = await prisma.combustible.count({
     *   where: {
     *     // ... the filter for the Combustibles we want to count
     *   }
     * })
    **/
    count<T extends CombustibleCountArgs>(
      args?: Subset<T, CombustibleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CombustibleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Combustible.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustibleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CombustibleAggregateArgs>(args: Subset<T, CombustibleAggregateArgs>): Prisma.PrismaPromise<GetCombustibleAggregateType<T>>

    /**
     * Group by Combustible.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustibleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CombustibleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CombustibleGroupByArgs['orderBy'] }
        : { orderBy?: CombustibleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CombustibleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCombustibleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Combustible model
   */
  readonly fields: CombustibleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Combustible.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CombustibleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    car<T extends CarDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CarDefaultArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Combustible model
   */
  interface CombustibleFieldRefs {
    readonly id: FieldRef<"Combustible", 'String'>
    readonly tipoDeCombustible: FieldRef<"Combustible", 'String'>
    readonly carId: FieldRef<"Combustible", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Combustible findUnique
   */
  export type CombustibleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    /**
     * Filter, which Combustible to fetch.
     */
    where: CombustibleWhereUniqueInput
  }

  /**
   * Combustible findUniqueOrThrow
   */
  export type CombustibleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    /**
     * Filter, which Combustible to fetch.
     */
    where: CombustibleWhereUniqueInput
  }

  /**
   * Combustible findFirst
   */
  export type CombustibleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    /**
     * Filter, which Combustible to fetch.
     */
    where?: CombustibleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Combustibles to fetch.
     */
    orderBy?: CombustibleOrderByWithRelationInput | CombustibleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Combustibles.
     */
    cursor?: CombustibleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Combustibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Combustibles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Combustibles.
     */
    distinct?: CombustibleScalarFieldEnum | CombustibleScalarFieldEnum[]
  }

  /**
   * Combustible findFirstOrThrow
   */
  export type CombustibleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    /**
     * Filter, which Combustible to fetch.
     */
    where?: CombustibleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Combustibles to fetch.
     */
    orderBy?: CombustibleOrderByWithRelationInput | CombustibleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Combustibles.
     */
    cursor?: CombustibleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Combustibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Combustibles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Combustibles.
     */
    distinct?: CombustibleScalarFieldEnum | CombustibleScalarFieldEnum[]
  }

  /**
   * Combustible findMany
   */
  export type CombustibleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    /**
     * Filter, which Combustibles to fetch.
     */
    where?: CombustibleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Combustibles to fetch.
     */
    orderBy?: CombustibleOrderByWithRelationInput | CombustibleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Combustibles.
     */
    cursor?: CombustibleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Combustibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Combustibles.
     */
    skip?: number
    distinct?: CombustibleScalarFieldEnum | CombustibleScalarFieldEnum[]
  }

  /**
   * Combustible create
   */
  export type CombustibleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    /**
     * The data needed to create a Combustible.
     */
    data: XOR<CombustibleCreateInput, CombustibleUncheckedCreateInput>
  }

  /**
   * Combustible createMany
   */
  export type CombustibleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Combustibles.
     */
    data: CombustibleCreateManyInput | CombustibleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Combustible createManyAndReturn
   */
  export type CombustibleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * The data used to create many Combustibles.
     */
    data: CombustibleCreateManyInput | CombustibleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Combustible update
   */
  export type CombustibleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    /**
     * The data needed to update a Combustible.
     */
    data: XOR<CombustibleUpdateInput, CombustibleUncheckedUpdateInput>
    /**
     * Choose, which Combustible to update.
     */
    where: CombustibleWhereUniqueInput
  }

  /**
   * Combustible updateMany
   */
  export type CombustibleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Combustibles.
     */
    data: XOR<CombustibleUpdateManyMutationInput, CombustibleUncheckedUpdateManyInput>
    /**
     * Filter which Combustibles to update
     */
    where?: CombustibleWhereInput
    /**
     * Limit how many Combustibles to update.
     */
    limit?: number
  }

  /**
   * Combustible updateManyAndReturn
   */
  export type CombustibleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * The data used to update Combustibles.
     */
    data: XOR<CombustibleUpdateManyMutationInput, CombustibleUncheckedUpdateManyInput>
    /**
     * Filter which Combustibles to update
     */
    where?: CombustibleWhereInput
    /**
     * Limit how many Combustibles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Combustible upsert
   */
  export type CombustibleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    /**
     * The filter to search for the Combustible to update in case it exists.
     */
    where: CombustibleWhereUniqueInput
    /**
     * In case the Combustible found by the `where` argument doesn't exist, create a new Combustible with this data.
     */
    create: XOR<CombustibleCreateInput, CombustibleUncheckedCreateInput>
    /**
     * In case the Combustible was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CombustibleUpdateInput, CombustibleUncheckedUpdateInput>
  }

  /**
   * Combustible delete
   */
  export type CombustibleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
    /**
     * Filter which Combustible to delete.
     */
    where: CombustibleWhereUniqueInput
  }

  /**
   * Combustible deleteMany
   */
  export type CombustibleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Combustibles to delete
     */
    where?: CombustibleWhereInput
    /**
     * Limit how many Combustibles to delete.
     */
    limit?: number
  }

  /**
   * Combustible without action
   */
  export type CombustibleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustible
     */
    select?: CombustibleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Combustible
     */
    omit?: CombustibleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustibleInclude<ExtArgs> | null
  }


  /**
   * Model CaracteristicaAdicional
   */

  export type AggregateCaracteristicaAdicional = {
    _count: CaracteristicaAdicionalCountAggregateOutputType | null
    _min: CaracteristicaAdicionalMinAggregateOutputType | null
    _max: CaracteristicaAdicionalMaxAggregateOutputType | null
  }

  export type CaracteristicaAdicionalMinAggregateOutputType = {
    id: string | null
    nombre: string | null
    carId: string | null
  }

  export type CaracteristicaAdicionalMaxAggregateOutputType = {
    id: string | null
    nombre: string | null
    carId: string | null
  }

  export type CaracteristicaAdicionalCountAggregateOutputType = {
    id: number
    nombre: number
    carId: number
    _all: number
  }


  export type CaracteristicaAdicionalMinAggregateInputType = {
    id?: true
    nombre?: true
    carId?: true
  }

  export type CaracteristicaAdicionalMaxAggregateInputType = {
    id?: true
    nombre?: true
    carId?: true
  }

  export type CaracteristicaAdicionalCountAggregateInputType = {
    id?: true
    nombre?: true
    carId?: true
    _all?: true
  }

  export type CaracteristicaAdicionalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CaracteristicaAdicional to aggregate.
     */
    where?: CaracteristicaAdicionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CaracteristicaAdicionals to fetch.
     */
    orderBy?: CaracteristicaAdicionalOrderByWithRelationInput | CaracteristicaAdicionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CaracteristicaAdicionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CaracteristicaAdicionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CaracteristicaAdicionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CaracteristicaAdicionals
    **/
    _count?: true | CaracteristicaAdicionalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CaracteristicaAdicionalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CaracteristicaAdicionalMaxAggregateInputType
  }

  export type GetCaracteristicaAdicionalAggregateType<T extends CaracteristicaAdicionalAggregateArgs> = {
        [P in keyof T & keyof AggregateCaracteristicaAdicional]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCaracteristicaAdicional[P]>
      : GetScalarType<T[P], AggregateCaracteristicaAdicional[P]>
  }




  export type CaracteristicaAdicionalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CaracteristicaAdicionalWhereInput
    orderBy?: CaracteristicaAdicionalOrderByWithAggregationInput | CaracteristicaAdicionalOrderByWithAggregationInput[]
    by: CaracteristicaAdicionalScalarFieldEnum[] | CaracteristicaAdicionalScalarFieldEnum
    having?: CaracteristicaAdicionalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CaracteristicaAdicionalCountAggregateInputType | true
    _min?: CaracteristicaAdicionalMinAggregateInputType
    _max?: CaracteristicaAdicionalMaxAggregateInputType
  }

  export type CaracteristicaAdicionalGroupByOutputType = {
    id: string
    nombre: string
    carId: string
    _count: CaracteristicaAdicionalCountAggregateOutputType | null
    _min: CaracteristicaAdicionalMinAggregateOutputType | null
    _max: CaracteristicaAdicionalMaxAggregateOutputType | null
  }

  type GetCaracteristicaAdicionalGroupByPayload<T extends CaracteristicaAdicionalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CaracteristicaAdicionalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CaracteristicaAdicionalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CaracteristicaAdicionalGroupByOutputType[P]>
            : GetScalarType<T[P], CaracteristicaAdicionalGroupByOutputType[P]>
        }
      >
    >


  export type CaracteristicaAdicionalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    carId?: boolean
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["caracteristicaAdicional"]>

  export type CaracteristicaAdicionalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    carId?: boolean
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["caracteristicaAdicional"]>

  export type CaracteristicaAdicionalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    carId?: boolean
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["caracteristicaAdicional"]>

  export type CaracteristicaAdicionalSelectScalar = {
    id?: boolean
    nombre?: boolean
    carId?: boolean
  }

  export type CaracteristicaAdicionalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "carId", ExtArgs["result"]["caracteristicaAdicional"]>
  export type CaracteristicaAdicionalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    car?: boolean | CarDefaultArgs<ExtArgs>
  }
  export type CaracteristicaAdicionalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    car?: boolean | CarDefaultArgs<ExtArgs>
  }
  export type CaracteristicaAdicionalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    car?: boolean | CarDefaultArgs<ExtArgs>
  }

  export type $CaracteristicaAdicionalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CaracteristicaAdicional"
    objects: {
      car: Prisma.$CarPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre: string
      carId: string
    }, ExtArgs["result"]["caracteristicaAdicional"]>
    composites: {}
  }

  type CaracteristicaAdicionalGetPayload<S extends boolean | null | undefined | CaracteristicaAdicionalDefaultArgs> = $Result.GetResult<Prisma.$CaracteristicaAdicionalPayload, S>

  type CaracteristicaAdicionalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CaracteristicaAdicionalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CaracteristicaAdicionalCountAggregateInputType | true
    }

  export interface CaracteristicaAdicionalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CaracteristicaAdicional'], meta: { name: 'CaracteristicaAdicional' } }
    /**
     * Find zero or one CaracteristicaAdicional that matches the filter.
     * @param {CaracteristicaAdicionalFindUniqueArgs} args - Arguments to find a CaracteristicaAdicional
     * @example
     * // Get one CaracteristicaAdicional
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CaracteristicaAdicionalFindUniqueArgs>(args: SelectSubset<T, CaracteristicaAdicionalFindUniqueArgs<ExtArgs>>): Prisma__CaracteristicaAdicionalClient<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CaracteristicaAdicional that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CaracteristicaAdicionalFindUniqueOrThrowArgs} args - Arguments to find a CaracteristicaAdicional
     * @example
     * // Get one CaracteristicaAdicional
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CaracteristicaAdicionalFindUniqueOrThrowArgs>(args: SelectSubset<T, CaracteristicaAdicionalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CaracteristicaAdicionalClient<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CaracteristicaAdicional that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CaracteristicaAdicionalFindFirstArgs} args - Arguments to find a CaracteristicaAdicional
     * @example
     * // Get one CaracteristicaAdicional
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CaracteristicaAdicionalFindFirstArgs>(args?: SelectSubset<T, CaracteristicaAdicionalFindFirstArgs<ExtArgs>>): Prisma__CaracteristicaAdicionalClient<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CaracteristicaAdicional that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CaracteristicaAdicionalFindFirstOrThrowArgs} args - Arguments to find a CaracteristicaAdicional
     * @example
     * // Get one CaracteristicaAdicional
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CaracteristicaAdicionalFindFirstOrThrowArgs>(args?: SelectSubset<T, CaracteristicaAdicionalFindFirstOrThrowArgs<ExtArgs>>): Prisma__CaracteristicaAdicionalClient<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CaracteristicaAdicionals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CaracteristicaAdicionalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CaracteristicaAdicionals
     * const caracteristicaAdicionals = await prisma.caracteristicaAdicional.findMany()
     * 
     * // Get first 10 CaracteristicaAdicionals
     * const caracteristicaAdicionals = await prisma.caracteristicaAdicional.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const caracteristicaAdicionalWithIdOnly = await prisma.caracteristicaAdicional.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CaracteristicaAdicionalFindManyArgs>(args?: SelectSubset<T, CaracteristicaAdicionalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CaracteristicaAdicional.
     * @param {CaracteristicaAdicionalCreateArgs} args - Arguments to create a CaracteristicaAdicional.
     * @example
     * // Create one CaracteristicaAdicional
     * const CaracteristicaAdicional = await prisma.caracteristicaAdicional.create({
     *   data: {
     *     // ... data to create a CaracteristicaAdicional
     *   }
     * })
     * 
     */
    create<T extends CaracteristicaAdicionalCreateArgs>(args: SelectSubset<T, CaracteristicaAdicionalCreateArgs<ExtArgs>>): Prisma__CaracteristicaAdicionalClient<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CaracteristicaAdicionals.
     * @param {CaracteristicaAdicionalCreateManyArgs} args - Arguments to create many CaracteristicaAdicionals.
     * @example
     * // Create many CaracteristicaAdicionals
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CaracteristicaAdicionalCreateManyArgs>(args?: SelectSubset<T, CaracteristicaAdicionalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CaracteristicaAdicionals and returns the data saved in the database.
     * @param {CaracteristicaAdicionalCreateManyAndReturnArgs} args - Arguments to create many CaracteristicaAdicionals.
     * @example
     * // Create many CaracteristicaAdicionals
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CaracteristicaAdicionals and only return the `id`
     * const caracteristicaAdicionalWithIdOnly = await prisma.caracteristicaAdicional.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CaracteristicaAdicionalCreateManyAndReturnArgs>(args?: SelectSubset<T, CaracteristicaAdicionalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CaracteristicaAdicional.
     * @param {CaracteristicaAdicionalDeleteArgs} args - Arguments to delete one CaracteristicaAdicional.
     * @example
     * // Delete one CaracteristicaAdicional
     * const CaracteristicaAdicional = await prisma.caracteristicaAdicional.delete({
     *   where: {
     *     // ... filter to delete one CaracteristicaAdicional
     *   }
     * })
     * 
     */
    delete<T extends CaracteristicaAdicionalDeleteArgs>(args: SelectSubset<T, CaracteristicaAdicionalDeleteArgs<ExtArgs>>): Prisma__CaracteristicaAdicionalClient<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CaracteristicaAdicional.
     * @param {CaracteristicaAdicionalUpdateArgs} args - Arguments to update one CaracteristicaAdicional.
     * @example
     * // Update one CaracteristicaAdicional
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CaracteristicaAdicionalUpdateArgs>(args: SelectSubset<T, CaracteristicaAdicionalUpdateArgs<ExtArgs>>): Prisma__CaracteristicaAdicionalClient<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CaracteristicaAdicionals.
     * @param {CaracteristicaAdicionalDeleteManyArgs} args - Arguments to filter CaracteristicaAdicionals to delete.
     * @example
     * // Delete a few CaracteristicaAdicionals
     * const { count } = await prisma.caracteristicaAdicional.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CaracteristicaAdicionalDeleteManyArgs>(args?: SelectSubset<T, CaracteristicaAdicionalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CaracteristicaAdicionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CaracteristicaAdicionalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CaracteristicaAdicionals
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CaracteristicaAdicionalUpdateManyArgs>(args: SelectSubset<T, CaracteristicaAdicionalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CaracteristicaAdicionals and returns the data updated in the database.
     * @param {CaracteristicaAdicionalUpdateManyAndReturnArgs} args - Arguments to update many CaracteristicaAdicionals.
     * @example
     * // Update many CaracteristicaAdicionals
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CaracteristicaAdicionals and only return the `id`
     * const caracteristicaAdicionalWithIdOnly = await prisma.caracteristicaAdicional.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CaracteristicaAdicionalUpdateManyAndReturnArgs>(args: SelectSubset<T, CaracteristicaAdicionalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CaracteristicaAdicional.
     * @param {CaracteristicaAdicionalUpsertArgs} args - Arguments to update or create a CaracteristicaAdicional.
     * @example
     * // Update or create a CaracteristicaAdicional
     * const caracteristicaAdicional = await prisma.caracteristicaAdicional.upsert({
     *   create: {
     *     // ... data to create a CaracteristicaAdicional
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CaracteristicaAdicional we want to update
     *   }
     * })
     */
    upsert<T extends CaracteristicaAdicionalUpsertArgs>(args: SelectSubset<T, CaracteristicaAdicionalUpsertArgs<ExtArgs>>): Prisma__CaracteristicaAdicionalClient<$Result.GetResult<Prisma.$CaracteristicaAdicionalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CaracteristicaAdicionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CaracteristicaAdicionalCountArgs} args - Arguments to filter CaracteristicaAdicionals to count.
     * @example
     * // Count the number of CaracteristicaAdicionals
     * const count = await prisma.caracteristicaAdicional.count({
     *   where: {
     *     // ... the filter for the CaracteristicaAdicionals we want to count
     *   }
     * })
    **/
    count<T extends CaracteristicaAdicionalCountArgs>(
      args?: Subset<T, CaracteristicaAdicionalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CaracteristicaAdicionalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CaracteristicaAdicional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CaracteristicaAdicionalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CaracteristicaAdicionalAggregateArgs>(args: Subset<T, CaracteristicaAdicionalAggregateArgs>): Prisma.PrismaPromise<GetCaracteristicaAdicionalAggregateType<T>>

    /**
     * Group by CaracteristicaAdicional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CaracteristicaAdicionalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CaracteristicaAdicionalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CaracteristicaAdicionalGroupByArgs['orderBy'] }
        : { orderBy?: CaracteristicaAdicionalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CaracteristicaAdicionalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCaracteristicaAdicionalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CaracteristicaAdicional model
   */
  readonly fields: CaracteristicaAdicionalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CaracteristicaAdicional.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CaracteristicaAdicionalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    car<T extends CarDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CarDefaultArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CaracteristicaAdicional model
   */
  interface CaracteristicaAdicionalFieldRefs {
    readonly id: FieldRef<"CaracteristicaAdicional", 'String'>
    readonly nombre: FieldRef<"CaracteristicaAdicional", 'String'>
    readonly carId: FieldRef<"CaracteristicaAdicional", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CaracteristicaAdicional findUnique
   */
  export type CaracteristicaAdicionalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    /**
     * Filter, which CaracteristicaAdicional to fetch.
     */
    where: CaracteristicaAdicionalWhereUniqueInput
  }

  /**
   * CaracteristicaAdicional findUniqueOrThrow
   */
  export type CaracteristicaAdicionalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    /**
     * Filter, which CaracteristicaAdicional to fetch.
     */
    where: CaracteristicaAdicionalWhereUniqueInput
  }

  /**
   * CaracteristicaAdicional findFirst
   */
  export type CaracteristicaAdicionalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    /**
     * Filter, which CaracteristicaAdicional to fetch.
     */
    where?: CaracteristicaAdicionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CaracteristicaAdicionals to fetch.
     */
    orderBy?: CaracteristicaAdicionalOrderByWithRelationInput | CaracteristicaAdicionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CaracteristicaAdicionals.
     */
    cursor?: CaracteristicaAdicionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CaracteristicaAdicionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CaracteristicaAdicionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CaracteristicaAdicionals.
     */
    distinct?: CaracteristicaAdicionalScalarFieldEnum | CaracteristicaAdicionalScalarFieldEnum[]
  }

  /**
   * CaracteristicaAdicional findFirstOrThrow
   */
  export type CaracteristicaAdicionalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    /**
     * Filter, which CaracteristicaAdicional to fetch.
     */
    where?: CaracteristicaAdicionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CaracteristicaAdicionals to fetch.
     */
    orderBy?: CaracteristicaAdicionalOrderByWithRelationInput | CaracteristicaAdicionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CaracteristicaAdicionals.
     */
    cursor?: CaracteristicaAdicionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CaracteristicaAdicionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CaracteristicaAdicionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CaracteristicaAdicionals.
     */
    distinct?: CaracteristicaAdicionalScalarFieldEnum | CaracteristicaAdicionalScalarFieldEnum[]
  }

  /**
   * CaracteristicaAdicional findMany
   */
  export type CaracteristicaAdicionalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    /**
     * Filter, which CaracteristicaAdicionals to fetch.
     */
    where?: CaracteristicaAdicionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CaracteristicaAdicionals to fetch.
     */
    orderBy?: CaracteristicaAdicionalOrderByWithRelationInput | CaracteristicaAdicionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CaracteristicaAdicionals.
     */
    cursor?: CaracteristicaAdicionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CaracteristicaAdicionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CaracteristicaAdicionals.
     */
    skip?: number
    distinct?: CaracteristicaAdicionalScalarFieldEnum | CaracteristicaAdicionalScalarFieldEnum[]
  }

  /**
   * CaracteristicaAdicional create
   */
  export type CaracteristicaAdicionalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    /**
     * The data needed to create a CaracteristicaAdicional.
     */
    data: XOR<CaracteristicaAdicionalCreateInput, CaracteristicaAdicionalUncheckedCreateInput>
  }

  /**
   * CaracteristicaAdicional createMany
   */
  export type CaracteristicaAdicionalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CaracteristicaAdicionals.
     */
    data: CaracteristicaAdicionalCreateManyInput | CaracteristicaAdicionalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CaracteristicaAdicional createManyAndReturn
   */
  export type CaracteristicaAdicionalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * The data used to create many CaracteristicaAdicionals.
     */
    data: CaracteristicaAdicionalCreateManyInput | CaracteristicaAdicionalCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CaracteristicaAdicional update
   */
  export type CaracteristicaAdicionalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    /**
     * The data needed to update a CaracteristicaAdicional.
     */
    data: XOR<CaracteristicaAdicionalUpdateInput, CaracteristicaAdicionalUncheckedUpdateInput>
    /**
     * Choose, which CaracteristicaAdicional to update.
     */
    where: CaracteristicaAdicionalWhereUniqueInput
  }

  /**
   * CaracteristicaAdicional updateMany
   */
  export type CaracteristicaAdicionalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CaracteristicaAdicionals.
     */
    data: XOR<CaracteristicaAdicionalUpdateManyMutationInput, CaracteristicaAdicionalUncheckedUpdateManyInput>
    /**
     * Filter which CaracteristicaAdicionals to update
     */
    where?: CaracteristicaAdicionalWhereInput
    /**
     * Limit how many CaracteristicaAdicionals to update.
     */
    limit?: number
  }

  /**
   * CaracteristicaAdicional updateManyAndReturn
   */
  export type CaracteristicaAdicionalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * The data used to update CaracteristicaAdicionals.
     */
    data: XOR<CaracteristicaAdicionalUpdateManyMutationInput, CaracteristicaAdicionalUncheckedUpdateManyInput>
    /**
     * Filter which CaracteristicaAdicionals to update
     */
    where?: CaracteristicaAdicionalWhereInput
    /**
     * Limit how many CaracteristicaAdicionals to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CaracteristicaAdicional upsert
   */
  export type CaracteristicaAdicionalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    /**
     * The filter to search for the CaracteristicaAdicional to update in case it exists.
     */
    where: CaracteristicaAdicionalWhereUniqueInput
    /**
     * In case the CaracteristicaAdicional found by the `where` argument doesn't exist, create a new CaracteristicaAdicional with this data.
     */
    create: XOR<CaracteristicaAdicionalCreateInput, CaracteristicaAdicionalUncheckedCreateInput>
    /**
     * In case the CaracteristicaAdicional was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CaracteristicaAdicionalUpdateInput, CaracteristicaAdicionalUncheckedUpdateInput>
  }

  /**
   * CaracteristicaAdicional delete
   */
  export type CaracteristicaAdicionalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
    /**
     * Filter which CaracteristicaAdicional to delete.
     */
    where: CaracteristicaAdicionalWhereUniqueInput
  }

  /**
   * CaracteristicaAdicional deleteMany
   */
  export type CaracteristicaAdicionalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CaracteristicaAdicionals to delete
     */
    where?: CaracteristicaAdicionalWhereInput
    /**
     * Limit how many CaracteristicaAdicionals to delete.
     */
    limit?: number
  }

  /**
   * CaracteristicaAdicional without action
   */
  export type CaracteristicaAdicionalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CaracteristicaAdicional
     */
    select?: CaracteristicaAdicionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CaracteristicaAdicional
     */
    omit?: CaracteristicaAdicionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CaracteristicaAdicionalInclude<ExtArgs> | null
  }


  /**
   * Model Imagen
   */

  export type AggregateImagen = {
    _count: ImagenCountAggregateOutputType | null
    _min: ImagenMinAggregateOutputType | null
    _max: ImagenMaxAggregateOutputType | null
  }

  export type ImagenMinAggregateOutputType = {
    id: string | null
    url: string | null
    carId: string | null
  }

  export type ImagenMaxAggregateOutputType = {
    id: string | null
    url: string | null
    carId: string | null
  }

  export type ImagenCountAggregateOutputType = {
    id: number
    url: number
    carId: number
    _all: number
  }


  export type ImagenMinAggregateInputType = {
    id?: true
    url?: true
    carId?: true
  }

  export type ImagenMaxAggregateInputType = {
    id?: true
    url?: true
    carId?: true
  }

  export type ImagenCountAggregateInputType = {
    id?: true
    url?: true
    carId?: true
    _all?: true
  }

  export type ImagenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Imagen to aggregate.
     */
    where?: ImagenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Imagens to fetch.
     */
    orderBy?: ImagenOrderByWithRelationInput | ImagenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImagenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Imagens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Imagens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Imagens
    **/
    _count?: true | ImagenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImagenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImagenMaxAggregateInputType
  }

  export type GetImagenAggregateType<T extends ImagenAggregateArgs> = {
        [P in keyof T & keyof AggregateImagen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImagen[P]>
      : GetScalarType<T[P], AggregateImagen[P]>
  }




  export type ImagenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImagenWhereInput
    orderBy?: ImagenOrderByWithAggregationInput | ImagenOrderByWithAggregationInput[]
    by: ImagenScalarFieldEnum[] | ImagenScalarFieldEnum
    having?: ImagenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImagenCountAggregateInputType | true
    _min?: ImagenMinAggregateInputType
    _max?: ImagenMaxAggregateInputType
  }

  export type ImagenGroupByOutputType = {
    id: string
    url: string
    carId: string
    _count: ImagenCountAggregateOutputType | null
    _min: ImagenMinAggregateOutputType | null
    _max: ImagenMaxAggregateOutputType | null
  }

  type GetImagenGroupByPayload<T extends ImagenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImagenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImagenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImagenGroupByOutputType[P]>
            : GetScalarType<T[P], ImagenGroupByOutputType[P]>
        }
      >
    >


  export type ImagenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    carId?: boolean
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagen"]>

  export type ImagenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    carId?: boolean
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagen"]>

  export type ImagenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    carId?: boolean
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagen"]>

  export type ImagenSelectScalar = {
    id?: boolean
    url?: boolean
    carId?: boolean
  }

  export type ImagenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "carId", ExtArgs["result"]["imagen"]>
  export type ImagenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    car?: boolean | CarDefaultArgs<ExtArgs>
  }
  export type ImagenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    car?: boolean | CarDefaultArgs<ExtArgs>
  }
  export type ImagenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    car?: boolean | CarDefaultArgs<ExtArgs>
  }

  export type $ImagenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Imagen"
    objects: {
      car: Prisma.$CarPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      carId: string
    }, ExtArgs["result"]["imagen"]>
    composites: {}
  }

  type ImagenGetPayload<S extends boolean | null | undefined | ImagenDefaultArgs> = $Result.GetResult<Prisma.$ImagenPayload, S>

  type ImagenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ImagenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImagenCountAggregateInputType | true
    }

  export interface ImagenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Imagen'], meta: { name: 'Imagen' } }
    /**
     * Find zero or one Imagen that matches the filter.
     * @param {ImagenFindUniqueArgs} args - Arguments to find a Imagen
     * @example
     * // Get one Imagen
     * const imagen = await prisma.imagen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImagenFindUniqueArgs>(args: SelectSubset<T, ImagenFindUniqueArgs<ExtArgs>>): Prisma__ImagenClient<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Imagen that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ImagenFindUniqueOrThrowArgs} args - Arguments to find a Imagen
     * @example
     * // Get one Imagen
     * const imagen = await prisma.imagen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImagenFindUniqueOrThrowArgs>(args: SelectSubset<T, ImagenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImagenClient<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imagen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenFindFirstArgs} args - Arguments to find a Imagen
     * @example
     * // Get one Imagen
     * const imagen = await prisma.imagen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImagenFindFirstArgs>(args?: SelectSubset<T, ImagenFindFirstArgs<ExtArgs>>): Prisma__ImagenClient<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Imagen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenFindFirstOrThrowArgs} args - Arguments to find a Imagen
     * @example
     * // Get one Imagen
     * const imagen = await prisma.imagen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImagenFindFirstOrThrowArgs>(args?: SelectSubset<T, ImagenFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImagenClient<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Imagens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Imagens
     * const imagens = await prisma.imagen.findMany()
     * 
     * // Get first 10 Imagens
     * const imagens = await prisma.imagen.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imagenWithIdOnly = await prisma.imagen.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ImagenFindManyArgs>(args?: SelectSubset<T, ImagenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Imagen.
     * @param {ImagenCreateArgs} args - Arguments to create a Imagen.
     * @example
     * // Create one Imagen
     * const Imagen = await prisma.imagen.create({
     *   data: {
     *     // ... data to create a Imagen
     *   }
     * })
     * 
     */
    create<T extends ImagenCreateArgs>(args: SelectSubset<T, ImagenCreateArgs<ExtArgs>>): Prisma__ImagenClient<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Imagens.
     * @param {ImagenCreateManyArgs} args - Arguments to create many Imagens.
     * @example
     * // Create many Imagens
     * const imagen = await prisma.imagen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImagenCreateManyArgs>(args?: SelectSubset<T, ImagenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Imagens and returns the data saved in the database.
     * @param {ImagenCreateManyAndReturnArgs} args - Arguments to create many Imagens.
     * @example
     * // Create many Imagens
     * const imagen = await prisma.imagen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Imagens and only return the `id`
     * const imagenWithIdOnly = await prisma.imagen.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ImagenCreateManyAndReturnArgs>(args?: SelectSubset<T, ImagenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Imagen.
     * @param {ImagenDeleteArgs} args - Arguments to delete one Imagen.
     * @example
     * // Delete one Imagen
     * const Imagen = await prisma.imagen.delete({
     *   where: {
     *     // ... filter to delete one Imagen
     *   }
     * })
     * 
     */
    delete<T extends ImagenDeleteArgs>(args: SelectSubset<T, ImagenDeleteArgs<ExtArgs>>): Prisma__ImagenClient<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Imagen.
     * @param {ImagenUpdateArgs} args - Arguments to update one Imagen.
     * @example
     * // Update one Imagen
     * const imagen = await prisma.imagen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImagenUpdateArgs>(args: SelectSubset<T, ImagenUpdateArgs<ExtArgs>>): Prisma__ImagenClient<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Imagens.
     * @param {ImagenDeleteManyArgs} args - Arguments to filter Imagens to delete.
     * @example
     * // Delete a few Imagens
     * const { count } = await prisma.imagen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImagenDeleteManyArgs>(args?: SelectSubset<T, ImagenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imagens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Imagens
     * const imagen = await prisma.imagen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImagenUpdateManyArgs>(args: SelectSubset<T, ImagenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imagens and returns the data updated in the database.
     * @param {ImagenUpdateManyAndReturnArgs} args - Arguments to update many Imagens.
     * @example
     * // Update many Imagens
     * const imagen = await prisma.imagen.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Imagens and only return the `id`
     * const imagenWithIdOnly = await prisma.imagen.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ImagenUpdateManyAndReturnArgs>(args: SelectSubset<T, ImagenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Imagen.
     * @param {ImagenUpsertArgs} args - Arguments to update or create a Imagen.
     * @example
     * // Update or create a Imagen
     * const imagen = await prisma.imagen.upsert({
     *   create: {
     *     // ... data to create a Imagen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Imagen we want to update
     *   }
     * })
     */
    upsert<T extends ImagenUpsertArgs>(args: SelectSubset<T, ImagenUpsertArgs<ExtArgs>>): Prisma__ImagenClient<$Result.GetResult<Prisma.$ImagenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Imagens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenCountArgs} args - Arguments to filter Imagens to count.
     * @example
     * // Count the number of Imagens
     * const count = await prisma.imagen.count({
     *   where: {
     *     // ... the filter for the Imagens we want to count
     *   }
     * })
    **/
    count<T extends ImagenCountArgs>(
      args?: Subset<T, ImagenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImagenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Imagen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImagenAggregateArgs>(args: Subset<T, ImagenAggregateArgs>): Prisma.PrismaPromise<GetImagenAggregateType<T>>

    /**
     * Group by Imagen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImagenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImagenGroupByArgs['orderBy'] }
        : { orderBy?: ImagenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImagenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Imagen model
   */
  readonly fields: ImagenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Imagen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImagenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    car<T extends CarDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CarDefaultArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Imagen model
   */
  interface ImagenFieldRefs {
    readonly id: FieldRef<"Imagen", 'String'>
    readonly url: FieldRef<"Imagen", 'String'>
    readonly carId: FieldRef<"Imagen", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Imagen findUnique
   */
  export type ImagenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    /**
     * Filter, which Imagen to fetch.
     */
    where: ImagenWhereUniqueInput
  }

  /**
   * Imagen findUniqueOrThrow
   */
  export type ImagenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    /**
     * Filter, which Imagen to fetch.
     */
    where: ImagenWhereUniqueInput
  }

  /**
   * Imagen findFirst
   */
  export type ImagenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    /**
     * Filter, which Imagen to fetch.
     */
    where?: ImagenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Imagens to fetch.
     */
    orderBy?: ImagenOrderByWithRelationInput | ImagenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Imagens.
     */
    cursor?: ImagenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Imagens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Imagens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Imagens.
     */
    distinct?: ImagenScalarFieldEnum | ImagenScalarFieldEnum[]
  }

  /**
   * Imagen findFirstOrThrow
   */
  export type ImagenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    /**
     * Filter, which Imagen to fetch.
     */
    where?: ImagenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Imagens to fetch.
     */
    orderBy?: ImagenOrderByWithRelationInput | ImagenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Imagens.
     */
    cursor?: ImagenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Imagens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Imagens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Imagens.
     */
    distinct?: ImagenScalarFieldEnum | ImagenScalarFieldEnum[]
  }

  /**
   * Imagen findMany
   */
  export type ImagenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    /**
     * Filter, which Imagens to fetch.
     */
    where?: ImagenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Imagens to fetch.
     */
    orderBy?: ImagenOrderByWithRelationInput | ImagenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Imagens.
     */
    cursor?: ImagenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Imagens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Imagens.
     */
    skip?: number
    distinct?: ImagenScalarFieldEnum | ImagenScalarFieldEnum[]
  }

  /**
   * Imagen create
   */
  export type ImagenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    /**
     * The data needed to create a Imagen.
     */
    data: XOR<ImagenCreateInput, ImagenUncheckedCreateInput>
  }

  /**
   * Imagen createMany
   */
  export type ImagenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Imagens.
     */
    data: ImagenCreateManyInput | ImagenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Imagen createManyAndReturn
   */
  export type ImagenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * The data used to create many Imagens.
     */
    data: ImagenCreateManyInput | ImagenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Imagen update
   */
  export type ImagenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    /**
     * The data needed to update a Imagen.
     */
    data: XOR<ImagenUpdateInput, ImagenUncheckedUpdateInput>
    /**
     * Choose, which Imagen to update.
     */
    where: ImagenWhereUniqueInput
  }

  /**
   * Imagen updateMany
   */
  export type ImagenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Imagens.
     */
    data: XOR<ImagenUpdateManyMutationInput, ImagenUncheckedUpdateManyInput>
    /**
     * Filter which Imagens to update
     */
    where?: ImagenWhereInput
    /**
     * Limit how many Imagens to update.
     */
    limit?: number
  }

  /**
   * Imagen updateManyAndReturn
   */
  export type ImagenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * The data used to update Imagens.
     */
    data: XOR<ImagenUpdateManyMutationInput, ImagenUncheckedUpdateManyInput>
    /**
     * Filter which Imagens to update
     */
    where?: ImagenWhereInput
    /**
     * Limit how many Imagens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Imagen upsert
   */
  export type ImagenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    /**
     * The filter to search for the Imagen to update in case it exists.
     */
    where: ImagenWhereUniqueInput
    /**
     * In case the Imagen found by the `where` argument doesn't exist, create a new Imagen with this data.
     */
    create: XOR<ImagenCreateInput, ImagenUncheckedCreateInput>
    /**
     * In case the Imagen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImagenUpdateInput, ImagenUncheckedUpdateInput>
  }

  /**
   * Imagen delete
   */
  export type ImagenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
    /**
     * Filter which Imagen to delete.
     */
    where: ImagenWhereUniqueInput
  }

  /**
   * Imagen deleteMany
   */
  export type ImagenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Imagens to delete
     */
    where?: ImagenWhereInput
    /**
     * Limit how many Imagens to delete.
     */
    limit?: number
  }

  /**
   * Imagen without action
   */
  export type ImagenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagen
     */
    select?: ImagenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Imagen
     */
    omit?: ImagenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenInclude<ExtArgs> | null
  }


  /**
   * Model Favorito
   */

  export type AggregateFavorito = {
    _count: FavoritoCountAggregateOutputType | null
    _min: FavoritoMinAggregateOutputType | null
    _max: FavoritoMaxAggregateOutputType | null
  }

  export type FavoritoMinAggregateOutputType = {
    id: string | null
    renterId: string | null
    carId: string | null
  }

  export type FavoritoMaxAggregateOutputType = {
    id: string | null
    renterId: string | null
    carId: string | null
  }

  export type FavoritoCountAggregateOutputType = {
    id: number
    renterId: number
    carId: number
    _all: number
  }


  export type FavoritoMinAggregateInputType = {
    id?: true
    renterId?: true
    carId?: true
  }

  export type FavoritoMaxAggregateInputType = {
    id?: true
    renterId?: true
    carId?: true
  }

  export type FavoritoCountAggregateInputType = {
    id?: true
    renterId?: true
    carId?: true
    _all?: true
  }

  export type FavoritoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorito to aggregate.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favoritos
    **/
    _count?: true | FavoritoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoritoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoritoMaxAggregateInputType
  }

  export type GetFavoritoAggregateType<T extends FavoritoAggregateArgs> = {
        [P in keyof T & keyof AggregateFavorito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavorito[P]>
      : GetScalarType<T[P], AggregateFavorito[P]>
  }




  export type FavoritoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritoWhereInput
    orderBy?: FavoritoOrderByWithAggregationInput | FavoritoOrderByWithAggregationInput[]
    by: FavoritoScalarFieldEnum[] | FavoritoScalarFieldEnum
    having?: FavoritoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoritoCountAggregateInputType | true
    _min?: FavoritoMinAggregateInputType
    _max?: FavoritoMaxAggregateInputType
  }

  export type FavoritoGroupByOutputType = {
    id: string
    renterId: string
    carId: string
    _count: FavoritoCountAggregateOutputType | null
    _min: FavoritoMinAggregateOutputType | null
    _max: FavoritoMaxAggregateOutputType | null
  }

  type GetFavoritoGroupByPayload<T extends FavoritoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoritoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoritoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoritoGroupByOutputType[P]>
            : GetScalarType<T[P], FavoritoGroupByOutputType[P]>
        }
      >
    >


  export type FavoritoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    carId?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorito"]>

  export type FavoritoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    carId?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorito"]>

  export type FavoritoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    renterId?: boolean
    carId?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    car?: boolean | CarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorito"]>

  export type FavoritoSelectScalar = {
    id?: boolean
    renterId?: boolean
    carId?: boolean
  }

  export type FavoritoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "renterId" | "carId", ExtArgs["result"]["favorito"]>
  export type FavoritoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    car?: boolean | CarDefaultArgs<ExtArgs>
  }
  export type FavoritoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    car?: boolean | CarDefaultArgs<ExtArgs>
  }
  export type FavoritoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    car?: boolean | CarDefaultArgs<ExtArgs>
  }

  export type $FavoritoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favorito"
    objects: {
      renter: Prisma.$RenterPayload<ExtArgs>
      car: Prisma.$CarPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      renterId: string
      carId: string
    }, ExtArgs["result"]["favorito"]>
    composites: {}
  }

  type FavoritoGetPayload<S extends boolean | null | undefined | FavoritoDefaultArgs> = $Result.GetResult<Prisma.$FavoritoPayload, S>

  type FavoritoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoritoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoritoCountAggregateInputType | true
    }

  export interface FavoritoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favorito'], meta: { name: 'Favorito' } }
    /**
     * Find zero or one Favorito that matches the filter.
     * @param {FavoritoFindUniqueArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoritoFindUniqueArgs>(args: SelectSubset<T, FavoritoFindUniqueArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Favorito that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoritoFindUniqueOrThrowArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoritoFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoritoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoFindFirstArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoritoFindFirstArgs>(args?: SelectSubset<T, FavoritoFindFirstArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoFindFirstOrThrowArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoritoFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoritoFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favoritos
     * const favoritos = await prisma.favorito.findMany()
     * 
     * // Get first 10 Favoritos
     * const favoritos = await prisma.favorito.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoritoWithIdOnly = await prisma.favorito.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoritoFindManyArgs>(args?: SelectSubset<T, FavoritoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Favorito.
     * @param {FavoritoCreateArgs} args - Arguments to create a Favorito.
     * @example
     * // Create one Favorito
     * const Favorito = await prisma.favorito.create({
     *   data: {
     *     // ... data to create a Favorito
     *   }
     * })
     * 
     */
    create<T extends FavoritoCreateArgs>(args: SelectSubset<T, FavoritoCreateArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Favoritos.
     * @param {FavoritoCreateManyArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favorito = await prisma.favorito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoritoCreateManyArgs>(args?: SelectSubset<T, FavoritoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favoritos and returns the data saved in the database.
     * @param {FavoritoCreateManyAndReturnArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favorito = await prisma.favorito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favoritos and only return the `id`
     * const favoritoWithIdOnly = await prisma.favorito.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavoritoCreateManyAndReturnArgs>(args?: SelectSubset<T, FavoritoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Favorito.
     * @param {FavoritoDeleteArgs} args - Arguments to delete one Favorito.
     * @example
     * // Delete one Favorito
     * const Favorito = await prisma.favorito.delete({
     *   where: {
     *     // ... filter to delete one Favorito
     *   }
     * })
     * 
     */
    delete<T extends FavoritoDeleteArgs>(args: SelectSubset<T, FavoritoDeleteArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Favorito.
     * @param {FavoritoUpdateArgs} args - Arguments to update one Favorito.
     * @example
     * // Update one Favorito
     * const favorito = await prisma.favorito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoritoUpdateArgs>(args: SelectSubset<T, FavoritoUpdateArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Favoritos.
     * @param {FavoritoDeleteManyArgs} args - Arguments to filter Favoritos to delete.
     * @example
     * // Delete a few Favoritos
     * const { count } = await prisma.favorito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoritoDeleteManyArgs>(args?: SelectSubset<T, FavoritoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favoritos
     * const favorito = await prisma.favorito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoritoUpdateManyArgs>(args: SelectSubset<T, FavoritoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos and returns the data updated in the database.
     * @param {FavoritoUpdateManyAndReturnArgs} args - Arguments to update many Favoritos.
     * @example
     * // Update many Favoritos
     * const favorito = await prisma.favorito.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Favoritos and only return the `id`
     * const favoritoWithIdOnly = await prisma.favorito.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FavoritoUpdateManyAndReturnArgs>(args: SelectSubset<T, FavoritoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Favorito.
     * @param {FavoritoUpsertArgs} args - Arguments to update or create a Favorito.
     * @example
     * // Update or create a Favorito
     * const favorito = await prisma.favorito.upsert({
     *   create: {
     *     // ... data to create a Favorito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favorito we want to update
     *   }
     * })
     */
    upsert<T extends FavoritoUpsertArgs>(args: SelectSubset<T, FavoritoUpsertArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoCountArgs} args - Arguments to filter Favoritos to count.
     * @example
     * // Count the number of Favoritos
     * const count = await prisma.favorito.count({
     *   where: {
     *     // ... the filter for the Favoritos we want to count
     *   }
     * })
    **/
    count<T extends FavoritoCountArgs>(
      args?: Subset<T, FavoritoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoritoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favorito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoritoAggregateArgs>(args: Subset<T, FavoritoAggregateArgs>): Prisma.PrismaPromise<GetFavoritoAggregateType<T>>

    /**
     * Group by Favorito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoritoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoritoGroupByArgs['orderBy'] }
        : { orderBy?: FavoritoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoritoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoritoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favorito model
   */
  readonly fields: FavoritoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favorito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoritoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    renter<T extends RenterDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RenterDefaultArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    car<T extends CarDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CarDefaultArgs<ExtArgs>>): Prisma__CarClient<$Result.GetResult<Prisma.$CarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Favorito model
   */
  interface FavoritoFieldRefs {
    readonly id: FieldRef<"Favorito", 'String'>
    readonly renterId: FieldRef<"Favorito", 'String'>
    readonly carId: FieldRef<"Favorito", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Favorito findUnique
   */
  export type FavoritoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito findUniqueOrThrow
   */
  export type FavoritoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito findFirst
   */
  export type FavoritoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Favorito findFirstOrThrow
   */
  export type FavoritoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Favorito findMany
   */
  export type FavoritoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favoritos.
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Favorito create
   */
  export type FavoritoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * The data needed to create a Favorito.
     */
    data: XOR<FavoritoCreateInput, FavoritoUncheckedCreateInput>
  }

  /**
   * Favorito createMany
   */
  export type FavoritoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritoCreateManyInput | FavoritoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favorito createManyAndReturn
   */
  export type FavoritoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritoCreateManyInput | FavoritoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorito update
   */
  export type FavoritoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * The data needed to update a Favorito.
     */
    data: XOR<FavoritoUpdateInput, FavoritoUncheckedUpdateInput>
    /**
     * Choose, which Favorito to update.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito updateMany
   */
  export type FavoritoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favoritos.
     */
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyInput>
    /**
     * Filter which Favoritos to update
     */
    where?: FavoritoWhereInput
    /**
     * Limit how many Favoritos to update.
     */
    limit?: number
  }

  /**
   * Favorito updateManyAndReturn
   */
  export type FavoritoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * The data used to update Favoritos.
     */
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyInput>
    /**
     * Filter which Favoritos to update
     */
    where?: FavoritoWhereInput
    /**
     * Limit how many Favoritos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorito upsert
   */
  export type FavoritoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * The filter to search for the Favorito to update in case it exists.
     */
    where: FavoritoWhereUniqueInput
    /**
     * In case the Favorito found by the `where` argument doesn't exist, create a new Favorito with this data.
     */
    create: XOR<FavoritoCreateInput, FavoritoUncheckedCreateInput>
    /**
     * In case the Favorito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoritoUpdateInput, FavoritoUncheckedUpdateInput>
  }

  /**
   * Favorito delete
   */
  export type FavoritoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter which Favorito to delete.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito deleteMany
   */
  export type FavoritoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favoritos to delete
     */
    where?: FavoritoWhereInput
    /**
     * Limit how many Favoritos to delete.
     */
    limit?: number
  }

  /**
   * Favorito without action
   */
  export type FavoritoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorito
     */
    omit?: FavoritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
  }


  /**
   * Model Descuento
   */

  export type AggregateDescuento = {
    _count: DescuentoCountAggregateOutputType | null
    _avg: DescuentoAvgAggregateOutputType | null
    _sum: DescuentoSumAggregateOutputType | null
    _min: DescuentoMinAggregateOutputType | null
    _max: DescuentoMaxAggregateOutputType | null
  }

  export type DescuentoAvgAggregateOutputType = {
    porcentaje: number | null
  }

  export type DescuentoSumAggregateOutputType = {
    porcentaje: number | null
  }

  export type DescuentoMinAggregateOutputType = {
    id: string | null
    fecha: Date | null
    porcentaje: number | null
  }

  export type DescuentoMaxAggregateOutputType = {
    id: string | null
    fecha: Date | null
    porcentaje: number | null
  }

  export type DescuentoCountAggregateOutputType = {
    id: number
    fecha: number
    porcentaje: number
    _all: number
  }


  export type DescuentoAvgAggregateInputType = {
    porcentaje?: true
  }

  export type DescuentoSumAggregateInputType = {
    porcentaje?: true
  }

  export type DescuentoMinAggregateInputType = {
    id?: true
    fecha?: true
    porcentaje?: true
  }

  export type DescuentoMaxAggregateInputType = {
    id?: true
    fecha?: true
    porcentaje?: true
  }

  export type DescuentoCountAggregateInputType = {
    id?: true
    fecha?: true
    porcentaje?: true
    _all?: true
  }

  export type DescuentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Descuento to aggregate.
     */
    where?: DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descuentos to fetch.
     */
    orderBy?: DescuentoOrderByWithRelationInput | DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descuentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Descuentos
    **/
    _count?: true | DescuentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DescuentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DescuentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DescuentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DescuentoMaxAggregateInputType
  }

  export type GetDescuentoAggregateType<T extends DescuentoAggregateArgs> = {
        [P in keyof T & keyof AggregateDescuento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDescuento[P]>
      : GetScalarType<T[P], AggregateDescuento[P]>
  }




  export type DescuentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DescuentoWhereInput
    orderBy?: DescuentoOrderByWithAggregationInput | DescuentoOrderByWithAggregationInput[]
    by: DescuentoScalarFieldEnum[] | DescuentoScalarFieldEnum
    having?: DescuentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DescuentoCountAggregateInputType | true
    _avg?: DescuentoAvgAggregateInputType
    _sum?: DescuentoSumAggregateInputType
    _min?: DescuentoMinAggregateInputType
    _max?: DescuentoMaxAggregateInputType
  }

  export type DescuentoGroupByOutputType = {
    id: string
    fecha: Date
    porcentaje: number
    _count: DescuentoCountAggregateOutputType | null
    _avg: DescuentoAvgAggregateOutputType | null
    _sum: DescuentoSumAggregateOutputType | null
    _min: DescuentoMinAggregateOutputType | null
    _max: DescuentoMaxAggregateOutputType | null
  }

  type GetDescuentoGroupByPayload<T extends DescuentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DescuentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DescuentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DescuentoGroupByOutputType[P]>
            : GetScalarType<T[P], DescuentoGroupByOutputType[P]>
        }
      >
    >


  export type DescuentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    porcentaje?: boolean
    reservas?: boolean | Descuento$reservasArgs<ExtArgs>
    _count?: boolean | DescuentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["descuento"]>

  export type DescuentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    porcentaje?: boolean
  }, ExtArgs["result"]["descuento"]>

  export type DescuentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    porcentaje?: boolean
  }, ExtArgs["result"]["descuento"]>

  export type DescuentoSelectScalar = {
    id?: boolean
    fecha?: boolean
    porcentaje?: boolean
  }

  export type DescuentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fecha" | "porcentaje", ExtArgs["result"]["descuento"]>
  export type DescuentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | Descuento$reservasArgs<ExtArgs>
    _count?: boolean | DescuentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DescuentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DescuentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DescuentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Descuento"
    objects: {
      reservas: Prisma.$ReservationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      fecha: Date
      porcentaje: number
    }, ExtArgs["result"]["descuento"]>
    composites: {}
  }

  type DescuentoGetPayload<S extends boolean | null | undefined | DescuentoDefaultArgs> = $Result.GetResult<Prisma.$DescuentoPayload, S>

  type DescuentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DescuentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DescuentoCountAggregateInputType | true
    }

  export interface DescuentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Descuento'], meta: { name: 'Descuento' } }
    /**
     * Find zero or one Descuento that matches the filter.
     * @param {DescuentoFindUniqueArgs} args - Arguments to find a Descuento
     * @example
     * // Get one Descuento
     * const descuento = await prisma.descuento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DescuentoFindUniqueArgs>(args: SelectSubset<T, DescuentoFindUniqueArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Descuento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DescuentoFindUniqueOrThrowArgs} args - Arguments to find a Descuento
     * @example
     * // Get one Descuento
     * const descuento = await prisma.descuento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DescuentoFindUniqueOrThrowArgs>(args: SelectSubset<T, DescuentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Descuento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoFindFirstArgs} args - Arguments to find a Descuento
     * @example
     * // Get one Descuento
     * const descuento = await prisma.descuento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DescuentoFindFirstArgs>(args?: SelectSubset<T, DescuentoFindFirstArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Descuento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoFindFirstOrThrowArgs} args - Arguments to find a Descuento
     * @example
     * // Get one Descuento
     * const descuento = await prisma.descuento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DescuentoFindFirstOrThrowArgs>(args?: SelectSubset<T, DescuentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Descuentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Descuentos
     * const descuentos = await prisma.descuento.findMany()
     * 
     * // Get first 10 Descuentos
     * const descuentos = await prisma.descuento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const descuentoWithIdOnly = await prisma.descuento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DescuentoFindManyArgs>(args?: SelectSubset<T, DescuentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Descuento.
     * @param {DescuentoCreateArgs} args - Arguments to create a Descuento.
     * @example
     * // Create one Descuento
     * const Descuento = await prisma.descuento.create({
     *   data: {
     *     // ... data to create a Descuento
     *   }
     * })
     * 
     */
    create<T extends DescuentoCreateArgs>(args: SelectSubset<T, DescuentoCreateArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Descuentos.
     * @param {DescuentoCreateManyArgs} args - Arguments to create many Descuentos.
     * @example
     * // Create many Descuentos
     * const descuento = await prisma.descuento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DescuentoCreateManyArgs>(args?: SelectSubset<T, DescuentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Descuentos and returns the data saved in the database.
     * @param {DescuentoCreateManyAndReturnArgs} args - Arguments to create many Descuentos.
     * @example
     * // Create many Descuentos
     * const descuento = await prisma.descuento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Descuentos and only return the `id`
     * const descuentoWithIdOnly = await prisma.descuento.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DescuentoCreateManyAndReturnArgs>(args?: SelectSubset<T, DescuentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Descuento.
     * @param {DescuentoDeleteArgs} args - Arguments to delete one Descuento.
     * @example
     * // Delete one Descuento
     * const Descuento = await prisma.descuento.delete({
     *   where: {
     *     // ... filter to delete one Descuento
     *   }
     * })
     * 
     */
    delete<T extends DescuentoDeleteArgs>(args: SelectSubset<T, DescuentoDeleteArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Descuento.
     * @param {DescuentoUpdateArgs} args - Arguments to update one Descuento.
     * @example
     * // Update one Descuento
     * const descuento = await prisma.descuento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DescuentoUpdateArgs>(args: SelectSubset<T, DescuentoUpdateArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Descuentos.
     * @param {DescuentoDeleteManyArgs} args - Arguments to filter Descuentos to delete.
     * @example
     * // Delete a few Descuentos
     * const { count } = await prisma.descuento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DescuentoDeleteManyArgs>(args?: SelectSubset<T, DescuentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Descuentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Descuentos
     * const descuento = await prisma.descuento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DescuentoUpdateManyArgs>(args: SelectSubset<T, DescuentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Descuentos and returns the data updated in the database.
     * @param {DescuentoUpdateManyAndReturnArgs} args - Arguments to update many Descuentos.
     * @example
     * // Update many Descuentos
     * const descuento = await prisma.descuento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Descuentos and only return the `id`
     * const descuentoWithIdOnly = await prisma.descuento.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DescuentoUpdateManyAndReturnArgs>(args: SelectSubset<T, DescuentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Descuento.
     * @param {DescuentoUpsertArgs} args - Arguments to update or create a Descuento.
     * @example
     * // Update or create a Descuento
     * const descuento = await prisma.descuento.upsert({
     *   create: {
     *     // ... data to create a Descuento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Descuento we want to update
     *   }
     * })
     */
    upsert<T extends DescuentoUpsertArgs>(args: SelectSubset<T, DescuentoUpsertArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Descuentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoCountArgs} args - Arguments to filter Descuentos to count.
     * @example
     * // Count the number of Descuentos
     * const count = await prisma.descuento.count({
     *   where: {
     *     // ... the filter for the Descuentos we want to count
     *   }
     * })
    **/
    count<T extends DescuentoCountArgs>(
      args?: Subset<T, DescuentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DescuentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Descuento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DescuentoAggregateArgs>(args: Subset<T, DescuentoAggregateArgs>): Prisma.PrismaPromise<GetDescuentoAggregateType<T>>

    /**
     * Group by Descuento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DescuentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DescuentoGroupByArgs['orderBy'] }
        : { orderBy?: DescuentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DescuentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDescuentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Descuento model
   */
  readonly fields: DescuentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Descuento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DescuentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservas<T extends Descuento$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Descuento$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Descuento model
   */
  interface DescuentoFieldRefs {
    readonly id: FieldRef<"Descuento", 'String'>
    readonly fecha: FieldRef<"Descuento", 'DateTime'>
    readonly porcentaje: FieldRef<"Descuento", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Descuento findUnique
   */
  export type DescuentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuento to fetch.
     */
    where: DescuentoWhereUniqueInput
  }

  /**
   * Descuento findUniqueOrThrow
   */
  export type DescuentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuento to fetch.
     */
    where: DescuentoWhereUniqueInput
  }

  /**
   * Descuento findFirst
   */
  export type DescuentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuento to fetch.
     */
    where?: DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descuentos to fetch.
     */
    orderBy?: DescuentoOrderByWithRelationInput | DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Descuentos.
     */
    cursor?: DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descuentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Descuentos.
     */
    distinct?: DescuentoScalarFieldEnum | DescuentoScalarFieldEnum[]
  }

  /**
   * Descuento findFirstOrThrow
   */
  export type DescuentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuento to fetch.
     */
    where?: DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descuentos to fetch.
     */
    orderBy?: DescuentoOrderByWithRelationInput | DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Descuentos.
     */
    cursor?: DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descuentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Descuentos.
     */
    distinct?: DescuentoScalarFieldEnum | DescuentoScalarFieldEnum[]
  }

  /**
   * Descuento findMany
   */
  export type DescuentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuentos to fetch.
     */
    where?: DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descuentos to fetch.
     */
    orderBy?: DescuentoOrderByWithRelationInput | DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Descuentos.
     */
    cursor?: DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descuentos.
     */
    skip?: number
    distinct?: DescuentoScalarFieldEnum | DescuentoScalarFieldEnum[]
  }

  /**
   * Descuento create
   */
  export type DescuentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Descuento.
     */
    data: XOR<DescuentoCreateInput, DescuentoUncheckedCreateInput>
  }

  /**
   * Descuento createMany
   */
  export type DescuentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Descuentos.
     */
    data: DescuentoCreateManyInput | DescuentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Descuento createManyAndReturn
   */
  export type DescuentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * The data used to create many Descuentos.
     */
    data: DescuentoCreateManyInput | DescuentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Descuento update
   */
  export type DescuentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Descuento.
     */
    data: XOR<DescuentoUpdateInput, DescuentoUncheckedUpdateInput>
    /**
     * Choose, which Descuento to update.
     */
    where: DescuentoWhereUniqueInput
  }

  /**
   * Descuento updateMany
   */
  export type DescuentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Descuentos.
     */
    data: XOR<DescuentoUpdateManyMutationInput, DescuentoUncheckedUpdateManyInput>
    /**
     * Filter which Descuentos to update
     */
    where?: DescuentoWhereInput
    /**
     * Limit how many Descuentos to update.
     */
    limit?: number
  }

  /**
   * Descuento updateManyAndReturn
   */
  export type DescuentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * The data used to update Descuentos.
     */
    data: XOR<DescuentoUpdateManyMutationInput, DescuentoUncheckedUpdateManyInput>
    /**
     * Filter which Descuentos to update
     */
    where?: DescuentoWhereInput
    /**
     * Limit how many Descuentos to update.
     */
    limit?: number
  }

  /**
   * Descuento upsert
   */
  export type DescuentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Descuento to update in case it exists.
     */
    where: DescuentoWhereUniqueInput
    /**
     * In case the Descuento found by the `where` argument doesn't exist, create a new Descuento with this data.
     */
    create: XOR<DescuentoCreateInput, DescuentoUncheckedCreateInput>
    /**
     * In case the Descuento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DescuentoUpdateInput, DescuentoUncheckedUpdateInput>
  }

  /**
   * Descuento delete
   */
  export type DescuentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter which Descuento to delete.
     */
    where: DescuentoWhereUniqueInput
  }

  /**
   * Descuento deleteMany
   */
  export type DescuentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Descuentos to delete
     */
    where?: DescuentoWhereInput
    /**
     * Limit how many Descuentos to delete.
     */
    limit?: number
  }

  /**
   * Descuento.reservas
   */
  export type Descuento$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Descuento without action
   */
  export type DescuentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
  }


  /**
   * Model CalificacionHostUsuario
   */

  export type AggregateCalificacionHostUsuario = {
    _count: CalificacionHostUsuarioCountAggregateOutputType | null
    _avg: CalificacionHostUsuarioAvgAggregateOutputType | null
    _sum: CalificacionHostUsuarioSumAggregateOutputType | null
    _min: CalificacionHostUsuarioMinAggregateOutputType | null
    _max: CalificacionHostUsuarioMaxAggregateOutputType | null
  }

  export type CalificacionHostUsuarioAvgAggregateOutputType = {
    comportamiento: number | null
    cuidadoVehiculo: number | null
    puntualidad: number | null
  }

  export type CalificacionHostUsuarioSumAggregateOutputType = {
    comportamiento: number | null
    cuidadoVehiculo: number | null
    puntualidad: number | null
  }

  export type CalificacionHostUsuarioMinAggregateOutputType = {
    id: string | null
    comportamiento: number | null
    cuidadoVehiculo: number | null
    puntualidad: number | null
    comentario: string | null
    reservationId: string | null
    calificadorId: string | null
    calificadoId: string | null
    fechaCreacion: Date | null
  }

  export type CalificacionHostUsuarioMaxAggregateOutputType = {
    id: string | null
    comportamiento: number | null
    cuidadoVehiculo: number | null
    puntualidad: number | null
    comentario: string | null
    reservationId: string | null
    calificadorId: string | null
    calificadoId: string | null
    fechaCreacion: Date | null
  }

  export type CalificacionHostUsuarioCountAggregateOutputType = {
    id: number
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario: number
    reservationId: number
    calificadorId: number
    calificadoId: number
    fechaCreacion: number
    _all: number
  }


  export type CalificacionHostUsuarioAvgAggregateInputType = {
    comportamiento?: true
    cuidadoVehiculo?: true
    puntualidad?: true
  }

  export type CalificacionHostUsuarioSumAggregateInputType = {
    comportamiento?: true
    cuidadoVehiculo?: true
    puntualidad?: true
  }

  export type CalificacionHostUsuarioMinAggregateInputType = {
    id?: true
    comportamiento?: true
    cuidadoVehiculo?: true
    puntualidad?: true
    comentario?: true
    reservationId?: true
    calificadorId?: true
    calificadoId?: true
    fechaCreacion?: true
  }

  export type CalificacionHostUsuarioMaxAggregateInputType = {
    id?: true
    comportamiento?: true
    cuidadoVehiculo?: true
    puntualidad?: true
    comentario?: true
    reservationId?: true
    calificadorId?: true
    calificadoId?: true
    fechaCreacion?: true
  }

  export type CalificacionHostUsuarioCountAggregateInputType = {
    id?: true
    comportamiento?: true
    cuidadoVehiculo?: true
    puntualidad?: true
    comentario?: true
    reservationId?: true
    calificadorId?: true
    calificadoId?: true
    fechaCreacion?: true
    _all?: true
  }

  export type CalificacionHostUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CalificacionHostUsuario to aggregate.
     */
    where?: CalificacionHostUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionHostUsuarios to fetch.
     */
    orderBy?: CalificacionHostUsuarioOrderByWithRelationInput | CalificacionHostUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CalificacionHostUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalificacionHostUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionHostUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CalificacionHostUsuarios
    **/
    _count?: true | CalificacionHostUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CalificacionHostUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CalificacionHostUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CalificacionHostUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CalificacionHostUsuarioMaxAggregateInputType
  }

  export type GetCalificacionHostUsuarioAggregateType<T extends CalificacionHostUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateCalificacionHostUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCalificacionHostUsuario[P]>
      : GetScalarType<T[P], AggregateCalificacionHostUsuario[P]>
  }




  export type CalificacionHostUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionHostUsuarioWhereInput
    orderBy?: CalificacionHostUsuarioOrderByWithAggregationInput | CalificacionHostUsuarioOrderByWithAggregationInput[]
    by: CalificacionHostUsuarioScalarFieldEnum[] | CalificacionHostUsuarioScalarFieldEnum
    having?: CalificacionHostUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CalificacionHostUsuarioCountAggregateInputType | true
    _avg?: CalificacionHostUsuarioAvgAggregateInputType
    _sum?: CalificacionHostUsuarioSumAggregateInputType
    _min?: CalificacionHostUsuarioMinAggregateInputType
    _max?: CalificacionHostUsuarioMaxAggregateInputType
  }

  export type CalificacionHostUsuarioGroupByOutputType = {
    id: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario: string | null
    reservationId: string
    calificadorId: string
    calificadoId: string
    fechaCreacion: Date
    _count: CalificacionHostUsuarioCountAggregateOutputType | null
    _avg: CalificacionHostUsuarioAvgAggregateOutputType | null
    _sum: CalificacionHostUsuarioSumAggregateOutputType | null
    _min: CalificacionHostUsuarioMinAggregateOutputType | null
    _max: CalificacionHostUsuarioMaxAggregateOutputType | null
  }

  type GetCalificacionHostUsuarioGroupByPayload<T extends CalificacionHostUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CalificacionHostUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CalificacionHostUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CalificacionHostUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], CalificacionHostUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type CalificacionHostUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    comportamiento?: boolean
    cuidadoVehiculo?: boolean
    puntualidad?: boolean
    comentario?: boolean
    reservationId?: boolean
    calificadorId?: boolean
    calificadoId?: boolean
    fechaCreacion?: boolean
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    calificador?: boolean | UserDefaultArgs<ExtArgs>
    calificado?: boolean | RenterDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacionHostUsuario"]>

  export type CalificacionHostUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    comportamiento?: boolean
    cuidadoVehiculo?: boolean
    puntualidad?: boolean
    comentario?: boolean
    reservationId?: boolean
    calificadorId?: boolean
    calificadoId?: boolean
    fechaCreacion?: boolean
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    calificador?: boolean | UserDefaultArgs<ExtArgs>
    calificado?: boolean | RenterDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacionHostUsuario"]>

  export type CalificacionHostUsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    comportamiento?: boolean
    cuidadoVehiculo?: boolean
    puntualidad?: boolean
    comentario?: boolean
    reservationId?: boolean
    calificadorId?: boolean
    calificadoId?: boolean
    fechaCreacion?: boolean
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    calificador?: boolean | UserDefaultArgs<ExtArgs>
    calificado?: boolean | RenterDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacionHostUsuario"]>

  export type CalificacionHostUsuarioSelectScalar = {
    id?: boolean
    comportamiento?: boolean
    cuidadoVehiculo?: boolean
    puntualidad?: boolean
    comentario?: boolean
    reservationId?: boolean
    calificadorId?: boolean
    calificadoId?: boolean
    fechaCreacion?: boolean
  }

  export type CalificacionHostUsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "comportamiento" | "cuidadoVehiculo" | "puntualidad" | "comentario" | "reservationId" | "calificadorId" | "calificadoId" | "fechaCreacion", ExtArgs["result"]["calificacionHostUsuario"]>
  export type CalificacionHostUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    calificador?: boolean | UserDefaultArgs<ExtArgs>
    calificado?: boolean | RenterDefaultArgs<ExtArgs>
  }
  export type CalificacionHostUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    calificador?: boolean | UserDefaultArgs<ExtArgs>
    calificado?: boolean | RenterDefaultArgs<ExtArgs>
  }
  export type CalificacionHostUsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation?: boolean | ReservationDefaultArgs<ExtArgs>
    calificador?: boolean | UserDefaultArgs<ExtArgs>
    calificado?: boolean | RenterDefaultArgs<ExtArgs>
  }

  export type $CalificacionHostUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CalificacionHostUsuario"
    objects: {
      reservation: Prisma.$ReservationPayload<ExtArgs>
      calificador: Prisma.$UserPayload<ExtArgs>
      calificado: Prisma.$RenterPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      comportamiento: number
      cuidadoVehiculo: number
      puntualidad: number
      comentario: string | null
      reservationId: string
      calificadorId: string
      calificadoId: string
      fechaCreacion: Date
    }, ExtArgs["result"]["calificacionHostUsuario"]>
    composites: {}
  }

  type CalificacionHostUsuarioGetPayload<S extends boolean | null | undefined | CalificacionHostUsuarioDefaultArgs> = $Result.GetResult<Prisma.$CalificacionHostUsuarioPayload, S>

  type CalificacionHostUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CalificacionHostUsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CalificacionHostUsuarioCountAggregateInputType | true
    }

  export interface CalificacionHostUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CalificacionHostUsuario'], meta: { name: 'CalificacionHostUsuario' } }
    /**
     * Find zero or one CalificacionHostUsuario that matches the filter.
     * @param {CalificacionHostUsuarioFindUniqueArgs} args - Arguments to find a CalificacionHostUsuario
     * @example
     * // Get one CalificacionHostUsuario
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CalificacionHostUsuarioFindUniqueArgs>(args: SelectSubset<T, CalificacionHostUsuarioFindUniqueArgs<ExtArgs>>): Prisma__CalificacionHostUsuarioClient<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CalificacionHostUsuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CalificacionHostUsuarioFindUniqueOrThrowArgs} args - Arguments to find a CalificacionHostUsuario
     * @example
     * // Get one CalificacionHostUsuario
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CalificacionHostUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, CalificacionHostUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CalificacionHostUsuarioClient<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CalificacionHostUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionHostUsuarioFindFirstArgs} args - Arguments to find a CalificacionHostUsuario
     * @example
     * // Get one CalificacionHostUsuario
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CalificacionHostUsuarioFindFirstArgs>(args?: SelectSubset<T, CalificacionHostUsuarioFindFirstArgs<ExtArgs>>): Prisma__CalificacionHostUsuarioClient<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CalificacionHostUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionHostUsuarioFindFirstOrThrowArgs} args - Arguments to find a CalificacionHostUsuario
     * @example
     * // Get one CalificacionHostUsuario
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CalificacionHostUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, CalificacionHostUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__CalificacionHostUsuarioClient<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CalificacionHostUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionHostUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CalificacionHostUsuarios
     * const calificacionHostUsuarios = await prisma.calificacionHostUsuario.findMany()
     * 
     * // Get first 10 CalificacionHostUsuarios
     * const calificacionHostUsuarios = await prisma.calificacionHostUsuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const calificacionHostUsuarioWithIdOnly = await prisma.calificacionHostUsuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CalificacionHostUsuarioFindManyArgs>(args?: SelectSubset<T, CalificacionHostUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CalificacionHostUsuario.
     * @param {CalificacionHostUsuarioCreateArgs} args - Arguments to create a CalificacionHostUsuario.
     * @example
     * // Create one CalificacionHostUsuario
     * const CalificacionHostUsuario = await prisma.calificacionHostUsuario.create({
     *   data: {
     *     // ... data to create a CalificacionHostUsuario
     *   }
     * })
     * 
     */
    create<T extends CalificacionHostUsuarioCreateArgs>(args: SelectSubset<T, CalificacionHostUsuarioCreateArgs<ExtArgs>>): Prisma__CalificacionHostUsuarioClient<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CalificacionHostUsuarios.
     * @param {CalificacionHostUsuarioCreateManyArgs} args - Arguments to create many CalificacionHostUsuarios.
     * @example
     * // Create many CalificacionHostUsuarios
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CalificacionHostUsuarioCreateManyArgs>(args?: SelectSubset<T, CalificacionHostUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CalificacionHostUsuarios and returns the data saved in the database.
     * @param {CalificacionHostUsuarioCreateManyAndReturnArgs} args - Arguments to create many CalificacionHostUsuarios.
     * @example
     * // Create many CalificacionHostUsuarios
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CalificacionHostUsuarios and only return the `id`
     * const calificacionHostUsuarioWithIdOnly = await prisma.calificacionHostUsuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CalificacionHostUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, CalificacionHostUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CalificacionHostUsuario.
     * @param {CalificacionHostUsuarioDeleteArgs} args - Arguments to delete one CalificacionHostUsuario.
     * @example
     * // Delete one CalificacionHostUsuario
     * const CalificacionHostUsuario = await prisma.calificacionHostUsuario.delete({
     *   where: {
     *     // ... filter to delete one CalificacionHostUsuario
     *   }
     * })
     * 
     */
    delete<T extends CalificacionHostUsuarioDeleteArgs>(args: SelectSubset<T, CalificacionHostUsuarioDeleteArgs<ExtArgs>>): Prisma__CalificacionHostUsuarioClient<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CalificacionHostUsuario.
     * @param {CalificacionHostUsuarioUpdateArgs} args - Arguments to update one CalificacionHostUsuario.
     * @example
     * // Update one CalificacionHostUsuario
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CalificacionHostUsuarioUpdateArgs>(args: SelectSubset<T, CalificacionHostUsuarioUpdateArgs<ExtArgs>>): Prisma__CalificacionHostUsuarioClient<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CalificacionHostUsuarios.
     * @param {CalificacionHostUsuarioDeleteManyArgs} args - Arguments to filter CalificacionHostUsuarios to delete.
     * @example
     * // Delete a few CalificacionHostUsuarios
     * const { count } = await prisma.calificacionHostUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CalificacionHostUsuarioDeleteManyArgs>(args?: SelectSubset<T, CalificacionHostUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CalificacionHostUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionHostUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CalificacionHostUsuarios
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CalificacionHostUsuarioUpdateManyArgs>(args: SelectSubset<T, CalificacionHostUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CalificacionHostUsuarios and returns the data updated in the database.
     * @param {CalificacionHostUsuarioUpdateManyAndReturnArgs} args - Arguments to update many CalificacionHostUsuarios.
     * @example
     * // Update many CalificacionHostUsuarios
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CalificacionHostUsuarios and only return the `id`
     * const calificacionHostUsuarioWithIdOnly = await prisma.calificacionHostUsuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CalificacionHostUsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, CalificacionHostUsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CalificacionHostUsuario.
     * @param {CalificacionHostUsuarioUpsertArgs} args - Arguments to update or create a CalificacionHostUsuario.
     * @example
     * // Update or create a CalificacionHostUsuario
     * const calificacionHostUsuario = await prisma.calificacionHostUsuario.upsert({
     *   create: {
     *     // ... data to create a CalificacionHostUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CalificacionHostUsuario we want to update
     *   }
     * })
     */
    upsert<T extends CalificacionHostUsuarioUpsertArgs>(args: SelectSubset<T, CalificacionHostUsuarioUpsertArgs<ExtArgs>>): Prisma__CalificacionHostUsuarioClient<$Result.GetResult<Prisma.$CalificacionHostUsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CalificacionHostUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionHostUsuarioCountArgs} args - Arguments to filter CalificacionHostUsuarios to count.
     * @example
     * // Count the number of CalificacionHostUsuarios
     * const count = await prisma.calificacionHostUsuario.count({
     *   where: {
     *     // ... the filter for the CalificacionHostUsuarios we want to count
     *   }
     * })
    **/
    count<T extends CalificacionHostUsuarioCountArgs>(
      args?: Subset<T, CalificacionHostUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CalificacionHostUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CalificacionHostUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionHostUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CalificacionHostUsuarioAggregateArgs>(args: Subset<T, CalificacionHostUsuarioAggregateArgs>): Prisma.PrismaPromise<GetCalificacionHostUsuarioAggregateType<T>>

    /**
     * Group by CalificacionHostUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionHostUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CalificacionHostUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CalificacionHostUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: CalificacionHostUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CalificacionHostUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCalificacionHostUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CalificacionHostUsuario model
   */
  readonly fields: CalificacionHostUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CalificacionHostUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CalificacionHostUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservation<T extends ReservationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservationDefaultArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    calificador<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    calificado<T extends RenterDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RenterDefaultArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CalificacionHostUsuario model
   */
  interface CalificacionHostUsuarioFieldRefs {
    readonly id: FieldRef<"CalificacionHostUsuario", 'String'>
    readonly comportamiento: FieldRef<"CalificacionHostUsuario", 'Int'>
    readonly cuidadoVehiculo: FieldRef<"CalificacionHostUsuario", 'Int'>
    readonly puntualidad: FieldRef<"CalificacionHostUsuario", 'Int'>
    readonly comentario: FieldRef<"CalificacionHostUsuario", 'String'>
    readonly reservationId: FieldRef<"CalificacionHostUsuario", 'String'>
    readonly calificadorId: FieldRef<"CalificacionHostUsuario", 'String'>
    readonly calificadoId: FieldRef<"CalificacionHostUsuario", 'String'>
    readonly fechaCreacion: FieldRef<"CalificacionHostUsuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CalificacionHostUsuario findUnique
   */
  export type CalificacionHostUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionHostUsuario to fetch.
     */
    where: CalificacionHostUsuarioWhereUniqueInput
  }

  /**
   * CalificacionHostUsuario findUniqueOrThrow
   */
  export type CalificacionHostUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionHostUsuario to fetch.
     */
    where: CalificacionHostUsuarioWhereUniqueInput
  }

  /**
   * CalificacionHostUsuario findFirst
   */
  export type CalificacionHostUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionHostUsuario to fetch.
     */
    where?: CalificacionHostUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionHostUsuarios to fetch.
     */
    orderBy?: CalificacionHostUsuarioOrderByWithRelationInput | CalificacionHostUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CalificacionHostUsuarios.
     */
    cursor?: CalificacionHostUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalificacionHostUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionHostUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CalificacionHostUsuarios.
     */
    distinct?: CalificacionHostUsuarioScalarFieldEnum | CalificacionHostUsuarioScalarFieldEnum[]
  }

  /**
   * CalificacionHostUsuario findFirstOrThrow
   */
  export type CalificacionHostUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionHostUsuario to fetch.
     */
    where?: CalificacionHostUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionHostUsuarios to fetch.
     */
    orderBy?: CalificacionHostUsuarioOrderByWithRelationInput | CalificacionHostUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CalificacionHostUsuarios.
     */
    cursor?: CalificacionHostUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalificacionHostUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionHostUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CalificacionHostUsuarios.
     */
    distinct?: CalificacionHostUsuarioScalarFieldEnum | CalificacionHostUsuarioScalarFieldEnum[]
  }

  /**
   * CalificacionHostUsuario findMany
   */
  export type CalificacionHostUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionHostUsuarios to fetch.
     */
    where?: CalificacionHostUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionHostUsuarios to fetch.
     */
    orderBy?: CalificacionHostUsuarioOrderByWithRelationInput | CalificacionHostUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CalificacionHostUsuarios.
     */
    cursor?: CalificacionHostUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalificacionHostUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionHostUsuarios.
     */
    skip?: number
    distinct?: CalificacionHostUsuarioScalarFieldEnum | CalificacionHostUsuarioScalarFieldEnum[]
  }

  /**
   * CalificacionHostUsuario create
   */
  export type CalificacionHostUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a CalificacionHostUsuario.
     */
    data: XOR<CalificacionHostUsuarioCreateInput, CalificacionHostUsuarioUncheckedCreateInput>
  }

  /**
   * CalificacionHostUsuario createMany
   */
  export type CalificacionHostUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CalificacionHostUsuarios.
     */
    data: CalificacionHostUsuarioCreateManyInput | CalificacionHostUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CalificacionHostUsuario createManyAndReturn
   */
  export type CalificacionHostUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many CalificacionHostUsuarios.
     */
    data: CalificacionHostUsuarioCreateManyInput | CalificacionHostUsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CalificacionHostUsuario update
   */
  export type CalificacionHostUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a CalificacionHostUsuario.
     */
    data: XOR<CalificacionHostUsuarioUpdateInput, CalificacionHostUsuarioUncheckedUpdateInput>
    /**
     * Choose, which CalificacionHostUsuario to update.
     */
    where: CalificacionHostUsuarioWhereUniqueInput
  }

  /**
   * CalificacionHostUsuario updateMany
   */
  export type CalificacionHostUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CalificacionHostUsuarios.
     */
    data: XOR<CalificacionHostUsuarioUpdateManyMutationInput, CalificacionHostUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which CalificacionHostUsuarios to update
     */
    where?: CalificacionHostUsuarioWhereInput
    /**
     * Limit how many CalificacionHostUsuarios to update.
     */
    limit?: number
  }

  /**
   * CalificacionHostUsuario updateManyAndReturn
   */
  export type CalificacionHostUsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * The data used to update CalificacionHostUsuarios.
     */
    data: XOR<CalificacionHostUsuarioUpdateManyMutationInput, CalificacionHostUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which CalificacionHostUsuarios to update
     */
    where?: CalificacionHostUsuarioWhereInput
    /**
     * Limit how many CalificacionHostUsuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CalificacionHostUsuario upsert
   */
  export type CalificacionHostUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the CalificacionHostUsuario to update in case it exists.
     */
    where: CalificacionHostUsuarioWhereUniqueInput
    /**
     * In case the CalificacionHostUsuario found by the `where` argument doesn't exist, create a new CalificacionHostUsuario with this data.
     */
    create: XOR<CalificacionHostUsuarioCreateInput, CalificacionHostUsuarioUncheckedCreateInput>
    /**
     * In case the CalificacionHostUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CalificacionHostUsuarioUpdateInput, CalificacionHostUsuarioUncheckedUpdateInput>
  }

  /**
   * CalificacionHostUsuario delete
   */
  export type CalificacionHostUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
    /**
     * Filter which CalificacionHostUsuario to delete.
     */
    where: CalificacionHostUsuarioWhereUniqueInput
  }

  /**
   * CalificacionHostUsuario deleteMany
   */
  export type CalificacionHostUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CalificacionHostUsuarios to delete
     */
    where?: CalificacionHostUsuarioWhereInput
    /**
     * Limit how many CalificacionHostUsuarios to delete.
     */
    limit?: number
  }

  /**
   * CalificacionHostUsuario without action
   */
  export type CalificacionHostUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionHostUsuario
     */
    select?: CalificacionHostUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionHostUsuario
     */
    omit?: CalificacionHostUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionHostUsuarioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    googleId: 'googleId',
    image: 'image',
    telefono: 'telefono',
    genero: 'genero',
    fechaNacimiento: 'fechaNacimiento',
    direccion: 'direccion',
    ciudad: 'ciudad',
    provincia: 'provincia',
    pais: 'pais',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    role: 'role'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RenterScalarFieldEnum: {
    id: 'id',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    phone: 'phone',
    occupation: 'occupation',
    address: 'address',
    age: 'age',
    profilePicture: 'profilePicture',
    rating: 'rating',
    memberSince: 'memberSince',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RenterScalarFieldEnum = (typeof RenterScalarFieldEnum)[keyof typeof RenterScalarFieldEnum]


  export const CarScalarFieldEnum: {
    id: 'id',
    vin: 'vin',
    año: 'año',
    marca: 'marca',
    modelo: 'modelo',
    placa: 'placa',
    asientos: 'asientos',
    puertas: 'puertas',
    soat: 'soat',
    precioPorDia: 'precioPorDia',
    numMantenimientos: 'numMantenimientos',
    transmision: 'transmision',
    estado: 'estado',
    direccion: 'direccion',
    ciudad: 'ciudad',
    provincia: 'provincia',
    pais: 'pais',
    color: 'color',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CarScalarFieldEnum = (typeof CarScalarFieldEnum)[keyof typeof CarScalarFieldEnum]


  export const ReservationScalarFieldEnum: {
    id: 'id',
    renterId: 'renterId',
    hostId: 'hostId',
    carId: 'carId',
    fechaInicio: 'fechaInicio',
    fechaFin: 'fechaFin',
    fechaCreacion: 'fechaCreacion',
    fechaExpiracion: 'fechaExpiracion',
    estado: 'estado',
    descuentoId: 'descuentoId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReservationScalarFieldEnum = (typeof ReservationScalarFieldEnum)[keyof typeof ReservationScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    renterId: 'renterId',
    hostId: 'hostId',
    reservationId: 'reservationId',
    carId: 'carId',
    rating: 'rating',
    behaviorRating: 'behaviorRating',
    carCareRating: 'carCareRating',
    punctualityRating: 'punctualityRating',
    comment: 'comment',
    hostName: 'hostName',
    hostPicture: 'hostPicture',
    renterName: 'renterName',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const ReportScalarFieldEnum: {
    id: 'id',
    renterId: 'renterId',
    reporterId: 'reporterId',
    reason: 'reason',
    additionalInfo: 'additionalInfo',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReportScalarFieldEnum = (typeof ReportScalarFieldEnum)[keyof typeof ReportScalarFieldEnum]


  export const CombustibleScalarFieldEnum: {
    id: 'id',
    tipoDeCombustible: 'tipoDeCombustible',
    carId: 'carId'
  };

  export type CombustibleScalarFieldEnum = (typeof CombustibleScalarFieldEnum)[keyof typeof CombustibleScalarFieldEnum]


  export const CaracteristicaAdicionalScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    carId: 'carId'
  };

  export type CaracteristicaAdicionalScalarFieldEnum = (typeof CaracteristicaAdicionalScalarFieldEnum)[keyof typeof CaracteristicaAdicionalScalarFieldEnum]


  export const ImagenScalarFieldEnum: {
    id: 'id',
    url: 'url',
    carId: 'carId'
  };

  export type ImagenScalarFieldEnum = (typeof ImagenScalarFieldEnum)[keyof typeof ImagenScalarFieldEnum]


  export const FavoritoScalarFieldEnum: {
    id: 'id',
    renterId: 'renterId',
    carId: 'carId'
  };

  export type FavoritoScalarFieldEnum = (typeof FavoritoScalarFieldEnum)[keyof typeof FavoritoScalarFieldEnum]


  export const DescuentoScalarFieldEnum: {
    id: 'id',
    fecha: 'fecha',
    porcentaje: 'porcentaje'
  };

  export type DescuentoScalarFieldEnum = (typeof DescuentoScalarFieldEnum)[keyof typeof DescuentoScalarFieldEnum]


  export const CalificacionHostUsuarioScalarFieldEnum: {
    id: 'id',
    comportamiento: 'comportamiento',
    cuidadoVehiculo: 'cuidadoVehiculo',
    puntualidad: 'puntualidad',
    comentario: 'comentario',
    reservationId: 'reservationId',
    calificadorId: 'calificadorId',
    calificadoId: 'calificadoId',
    fechaCreacion: 'fechaCreacion'
  };

  export type CalificacionHostUsuarioScalarFieldEnum = (typeof CalificacionHostUsuarioScalarFieldEnum)[keyof typeof CalificacionHostUsuarioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Genero'
   */
  export type EnumGeneroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Genero'>
    


  /**
   * Reference to a field of type 'Genero[]'
   */
  export type ListEnumGeneroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Genero[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'CarStatus'
   */
  export type EnumCarStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CarStatus'>
    


  /**
   * Reference to a field of type 'CarStatus[]'
   */
  export type ListEnumCarStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CarStatus[]'>
    


  /**
   * Reference to a field of type 'EstadoReservacion'
   */
  export type EnumEstadoReservacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoReservacion'>
    


  /**
   * Reference to a field of type 'EstadoReservacion[]'
   */
  export type ListEnumEstadoReservacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoReservacion[]'>
    


  /**
   * Reference to a field of type 'EstadoReporte'
   */
  export type EnumEstadoReporteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoReporte'>
    


  /**
   * Reference to a field of type 'EstadoReporte[]'
   */
  export type ListEnumEstadoReporteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoReporte[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    nombre?: StringNullableFilter<"User"> | string | null
    email?: StringFilter<"User"> | string
    password?: StringNullableFilter<"User"> | string | null
    googleId?: StringNullableFilter<"User"> | string | null
    image?: StringNullableFilter<"User"> | string | null
    telefono?: StringNullableFilter<"User"> | string | null
    genero?: EnumGeneroNullableFilter<"User"> | $Enums.Genero | null
    fechaNacimiento?: DateTimeNullableFilter<"User"> | Date | string | null
    direccion?: StringNullableFilter<"User"> | string | null
    ciudad?: StringNullableFilter<"User"> | string | null
    provincia?: StringNullableFilter<"User"> | string | null
    pais?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    reviews?: ReviewListRelationFilter
    reports?: ReportListRelationFilter
    reservations?: ReservationListRelationFilter
    cars?: CarListRelationFilter
    calificacionesHechas?: CalificacionHostUsuarioListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    googleId?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    genero?: SortOrderInput | SortOrder
    fechaNacimiento?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    provincia?: SortOrderInput | SortOrder
    pais?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
    reviews?: ReviewOrderByRelationAggregateInput
    reports?: ReportOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
    cars?: CarOrderByRelationAggregateInput
    calificacionesHechas?: CalificacionHostUsuarioOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    googleId?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    nombre?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    image?: StringNullableFilter<"User"> | string | null
    telefono?: StringNullableFilter<"User"> | string | null
    genero?: EnumGeneroNullableFilter<"User"> | $Enums.Genero | null
    fechaNacimiento?: DateTimeNullableFilter<"User"> | Date | string | null
    direccion?: StringNullableFilter<"User"> | string | null
    ciudad?: StringNullableFilter<"User"> | string | null
    provincia?: StringNullableFilter<"User"> | string | null
    pais?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    reviews?: ReviewListRelationFilter
    reports?: ReportListRelationFilter
    reservations?: ReservationListRelationFilter
    cars?: CarListRelationFilter
    calificacionesHechas?: CalificacionHostUsuarioListRelationFilter
  }, "id" | "email" | "googleId">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    googleId?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    genero?: SortOrderInput | SortOrder
    fechaNacimiento?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    provincia?: SortOrderInput | SortOrder
    pais?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    nombre?: StringNullableWithAggregatesFilter<"User"> | string | null
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringNullableWithAggregatesFilter<"User"> | string | null
    googleId?: StringNullableWithAggregatesFilter<"User"> | string | null
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"User"> | string | null
    genero?: EnumGeneroNullableWithAggregatesFilter<"User"> | $Enums.Genero | null
    fechaNacimiento?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    direccion?: StringNullableWithAggregatesFilter<"User"> | string | null
    ciudad?: StringNullableWithAggregatesFilter<"User"> | string | null
    provincia?: StringNullableWithAggregatesFilter<"User"> | string | null
    pais?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    role?: EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole
  }

  export type RenterWhereInput = {
    AND?: RenterWhereInput | RenterWhereInput[]
    OR?: RenterWhereInput[]
    NOT?: RenterWhereInput | RenterWhereInput[]
    id?: StringFilter<"Renter"> | string
    firstName?: StringFilter<"Renter"> | string
    lastName?: StringFilter<"Renter"> | string
    email?: StringFilter<"Renter"> | string
    phone?: StringNullableFilter<"Renter"> | string | null
    occupation?: StringNullableFilter<"Renter"> | string | null
    address?: StringNullableFilter<"Renter"> | string | null
    age?: IntNullableFilter<"Renter"> | number | null
    profilePicture?: StringNullableFilter<"Renter"> | string | null
    rating?: FloatFilter<"Renter"> | number
    memberSince?: DateTimeFilter<"Renter"> | Date | string
    createdAt?: DateTimeFilter<"Renter"> | Date | string
    updatedAt?: DateTimeFilter<"Renter"> | Date | string
    reviews?: ReviewListRelationFilter
    reports?: ReportListRelationFilter
    reservations?: ReservationListRelationFilter
    favoritos?: FavoritoListRelationFilter
    calificacionesRecibidas?: CalificacionHostUsuarioListRelationFilter
  }

  export type RenterOrderByWithRelationInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    occupation?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    age?: SortOrderInput | SortOrder
    profilePicture?: SortOrderInput | SortOrder
    rating?: SortOrder
    memberSince?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    reviews?: ReviewOrderByRelationAggregateInput
    reports?: ReportOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
    favoritos?: FavoritoOrderByRelationAggregateInput
    calificacionesRecibidas?: CalificacionHostUsuarioOrderByRelationAggregateInput
  }

  export type RenterWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: RenterWhereInput | RenterWhereInput[]
    OR?: RenterWhereInput[]
    NOT?: RenterWhereInput | RenterWhereInput[]
    firstName?: StringFilter<"Renter"> | string
    lastName?: StringFilter<"Renter"> | string
    phone?: StringNullableFilter<"Renter"> | string | null
    occupation?: StringNullableFilter<"Renter"> | string | null
    address?: StringNullableFilter<"Renter"> | string | null
    age?: IntNullableFilter<"Renter"> | number | null
    profilePicture?: StringNullableFilter<"Renter"> | string | null
    rating?: FloatFilter<"Renter"> | number
    memberSince?: DateTimeFilter<"Renter"> | Date | string
    createdAt?: DateTimeFilter<"Renter"> | Date | string
    updatedAt?: DateTimeFilter<"Renter"> | Date | string
    reviews?: ReviewListRelationFilter
    reports?: ReportListRelationFilter
    reservations?: ReservationListRelationFilter
    favoritos?: FavoritoListRelationFilter
    calificacionesRecibidas?: CalificacionHostUsuarioListRelationFilter
  }, "id" | "email">

  export type RenterOrderByWithAggregationInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    occupation?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    age?: SortOrderInput | SortOrder
    profilePicture?: SortOrderInput | SortOrder
    rating?: SortOrder
    memberSince?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RenterCountOrderByAggregateInput
    _avg?: RenterAvgOrderByAggregateInput
    _max?: RenterMaxOrderByAggregateInput
    _min?: RenterMinOrderByAggregateInput
    _sum?: RenterSumOrderByAggregateInput
  }

  export type RenterScalarWhereWithAggregatesInput = {
    AND?: RenterScalarWhereWithAggregatesInput | RenterScalarWhereWithAggregatesInput[]
    OR?: RenterScalarWhereWithAggregatesInput[]
    NOT?: RenterScalarWhereWithAggregatesInput | RenterScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Renter"> | string
    firstName?: StringWithAggregatesFilter<"Renter"> | string
    lastName?: StringWithAggregatesFilter<"Renter"> | string
    email?: StringWithAggregatesFilter<"Renter"> | string
    phone?: StringNullableWithAggregatesFilter<"Renter"> | string | null
    occupation?: StringNullableWithAggregatesFilter<"Renter"> | string | null
    address?: StringNullableWithAggregatesFilter<"Renter"> | string | null
    age?: IntNullableWithAggregatesFilter<"Renter"> | number | null
    profilePicture?: StringNullableWithAggregatesFilter<"Renter"> | string | null
    rating?: FloatWithAggregatesFilter<"Renter"> | number
    memberSince?: DateTimeWithAggregatesFilter<"Renter"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Renter"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Renter"> | Date | string
  }

  export type CarWhereInput = {
    AND?: CarWhereInput | CarWhereInput[]
    OR?: CarWhereInput[]
    NOT?: CarWhereInput | CarWhereInput[]
    id?: StringFilter<"Car"> | string
    vin?: StringNullableFilter<"Car"> | string | null
    año?: IntFilter<"Car"> | number
    marca?: StringFilter<"Car"> | string
    modelo?: StringFilter<"Car"> | string
    placa?: StringFilter<"Car"> | string
    asientos?: IntNullableFilter<"Car"> | number | null
    puertas?: IntNullableFilter<"Car"> | number | null
    soat?: BoolNullableFilter<"Car"> | boolean | null
    precioPorDia?: FloatFilter<"Car"> | number
    numMantenimientos?: IntNullableFilter<"Car"> | number | null
    transmision?: StringNullableFilter<"Car"> | string | null
    estado?: EnumCarStatusFilter<"Car"> | $Enums.CarStatus
    direccion?: StringNullableFilter<"Car"> | string | null
    ciudad?: StringNullableFilter<"Car"> | string | null
    provincia?: StringNullableFilter<"Car"> | string | null
    pais?: StringNullableFilter<"Car"> | string | null
    color?: StringFilter<"Car"> | string
    userId?: StringFilter<"Car"> | string
    createdAt?: DateTimeFilter<"Car"> | Date | string
    updatedAt?: DateTimeFilter<"Car"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    combustibles?: CombustibleListRelationFilter
    caracteristicas?: CaracteristicaAdicionalListRelationFilter
    imagenes?: ImagenListRelationFilter
    favoritos?: FavoritoListRelationFilter
    reservations?: ReservationListRelationFilter
    reviews?: ReviewListRelationFilter
  }

  export type CarOrderByWithRelationInput = {
    id?: SortOrder
    vin?: SortOrderInput | SortOrder
    año?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    placa?: SortOrder
    asientos?: SortOrderInput | SortOrder
    puertas?: SortOrderInput | SortOrder
    soat?: SortOrderInput | SortOrder
    precioPorDia?: SortOrder
    numMantenimientos?: SortOrderInput | SortOrder
    transmision?: SortOrderInput | SortOrder
    estado?: SortOrder
    direccion?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    provincia?: SortOrderInput | SortOrder
    pais?: SortOrderInput | SortOrder
    color?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    combustibles?: CombustibleOrderByRelationAggregateInput
    caracteristicas?: CaracteristicaAdicionalOrderByRelationAggregateInput
    imagenes?: ImagenOrderByRelationAggregateInput
    favoritos?: FavoritoOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
  }

  export type CarWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    placa?: string
    AND?: CarWhereInput | CarWhereInput[]
    OR?: CarWhereInput[]
    NOT?: CarWhereInput | CarWhereInput[]
    vin?: StringNullableFilter<"Car"> | string | null
    año?: IntFilter<"Car"> | number
    marca?: StringFilter<"Car"> | string
    modelo?: StringFilter<"Car"> | string
    asientos?: IntNullableFilter<"Car"> | number | null
    puertas?: IntNullableFilter<"Car"> | number | null
    soat?: BoolNullableFilter<"Car"> | boolean | null
    precioPorDia?: FloatFilter<"Car"> | number
    numMantenimientos?: IntNullableFilter<"Car"> | number | null
    transmision?: StringNullableFilter<"Car"> | string | null
    estado?: EnumCarStatusFilter<"Car"> | $Enums.CarStatus
    direccion?: StringNullableFilter<"Car"> | string | null
    ciudad?: StringNullableFilter<"Car"> | string | null
    provincia?: StringNullableFilter<"Car"> | string | null
    pais?: StringNullableFilter<"Car"> | string | null
    color?: StringFilter<"Car"> | string
    userId?: StringFilter<"Car"> | string
    createdAt?: DateTimeFilter<"Car"> | Date | string
    updatedAt?: DateTimeFilter<"Car"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    combustibles?: CombustibleListRelationFilter
    caracteristicas?: CaracteristicaAdicionalListRelationFilter
    imagenes?: ImagenListRelationFilter
    favoritos?: FavoritoListRelationFilter
    reservations?: ReservationListRelationFilter
    reviews?: ReviewListRelationFilter
  }, "id" | "placa">

  export type CarOrderByWithAggregationInput = {
    id?: SortOrder
    vin?: SortOrderInput | SortOrder
    año?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    placa?: SortOrder
    asientos?: SortOrderInput | SortOrder
    puertas?: SortOrderInput | SortOrder
    soat?: SortOrderInput | SortOrder
    precioPorDia?: SortOrder
    numMantenimientos?: SortOrderInput | SortOrder
    transmision?: SortOrderInput | SortOrder
    estado?: SortOrder
    direccion?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    provincia?: SortOrderInput | SortOrder
    pais?: SortOrderInput | SortOrder
    color?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CarCountOrderByAggregateInput
    _avg?: CarAvgOrderByAggregateInput
    _max?: CarMaxOrderByAggregateInput
    _min?: CarMinOrderByAggregateInput
    _sum?: CarSumOrderByAggregateInput
  }

  export type CarScalarWhereWithAggregatesInput = {
    AND?: CarScalarWhereWithAggregatesInput | CarScalarWhereWithAggregatesInput[]
    OR?: CarScalarWhereWithAggregatesInput[]
    NOT?: CarScalarWhereWithAggregatesInput | CarScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Car"> | string
    vin?: StringNullableWithAggregatesFilter<"Car"> | string | null
    año?: IntWithAggregatesFilter<"Car"> | number
    marca?: StringWithAggregatesFilter<"Car"> | string
    modelo?: StringWithAggregatesFilter<"Car"> | string
    placa?: StringWithAggregatesFilter<"Car"> | string
    asientos?: IntNullableWithAggregatesFilter<"Car"> | number | null
    puertas?: IntNullableWithAggregatesFilter<"Car"> | number | null
    soat?: BoolNullableWithAggregatesFilter<"Car"> | boolean | null
    precioPorDia?: FloatWithAggregatesFilter<"Car"> | number
    numMantenimientos?: IntNullableWithAggregatesFilter<"Car"> | number | null
    transmision?: StringNullableWithAggregatesFilter<"Car"> | string | null
    estado?: EnumCarStatusWithAggregatesFilter<"Car"> | $Enums.CarStatus
    direccion?: StringNullableWithAggregatesFilter<"Car"> | string | null
    ciudad?: StringNullableWithAggregatesFilter<"Car"> | string | null
    provincia?: StringNullableWithAggregatesFilter<"Car"> | string | null
    pais?: StringNullableWithAggregatesFilter<"Car"> | string | null
    color?: StringWithAggregatesFilter<"Car"> | string
    userId?: StringWithAggregatesFilter<"Car"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Car"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Car"> | Date | string
  }

  export type ReservationWhereInput = {
    AND?: ReservationWhereInput | ReservationWhereInput[]
    OR?: ReservationWhereInput[]
    NOT?: ReservationWhereInput | ReservationWhereInput[]
    id?: StringFilter<"Reservation"> | string
    renterId?: StringFilter<"Reservation"> | string
    hostId?: StringFilter<"Reservation"> | string
    carId?: StringNullableFilter<"Reservation"> | string | null
    fechaInicio?: DateTimeFilter<"Reservation"> | Date | string
    fechaFin?: DateTimeFilter<"Reservation"> | Date | string
    fechaCreacion?: DateTimeFilter<"Reservation"> | Date | string
    fechaExpiracion?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    estado?: EnumEstadoReservacionFilter<"Reservation"> | $Enums.EstadoReservacion
    descuentoId?: StringNullableFilter<"Reservation"> | string | null
    createdAt?: DateTimeFilter<"Reservation"> | Date | string
    updatedAt?: DateTimeFilter<"Reservation"> | Date | string
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    host?: XOR<UserScalarRelationFilter, UserWhereInput>
    car?: XOR<CarNullableScalarRelationFilter, CarWhereInput> | null
    descuento?: XOR<DescuentoNullableScalarRelationFilter, DescuentoWhereInput> | null
    reviews?: ReviewListRelationFilter
    calificaciones?: CalificacionHostUsuarioListRelationFilter
  }

  export type ReservationOrderByWithRelationInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    carId?: SortOrderInput | SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    fechaCreacion?: SortOrder
    fechaExpiracion?: SortOrderInput | SortOrder
    estado?: SortOrder
    descuentoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    renter?: RenterOrderByWithRelationInput
    host?: UserOrderByWithRelationInput
    car?: CarOrderByWithRelationInput
    descuento?: DescuentoOrderByWithRelationInput
    reviews?: ReviewOrderByRelationAggregateInput
    calificaciones?: CalificacionHostUsuarioOrderByRelationAggregateInput
  }

  export type ReservationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReservationWhereInput | ReservationWhereInput[]
    OR?: ReservationWhereInput[]
    NOT?: ReservationWhereInput | ReservationWhereInput[]
    renterId?: StringFilter<"Reservation"> | string
    hostId?: StringFilter<"Reservation"> | string
    carId?: StringNullableFilter<"Reservation"> | string | null
    fechaInicio?: DateTimeFilter<"Reservation"> | Date | string
    fechaFin?: DateTimeFilter<"Reservation"> | Date | string
    fechaCreacion?: DateTimeFilter<"Reservation"> | Date | string
    fechaExpiracion?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    estado?: EnumEstadoReservacionFilter<"Reservation"> | $Enums.EstadoReservacion
    descuentoId?: StringNullableFilter<"Reservation"> | string | null
    createdAt?: DateTimeFilter<"Reservation"> | Date | string
    updatedAt?: DateTimeFilter<"Reservation"> | Date | string
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    host?: XOR<UserScalarRelationFilter, UserWhereInput>
    car?: XOR<CarNullableScalarRelationFilter, CarWhereInput> | null
    descuento?: XOR<DescuentoNullableScalarRelationFilter, DescuentoWhereInput> | null
    reviews?: ReviewListRelationFilter
    calificaciones?: CalificacionHostUsuarioListRelationFilter
  }, "id">

  export type ReservationOrderByWithAggregationInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    carId?: SortOrderInput | SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    fechaCreacion?: SortOrder
    fechaExpiracion?: SortOrderInput | SortOrder
    estado?: SortOrder
    descuentoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReservationCountOrderByAggregateInput
    _max?: ReservationMaxOrderByAggregateInput
    _min?: ReservationMinOrderByAggregateInput
  }

  export type ReservationScalarWhereWithAggregatesInput = {
    AND?: ReservationScalarWhereWithAggregatesInput | ReservationScalarWhereWithAggregatesInput[]
    OR?: ReservationScalarWhereWithAggregatesInput[]
    NOT?: ReservationScalarWhereWithAggregatesInput | ReservationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Reservation"> | string
    renterId?: StringWithAggregatesFilter<"Reservation"> | string
    hostId?: StringWithAggregatesFilter<"Reservation"> | string
    carId?: StringNullableWithAggregatesFilter<"Reservation"> | string | null
    fechaInicio?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    fechaFin?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    fechaExpiracion?: DateTimeNullableWithAggregatesFilter<"Reservation"> | Date | string | null
    estado?: EnumEstadoReservacionWithAggregatesFilter<"Reservation"> | $Enums.EstadoReservacion
    descuentoId?: StringNullableWithAggregatesFilter<"Reservation"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: StringFilter<"Review"> | string
    renterId?: StringFilter<"Review"> | string
    hostId?: StringFilter<"Review"> | string
    reservationId?: StringFilter<"Review"> | string
    carId?: StringNullableFilter<"Review"> | string | null
    rating?: IntFilter<"Review"> | number
    behaviorRating?: IntFilter<"Review"> | number
    carCareRating?: IntFilter<"Review"> | number
    punctualityRating?: IntFilter<"Review"> | number
    comment?: StringNullableFilter<"Review"> | string | null
    hostName?: StringFilter<"Review"> | string
    hostPicture?: StringNullableFilter<"Review"> | string | null
    renterName?: StringFilter<"Review"> | string
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    host?: XOR<UserScalarRelationFilter, UserWhereInput>
    reservation?: XOR<ReservationScalarRelationFilter, ReservationWhereInput>
    car?: XOR<CarNullableScalarRelationFilter, CarWhereInput> | null
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    reservationId?: SortOrder
    carId?: SortOrderInput | SortOrder
    rating?: SortOrder
    behaviorRating?: SortOrder
    carCareRating?: SortOrder
    punctualityRating?: SortOrder
    comment?: SortOrderInput | SortOrder
    hostName?: SortOrder
    hostPicture?: SortOrderInput | SortOrder
    renterName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    renter?: RenterOrderByWithRelationInput
    host?: UserOrderByWithRelationInput
    reservation?: ReservationOrderByWithRelationInput
    car?: CarOrderByWithRelationInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    renterId?: StringFilter<"Review"> | string
    hostId?: StringFilter<"Review"> | string
    reservationId?: StringFilter<"Review"> | string
    carId?: StringNullableFilter<"Review"> | string | null
    rating?: IntFilter<"Review"> | number
    behaviorRating?: IntFilter<"Review"> | number
    carCareRating?: IntFilter<"Review"> | number
    punctualityRating?: IntFilter<"Review"> | number
    comment?: StringNullableFilter<"Review"> | string | null
    hostName?: StringFilter<"Review"> | string
    hostPicture?: StringNullableFilter<"Review"> | string | null
    renterName?: StringFilter<"Review"> | string
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    host?: XOR<UserScalarRelationFilter, UserWhereInput>
    reservation?: XOR<ReservationScalarRelationFilter, ReservationWhereInput>
    car?: XOR<CarNullableScalarRelationFilter, CarWhereInput> | null
  }, "id">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    reservationId?: SortOrder
    carId?: SortOrderInput | SortOrder
    rating?: SortOrder
    behaviorRating?: SortOrder
    carCareRating?: SortOrder
    punctualityRating?: SortOrder
    comment?: SortOrderInput | SortOrder
    hostName?: SortOrder
    hostPicture?: SortOrderInput | SortOrder
    renterName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Review"> | string
    renterId?: StringWithAggregatesFilter<"Review"> | string
    hostId?: StringWithAggregatesFilter<"Review"> | string
    reservationId?: StringWithAggregatesFilter<"Review"> | string
    carId?: StringNullableWithAggregatesFilter<"Review"> | string | null
    rating?: IntWithAggregatesFilter<"Review"> | number
    behaviorRating?: IntWithAggregatesFilter<"Review"> | number
    carCareRating?: IntWithAggregatesFilter<"Review"> | number
    punctualityRating?: IntWithAggregatesFilter<"Review"> | number
    comment?: StringNullableWithAggregatesFilter<"Review"> | string | null
    hostName?: StringWithAggregatesFilter<"Review"> | string
    hostPicture?: StringNullableWithAggregatesFilter<"Review"> | string | null
    renterName?: StringWithAggregatesFilter<"Review"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
  }

  export type ReportWhereInput = {
    AND?: ReportWhereInput | ReportWhereInput[]
    OR?: ReportWhereInput[]
    NOT?: ReportWhereInput | ReportWhereInput[]
    id?: StringFilter<"Report"> | string
    renterId?: StringFilter<"Report"> | string
    reporterId?: StringFilter<"Report"> | string
    reason?: StringFilter<"Report"> | string
    additionalInfo?: StringNullableFilter<"Report"> | string | null
    status?: EnumEstadoReporteFilter<"Report"> | $Enums.EstadoReporte
    createdAt?: DateTimeFilter<"Report"> | Date | string
    updatedAt?: DateTimeFilter<"Report"> | Date | string
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    reporter?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ReportOrderByWithRelationInput = {
    id?: SortOrder
    renterId?: SortOrder
    reporterId?: SortOrder
    reason?: SortOrder
    additionalInfo?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    renter?: RenterOrderByWithRelationInput
    reporter?: UserOrderByWithRelationInput
  }

  export type ReportWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReportWhereInput | ReportWhereInput[]
    OR?: ReportWhereInput[]
    NOT?: ReportWhereInput | ReportWhereInput[]
    renterId?: StringFilter<"Report"> | string
    reporterId?: StringFilter<"Report"> | string
    reason?: StringFilter<"Report"> | string
    additionalInfo?: StringNullableFilter<"Report"> | string | null
    status?: EnumEstadoReporteFilter<"Report"> | $Enums.EstadoReporte
    createdAt?: DateTimeFilter<"Report"> | Date | string
    updatedAt?: DateTimeFilter<"Report"> | Date | string
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    reporter?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ReportOrderByWithAggregationInput = {
    id?: SortOrder
    renterId?: SortOrder
    reporterId?: SortOrder
    reason?: SortOrder
    additionalInfo?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReportCountOrderByAggregateInput
    _max?: ReportMaxOrderByAggregateInput
    _min?: ReportMinOrderByAggregateInput
  }

  export type ReportScalarWhereWithAggregatesInput = {
    AND?: ReportScalarWhereWithAggregatesInput | ReportScalarWhereWithAggregatesInput[]
    OR?: ReportScalarWhereWithAggregatesInput[]
    NOT?: ReportScalarWhereWithAggregatesInput | ReportScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Report"> | string
    renterId?: StringWithAggregatesFilter<"Report"> | string
    reporterId?: StringWithAggregatesFilter<"Report"> | string
    reason?: StringWithAggregatesFilter<"Report"> | string
    additionalInfo?: StringNullableWithAggregatesFilter<"Report"> | string | null
    status?: EnumEstadoReporteWithAggregatesFilter<"Report"> | $Enums.EstadoReporte
    createdAt?: DateTimeWithAggregatesFilter<"Report"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Report"> | Date | string
  }

  export type CombustibleWhereInput = {
    AND?: CombustibleWhereInput | CombustibleWhereInput[]
    OR?: CombustibleWhereInput[]
    NOT?: CombustibleWhereInput | CombustibleWhereInput[]
    id?: StringFilter<"Combustible"> | string
    tipoDeCombustible?: StringFilter<"Combustible"> | string
    carId?: StringFilter<"Combustible"> | string
    car?: XOR<CarScalarRelationFilter, CarWhereInput>
  }

  export type CombustibleOrderByWithRelationInput = {
    id?: SortOrder
    tipoDeCombustible?: SortOrder
    carId?: SortOrder
    car?: CarOrderByWithRelationInput
  }

  export type CombustibleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CombustibleWhereInput | CombustibleWhereInput[]
    OR?: CombustibleWhereInput[]
    NOT?: CombustibleWhereInput | CombustibleWhereInput[]
    tipoDeCombustible?: StringFilter<"Combustible"> | string
    carId?: StringFilter<"Combustible"> | string
    car?: XOR<CarScalarRelationFilter, CarWhereInput>
  }, "id">

  export type CombustibleOrderByWithAggregationInput = {
    id?: SortOrder
    tipoDeCombustible?: SortOrder
    carId?: SortOrder
    _count?: CombustibleCountOrderByAggregateInput
    _max?: CombustibleMaxOrderByAggregateInput
    _min?: CombustibleMinOrderByAggregateInput
  }

  export type CombustibleScalarWhereWithAggregatesInput = {
    AND?: CombustibleScalarWhereWithAggregatesInput | CombustibleScalarWhereWithAggregatesInput[]
    OR?: CombustibleScalarWhereWithAggregatesInput[]
    NOT?: CombustibleScalarWhereWithAggregatesInput | CombustibleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Combustible"> | string
    tipoDeCombustible?: StringWithAggregatesFilter<"Combustible"> | string
    carId?: StringWithAggregatesFilter<"Combustible"> | string
  }

  export type CaracteristicaAdicionalWhereInput = {
    AND?: CaracteristicaAdicionalWhereInput | CaracteristicaAdicionalWhereInput[]
    OR?: CaracteristicaAdicionalWhereInput[]
    NOT?: CaracteristicaAdicionalWhereInput | CaracteristicaAdicionalWhereInput[]
    id?: StringFilter<"CaracteristicaAdicional"> | string
    nombre?: StringFilter<"CaracteristicaAdicional"> | string
    carId?: StringFilter<"CaracteristicaAdicional"> | string
    car?: XOR<CarScalarRelationFilter, CarWhereInput>
  }

  export type CaracteristicaAdicionalOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    carId?: SortOrder
    car?: CarOrderByWithRelationInput
  }

  export type CaracteristicaAdicionalWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CaracteristicaAdicionalWhereInput | CaracteristicaAdicionalWhereInput[]
    OR?: CaracteristicaAdicionalWhereInput[]
    NOT?: CaracteristicaAdicionalWhereInput | CaracteristicaAdicionalWhereInput[]
    nombre?: StringFilter<"CaracteristicaAdicional"> | string
    carId?: StringFilter<"CaracteristicaAdicional"> | string
    car?: XOR<CarScalarRelationFilter, CarWhereInput>
  }, "id">

  export type CaracteristicaAdicionalOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    carId?: SortOrder
    _count?: CaracteristicaAdicionalCountOrderByAggregateInput
    _max?: CaracteristicaAdicionalMaxOrderByAggregateInput
    _min?: CaracteristicaAdicionalMinOrderByAggregateInput
  }

  export type CaracteristicaAdicionalScalarWhereWithAggregatesInput = {
    AND?: CaracteristicaAdicionalScalarWhereWithAggregatesInput | CaracteristicaAdicionalScalarWhereWithAggregatesInput[]
    OR?: CaracteristicaAdicionalScalarWhereWithAggregatesInput[]
    NOT?: CaracteristicaAdicionalScalarWhereWithAggregatesInput | CaracteristicaAdicionalScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CaracteristicaAdicional"> | string
    nombre?: StringWithAggregatesFilter<"CaracteristicaAdicional"> | string
    carId?: StringWithAggregatesFilter<"CaracteristicaAdicional"> | string
  }

  export type ImagenWhereInput = {
    AND?: ImagenWhereInput | ImagenWhereInput[]
    OR?: ImagenWhereInput[]
    NOT?: ImagenWhereInput | ImagenWhereInput[]
    id?: StringFilter<"Imagen"> | string
    url?: StringFilter<"Imagen"> | string
    carId?: StringFilter<"Imagen"> | string
    car?: XOR<CarScalarRelationFilter, CarWhereInput>
  }

  export type ImagenOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    carId?: SortOrder
    car?: CarOrderByWithRelationInput
  }

  export type ImagenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ImagenWhereInput | ImagenWhereInput[]
    OR?: ImagenWhereInput[]
    NOT?: ImagenWhereInput | ImagenWhereInput[]
    url?: StringFilter<"Imagen"> | string
    carId?: StringFilter<"Imagen"> | string
    car?: XOR<CarScalarRelationFilter, CarWhereInput>
  }, "id">

  export type ImagenOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    carId?: SortOrder
    _count?: ImagenCountOrderByAggregateInput
    _max?: ImagenMaxOrderByAggregateInput
    _min?: ImagenMinOrderByAggregateInput
  }

  export type ImagenScalarWhereWithAggregatesInput = {
    AND?: ImagenScalarWhereWithAggregatesInput | ImagenScalarWhereWithAggregatesInput[]
    OR?: ImagenScalarWhereWithAggregatesInput[]
    NOT?: ImagenScalarWhereWithAggregatesInput | ImagenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Imagen"> | string
    url?: StringWithAggregatesFilter<"Imagen"> | string
    carId?: StringWithAggregatesFilter<"Imagen"> | string
  }

  export type FavoritoWhereInput = {
    AND?: FavoritoWhereInput | FavoritoWhereInput[]
    OR?: FavoritoWhereInput[]
    NOT?: FavoritoWhereInput | FavoritoWhereInput[]
    id?: StringFilter<"Favorito"> | string
    renterId?: StringFilter<"Favorito"> | string
    carId?: StringFilter<"Favorito"> | string
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    car?: XOR<CarScalarRelationFilter, CarWhereInput>
  }

  export type FavoritoOrderByWithRelationInput = {
    id?: SortOrder
    renterId?: SortOrder
    carId?: SortOrder
    renter?: RenterOrderByWithRelationInput
    car?: CarOrderByWithRelationInput
  }

  export type FavoritoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    renterId_carId?: FavoritoRenterIdCarIdCompoundUniqueInput
    AND?: FavoritoWhereInput | FavoritoWhereInput[]
    OR?: FavoritoWhereInput[]
    NOT?: FavoritoWhereInput | FavoritoWhereInput[]
    renterId?: StringFilter<"Favorito"> | string
    carId?: StringFilter<"Favorito"> | string
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    car?: XOR<CarScalarRelationFilter, CarWhereInput>
  }, "id" | "renterId_carId">

  export type FavoritoOrderByWithAggregationInput = {
    id?: SortOrder
    renterId?: SortOrder
    carId?: SortOrder
    _count?: FavoritoCountOrderByAggregateInput
    _max?: FavoritoMaxOrderByAggregateInput
    _min?: FavoritoMinOrderByAggregateInput
  }

  export type FavoritoScalarWhereWithAggregatesInput = {
    AND?: FavoritoScalarWhereWithAggregatesInput | FavoritoScalarWhereWithAggregatesInput[]
    OR?: FavoritoScalarWhereWithAggregatesInput[]
    NOT?: FavoritoScalarWhereWithAggregatesInput | FavoritoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Favorito"> | string
    renterId?: StringWithAggregatesFilter<"Favorito"> | string
    carId?: StringWithAggregatesFilter<"Favorito"> | string
  }

  export type DescuentoWhereInput = {
    AND?: DescuentoWhereInput | DescuentoWhereInput[]
    OR?: DescuentoWhereInput[]
    NOT?: DescuentoWhereInput | DescuentoWhereInput[]
    id?: StringFilter<"Descuento"> | string
    fecha?: DateTimeFilter<"Descuento"> | Date | string
    porcentaje?: FloatFilter<"Descuento"> | number
    reservas?: ReservationListRelationFilter
  }

  export type DescuentoOrderByWithRelationInput = {
    id?: SortOrder
    fecha?: SortOrder
    porcentaje?: SortOrder
    reservas?: ReservationOrderByRelationAggregateInput
  }

  export type DescuentoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DescuentoWhereInput | DescuentoWhereInput[]
    OR?: DescuentoWhereInput[]
    NOT?: DescuentoWhereInput | DescuentoWhereInput[]
    fecha?: DateTimeFilter<"Descuento"> | Date | string
    porcentaje?: FloatFilter<"Descuento"> | number
    reservas?: ReservationListRelationFilter
  }, "id">

  export type DescuentoOrderByWithAggregationInput = {
    id?: SortOrder
    fecha?: SortOrder
    porcentaje?: SortOrder
    _count?: DescuentoCountOrderByAggregateInput
    _avg?: DescuentoAvgOrderByAggregateInput
    _max?: DescuentoMaxOrderByAggregateInput
    _min?: DescuentoMinOrderByAggregateInput
    _sum?: DescuentoSumOrderByAggregateInput
  }

  export type DescuentoScalarWhereWithAggregatesInput = {
    AND?: DescuentoScalarWhereWithAggregatesInput | DescuentoScalarWhereWithAggregatesInput[]
    OR?: DescuentoScalarWhereWithAggregatesInput[]
    NOT?: DescuentoScalarWhereWithAggregatesInput | DescuentoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Descuento"> | string
    fecha?: DateTimeWithAggregatesFilter<"Descuento"> | Date | string
    porcentaje?: FloatWithAggregatesFilter<"Descuento"> | number
  }

  export type CalificacionHostUsuarioWhereInput = {
    AND?: CalificacionHostUsuarioWhereInput | CalificacionHostUsuarioWhereInput[]
    OR?: CalificacionHostUsuarioWhereInput[]
    NOT?: CalificacionHostUsuarioWhereInput | CalificacionHostUsuarioWhereInput[]
    id?: StringFilter<"CalificacionHostUsuario"> | string
    comportamiento?: IntFilter<"CalificacionHostUsuario"> | number
    cuidadoVehiculo?: IntFilter<"CalificacionHostUsuario"> | number
    puntualidad?: IntFilter<"CalificacionHostUsuario"> | number
    comentario?: StringNullableFilter<"CalificacionHostUsuario"> | string | null
    reservationId?: StringFilter<"CalificacionHostUsuario"> | string
    calificadorId?: StringFilter<"CalificacionHostUsuario"> | string
    calificadoId?: StringFilter<"CalificacionHostUsuario"> | string
    fechaCreacion?: DateTimeFilter<"CalificacionHostUsuario"> | Date | string
    reservation?: XOR<ReservationScalarRelationFilter, ReservationWhereInput>
    calificador?: XOR<UserScalarRelationFilter, UserWhereInput>
    calificado?: XOR<RenterScalarRelationFilter, RenterWhereInput>
  }

  export type CalificacionHostUsuarioOrderByWithRelationInput = {
    id?: SortOrder
    comportamiento?: SortOrder
    cuidadoVehiculo?: SortOrder
    puntualidad?: SortOrder
    comentario?: SortOrderInput | SortOrder
    reservationId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    fechaCreacion?: SortOrder
    reservation?: ReservationOrderByWithRelationInput
    calificador?: UserOrderByWithRelationInput
    calificado?: RenterOrderByWithRelationInput
  }

  export type CalificacionHostUsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CalificacionHostUsuarioWhereInput | CalificacionHostUsuarioWhereInput[]
    OR?: CalificacionHostUsuarioWhereInput[]
    NOT?: CalificacionHostUsuarioWhereInput | CalificacionHostUsuarioWhereInput[]
    comportamiento?: IntFilter<"CalificacionHostUsuario"> | number
    cuidadoVehiculo?: IntFilter<"CalificacionHostUsuario"> | number
    puntualidad?: IntFilter<"CalificacionHostUsuario"> | number
    comentario?: StringNullableFilter<"CalificacionHostUsuario"> | string | null
    reservationId?: StringFilter<"CalificacionHostUsuario"> | string
    calificadorId?: StringFilter<"CalificacionHostUsuario"> | string
    calificadoId?: StringFilter<"CalificacionHostUsuario"> | string
    fechaCreacion?: DateTimeFilter<"CalificacionHostUsuario"> | Date | string
    reservation?: XOR<ReservationScalarRelationFilter, ReservationWhereInput>
    calificador?: XOR<UserScalarRelationFilter, UserWhereInput>
    calificado?: XOR<RenterScalarRelationFilter, RenterWhereInput>
  }, "id">

  export type CalificacionHostUsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    comportamiento?: SortOrder
    cuidadoVehiculo?: SortOrder
    puntualidad?: SortOrder
    comentario?: SortOrderInput | SortOrder
    reservationId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    fechaCreacion?: SortOrder
    _count?: CalificacionHostUsuarioCountOrderByAggregateInput
    _avg?: CalificacionHostUsuarioAvgOrderByAggregateInput
    _max?: CalificacionHostUsuarioMaxOrderByAggregateInput
    _min?: CalificacionHostUsuarioMinOrderByAggregateInput
    _sum?: CalificacionHostUsuarioSumOrderByAggregateInput
  }

  export type CalificacionHostUsuarioScalarWhereWithAggregatesInput = {
    AND?: CalificacionHostUsuarioScalarWhereWithAggregatesInput | CalificacionHostUsuarioScalarWhereWithAggregatesInput[]
    OR?: CalificacionHostUsuarioScalarWhereWithAggregatesInput[]
    NOT?: CalificacionHostUsuarioScalarWhereWithAggregatesInput | CalificacionHostUsuarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CalificacionHostUsuario"> | string
    comportamiento?: IntWithAggregatesFilter<"CalificacionHostUsuario"> | number
    cuidadoVehiculo?: IntWithAggregatesFilter<"CalificacionHostUsuario"> | number
    puntualidad?: IntWithAggregatesFilter<"CalificacionHostUsuario"> | number
    comentario?: StringNullableWithAggregatesFilter<"CalificacionHostUsuario"> | string | null
    reservationId?: StringWithAggregatesFilter<"CalificacionHostUsuario"> | string
    calificadorId?: StringWithAggregatesFilter<"CalificacionHostUsuario"> | string
    calificadoId?: StringWithAggregatesFilter<"CalificacionHostUsuario"> | string
    fechaCreacion?: DateTimeWithAggregatesFilter<"CalificacionHostUsuario"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewCreateNestedManyWithoutHostInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    reservations?: ReservationCreateNestedManyWithoutHostInput
    cars?: CarCreateNestedManyWithoutUserInput
    calificacionesHechas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadorInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewUncheckedCreateNestedManyWithoutHostInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutHostInput
    cars?: CarUncheckedCreateNestedManyWithoutUserInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadorInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUpdateManyWithoutHostNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    reservations?: ReservationUpdateManyWithoutHostNestedInput
    cars?: CarUpdateManyWithoutUserNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUpdateManyWithoutCalificadorNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUncheckedUpdateManyWithoutHostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutHostNestedInput
    cars?: CarUncheckedUpdateManyWithoutUserNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadorNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  }

  export type RenterCreateInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewCreateNestedManyWithoutRenterInput
    reports?: ReportCreateNestedManyWithoutRenterInput
    reservations?: ReservationCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadoInput
  }

  export type RenterUncheckedCreateInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutRenterInput
    reports?: ReportUncheckedCreateNestedManyWithoutRenterInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadoInput
  }

  export type RenterUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUpdateManyWithoutRenterNestedInput
    reports?: ReportUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUpdateManyWithoutCalificadoNestedInput
  }

  export type RenterUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutRenterNestedInput
    reports?: ReportUncheckedUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadoNestedInput
  }

  export type RenterCreateManyInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RenterUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RenterUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CarCreateInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCarsInput
    combustibles?: CombustibleCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalCreateNestedManyWithoutCarInput
    imagenes?: ImagenCreateNestedManyWithoutCarInput
    favoritos?: FavoritoCreateNestedManyWithoutCarInput
    reservations?: ReservationCreateNestedManyWithoutCarInput
    reviews?: ReviewCreateNestedManyWithoutCarInput
  }

  export type CarUncheckedCreateInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    combustibles?: CombustibleUncheckedCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalUncheckedCreateNestedManyWithoutCarInput
    imagenes?: ImagenUncheckedCreateNestedManyWithoutCarInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutCarInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCarInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCarInput
  }

  export type CarUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCarsNestedInput
    combustibles?: CombustibleUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUpdateManyWithoutCarNestedInput
    reservations?: ReservationUpdateManyWithoutCarNestedInput
    reviews?: ReviewUpdateManyWithoutCarNestedInput
  }

  export type CarUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    combustibles?: CombustibleUncheckedUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUncheckedUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUncheckedUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutCarNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCarNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCarNestedInput
  }

  export type CarCreateManyInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CarUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CarUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationCreateInput = {
    id?: string
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReservationsInput
    host: UserCreateNestedOneWithoutReservationsInput
    car?: CarCreateNestedOneWithoutReservationsInput
    descuento?: DescuentoCreateNestedOneWithoutReservasInput
    reviews?: ReviewCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioCreateNestedManyWithoutReservationInput
  }

  export type ReservationUncheckedCreateInput = {
    id?: string
    renterId: string
    hostId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutReservationInput
  }

  export type ReservationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReservationsNestedInput
    host?: UserUpdateOneRequiredWithoutReservationsNestedInput
    car?: CarUpdateOneWithoutReservationsNestedInput
    descuento?: DescuentoUpdateOneWithoutReservasNestedInput
    reviews?: ReviewUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type ReservationCreateManyInput = {
    id?: string
    renterId: string
    hostId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReservationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateInput = {
    id?: string
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReviewsInput
    host: UserCreateNestedOneWithoutReviewsInput
    reservation: ReservationCreateNestedOneWithoutReviewsInput
    car?: CarCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: string
    renterId: string
    hostId: string
    reservationId: string
    carId?: string | null
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReviewsNestedInput
    host?: UserUpdateOneRequiredWithoutReviewsNestedInput
    reservation?: ReservationUpdateOneRequiredWithoutReviewsNestedInput
    car?: CarUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    reservationId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateManyInput = {
    id?: string
    renterId: string
    hostId: string
    reservationId: string
    carId?: string | null
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    reservationId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportCreateInput = {
    id?: string
    reason: string
    additionalInfo?: string | null
    status?: $Enums.EstadoReporte
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReportsInput
    reporter: UserCreateNestedOneWithoutReportsInput
  }

  export type ReportUncheckedCreateInput = {
    id?: string
    renterId: string
    reporterId: string
    reason: string
    additionalInfo?: string | null
    status?: $Enums.EstadoReporte
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReportUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReportsNestedInput
    reporter?: UserUpdateOneRequiredWithoutReportsNestedInput
  }

  export type ReportUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportCreateManyInput = {
    id?: string
    renterId: string
    reporterId: string
    reason: string
    additionalInfo?: string | null
    status?: $Enums.EstadoReporte
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReportUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CombustibleCreateInput = {
    id?: string
    tipoDeCombustible: string
    car: CarCreateNestedOneWithoutCombustiblesInput
  }

  export type CombustibleUncheckedCreateInput = {
    id?: string
    tipoDeCombustible: string
    carId: string
  }

  export type CombustibleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeCombustible?: StringFieldUpdateOperationsInput | string
    car?: CarUpdateOneRequiredWithoutCombustiblesNestedInput
  }

  export type CombustibleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeCombustible?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type CombustibleCreateManyInput = {
    id?: string
    tipoDeCombustible: string
    carId: string
  }

  export type CombustibleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeCombustible?: StringFieldUpdateOperationsInput | string
  }

  export type CombustibleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeCombustible?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type CaracteristicaAdicionalCreateInput = {
    id?: string
    nombre: string
    car: CarCreateNestedOneWithoutCaracteristicasInput
  }

  export type CaracteristicaAdicionalUncheckedCreateInput = {
    id?: string
    nombre: string
    carId: string
  }

  export type CaracteristicaAdicionalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    car?: CarUpdateOneRequiredWithoutCaracteristicasNestedInput
  }

  export type CaracteristicaAdicionalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type CaracteristicaAdicionalCreateManyInput = {
    id?: string
    nombre: string
    carId: string
  }

  export type CaracteristicaAdicionalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CaracteristicaAdicionalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type ImagenCreateInput = {
    id?: string
    url: string
    car: CarCreateNestedOneWithoutImagenesInput
  }

  export type ImagenUncheckedCreateInput = {
    id?: string
    url: string
    carId: string
  }

  export type ImagenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    car?: CarUpdateOneRequiredWithoutImagenesNestedInput
  }

  export type ImagenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type ImagenCreateManyInput = {
    id?: string
    url: string
    carId: string
  }

  export type ImagenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type ImagenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoCreateInput = {
    id?: string
    renter: RenterCreateNestedOneWithoutFavoritosInput
    car: CarCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritoUncheckedCreateInput = {
    id?: string
    renterId: string
    carId: string
  }

  export type FavoritoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    renter?: RenterUpdateOneRequiredWithoutFavoritosNestedInput
    car?: CarUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoCreateManyInput = {
    id?: string
    renterId: string
    carId: string
  }

  export type FavoritoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type DescuentoCreateInput = {
    id?: string
    fecha: Date | string
    porcentaje: number
    reservas?: ReservationCreateNestedManyWithoutDescuentoInput
  }

  export type DescuentoUncheckedCreateInput = {
    id?: string
    fecha: Date | string
    porcentaje: number
    reservas?: ReservationUncheckedCreateNestedManyWithoutDescuentoInput
  }

  export type DescuentoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje?: FloatFieldUpdateOperationsInput | number
    reservas?: ReservationUpdateManyWithoutDescuentoNestedInput
  }

  export type DescuentoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje?: FloatFieldUpdateOperationsInput | number
    reservas?: ReservationUncheckedUpdateManyWithoutDescuentoNestedInput
  }

  export type DescuentoCreateManyInput = {
    id?: string
    fecha: Date | string
    porcentaje: number
  }

  export type DescuentoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje?: FloatFieldUpdateOperationsInput | number
  }

  export type DescuentoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje?: FloatFieldUpdateOperationsInput | number
  }

  export type CalificacionHostUsuarioCreateInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    fechaCreacion?: Date | string
    reservation: ReservationCreateNestedOneWithoutCalificacionesInput
    calificador: UserCreateNestedOneWithoutCalificacionesHechasInput
    calificado: RenterCreateNestedOneWithoutCalificacionesRecibidasInput
  }

  export type CalificacionHostUsuarioUncheckedCreateInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    reservationId: string
    calificadorId: string
    calificadoId: string
    fechaCreacion?: Date | string
  }

  export type CalificacionHostUsuarioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reservation?: ReservationUpdateOneRequiredWithoutCalificacionesNestedInput
    calificador?: UserUpdateOneRequiredWithoutCalificacionesHechasNestedInput
    calificado?: RenterUpdateOneRequiredWithoutCalificacionesRecibidasNestedInput
  }

  export type CalificacionHostUsuarioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    reservationId?: StringFieldUpdateOperationsInput | string
    calificadorId?: StringFieldUpdateOperationsInput | string
    calificadoId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionHostUsuarioCreateManyInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    reservationId: string
    calificadorId: string
    calificadoId: string
    fechaCreacion?: Date | string
  }

  export type CalificacionHostUsuarioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionHostUsuarioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    reservationId?: StringFieldUpdateOperationsInput | string
    calificadorId?: StringFieldUpdateOperationsInput | string
    calificadoId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumGeneroNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel> | null
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGeneroNullableFilter<$PrismaModel> | $Enums.Genero | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type ReviewListRelationFilter = {
    every?: ReviewWhereInput
    some?: ReviewWhereInput
    none?: ReviewWhereInput
  }

  export type ReportListRelationFilter = {
    every?: ReportWhereInput
    some?: ReportWhereInput
    none?: ReportWhereInput
  }

  export type ReservationListRelationFilter = {
    every?: ReservationWhereInput
    some?: ReservationWhereInput
    none?: ReservationWhereInput
  }

  export type CarListRelationFilter = {
    every?: CarWhereInput
    some?: CarWhereInput
    none?: CarWhereInput
  }

  export type CalificacionHostUsuarioListRelationFilter = {
    every?: CalificacionHostUsuarioWhereInput
    some?: CalificacionHostUsuarioWhereInput
    none?: CalificacionHostUsuarioWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReportOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CarOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CalificacionHostUsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    googleId?: SortOrder
    image?: SortOrder
    telefono?: SortOrder
    genero?: SortOrder
    fechaNacimiento?: SortOrder
    direccion?: SortOrder
    ciudad?: SortOrder
    provincia?: SortOrder
    pais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    googleId?: SortOrder
    image?: SortOrder
    telefono?: SortOrder
    genero?: SortOrder
    fechaNacimiento?: SortOrder
    direccion?: SortOrder
    ciudad?: SortOrder
    provincia?: SortOrder
    pais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    googleId?: SortOrder
    image?: SortOrder
    telefono?: SortOrder
    genero?: SortOrder
    fechaNacimiento?: SortOrder
    direccion?: SortOrder
    ciudad?: SortOrder
    provincia?: SortOrder
    pais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumGeneroNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel> | null
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGeneroNullableWithAggregatesFilter<$PrismaModel> | $Enums.Genero | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGeneroNullableFilter<$PrismaModel>
    _max?: NestedEnumGeneroNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type FavoritoListRelationFilter = {
    every?: FavoritoWhereInput
    some?: FavoritoWhereInput
    none?: FavoritoWhereInput
  }

  export type FavoritoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RenterCountOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    occupation?: SortOrder
    address?: SortOrder
    age?: SortOrder
    profilePicture?: SortOrder
    rating?: SortOrder
    memberSince?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RenterAvgOrderByAggregateInput = {
    age?: SortOrder
    rating?: SortOrder
  }

  export type RenterMaxOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    occupation?: SortOrder
    address?: SortOrder
    age?: SortOrder
    profilePicture?: SortOrder
    rating?: SortOrder
    memberSince?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RenterMinOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    occupation?: SortOrder
    address?: SortOrder
    age?: SortOrder
    profilePicture?: SortOrder
    rating?: SortOrder
    memberSince?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RenterSumOrderByAggregateInput = {
    age?: SortOrder
    rating?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type EnumCarStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CarStatus | EnumCarStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CarStatus[] | ListEnumCarStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CarStatus[] | ListEnumCarStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCarStatusFilter<$PrismaModel> | $Enums.CarStatus
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type CombustibleListRelationFilter = {
    every?: CombustibleWhereInput
    some?: CombustibleWhereInput
    none?: CombustibleWhereInput
  }

  export type CaracteristicaAdicionalListRelationFilter = {
    every?: CaracteristicaAdicionalWhereInput
    some?: CaracteristicaAdicionalWhereInput
    none?: CaracteristicaAdicionalWhereInput
  }

  export type ImagenListRelationFilter = {
    every?: ImagenWhereInput
    some?: ImagenWhereInput
    none?: ImagenWhereInput
  }

  export type CombustibleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CaracteristicaAdicionalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ImagenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CarCountOrderByAggregateInput = {
    id?: SortOrder
    vin?: SortOrder
    año?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    placa?: SortOrder
    asientos?: SortOrder
    puertas?: SortOrder
    soat?: SortOrder
    precioPorDia?: SortOrder
    numMantenimientos?: SortOrder
    transmision?: SortOrder
    estado?: SortOrder
    direccion?: SortOrder
    ciudad?: SortOrder
    provincia?: SortOrder
    pais?: SortOrder
    color?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CarAvgOrderByAggregateInput = {
    año?: SortOrder
    asientos?: SortOrder
    puertas?: SortOrder
    precioPorDia?: SortOrder
    numMantenimientos?: SortOrder
  }

  export type CarMaxOrderByAggregateInput = {
    id?: SortOrder
    vin?: SortOrder
    año?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    placa?: SortOrder
    asientos?: SortOrder
    puertas?: SortOrder
    soat?: SortOrder
    precioPorDia?: SortOrder
    numMantenimientos?: SortOrder
    transmision?: SortOrder
    estado?: SortOrder
    direccion?: SortOrder
    ciudad?: SortOrder
    provincia?: SortOrder
    pais?: SortOrder
    color?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CarMinOrderByAggregateInput = {
    id?: SortOrder
    vin?: SortOrder
    año?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    placa?: SortOrder
    asientos?: SortOrder
    puertas?: SortOrder
    soat?: SortOrder
    precioPorDia?: SortOrder
    numMantenimientos?: SortOrder
    transmision?: SortOrder
    estado?: SortOrder
    direccion?: SortOrder
    ciudad?: SortOrder
    provincia?: SortOrder
    pais?: SortOrder
    color?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CarSumOrderByAggregateInput = {
    año?: SortOrder
    asientos?: SortOrder
    puertas?: SortOrder
    precioPorDia?: SortOrder
    numMantenimientos?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type EnumCarStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CarStatus | EnumCarStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CarStatus[] | ListEnumCarStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CarStatus[] | ListEnumCarStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCarStatusWithAggregatesFilter<$PrismaModel> | $Enums.CarStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCarStatusFilter<$PrismaModel>
    _max?: NestedEnumCarStatusFilter<$PrismaModel>
  }

  export type EnumEstadoReservacionFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReservacion | EnumEstadoReservacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReservacion[] | ListEnumEstadoReservacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReservacion[] | ListEnumEstadoReservacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReservacionFilter<$PrismaModel> | $Enums.EstadoReservacion
  }

  export type RenterScalarRelationFilter = {
    is?: RenterWhereInput
    isNot?: RenterWhereInput
  }

  export type CarNullableScalarRelationFilter = {
    is?: CarWhereInput | null
    isNot?: CarWhereInput | null
  }

  export type DescuentoNullableScalarRelationFilter = {
    is?: DescuentoWhereInput | null
    isNot?: DescuentoWhereInput | null
  }

  export type ReservationCountOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    carId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    fechaCreacion?: SortOrder
    fechaExpiracion?: SortOrder
    estado?: SortOrder
    descuentoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReservationMaxOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    carId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    fechaCreacion?: SortOrder
    fechaExpiracion?: SortOrder
    estado?: SortOrder
    descuentoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReservationMinOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    carId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    fechaCreacion?: SortOrder
    fechaExpiracion?: SortOrder
    estado?: SortOrder
    descuentoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumEstadoReservacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReservacion | EnumEstadoReservacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReservacion[] | ListEnumEstadoReservacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReservacion[] | ListEnumEstadoReservacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReservacionWithAggregatesFilter<$PrismaModel> | $Enums.EstadoReservacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoReservacionFilter<$PrismaModel>
    _max?: NestedEnumEstadoReservacionFilter<$PrismaModel>
  }

  export type ReservationScalarRelationFilter = {
    is?: ReservationWhereInput
    isNot?: ReservationWhereInput
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    reservationId?: SortOrder
    carId?: SortOrder
    rating?: SortOrder
    behaviorRating?: SortOrder
    carCareRating?: SortOrder
    punctualityRating?: SortOrder
    comment?: SortOrder
    hostName?: SortOrder
    hostPicture?: SortOrder
    renterName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
    behaviorRating?: SortOrder
    carCareRating?: SortOrder
    punctualityRating?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    reservationId?: SortOrder
    carId?: SortOrder
    rating?: SortOrder
    behaviorRating?: SortOrder
    carCareRating?: SortOrder
    punctualityRating?: SortOrder
    comment?: SortOrder
    hostName?: SortOrder
    hostPicture?: SortOrder
    renterName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    hostId?: SortOrder
    reservationId?: SortOrder
    carId?: SortOrder
    rating?: SortOrder
    behaviorRating?: SortOrder
    carCareRating?: SortOrder
    punctualityRating?: SortOrder
    comment?: SortOrder
    hostName?: SortOrder
    hostPicture?: SortOrder
    renterName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    rating?: SortOrder
    behaviorRating?: SortOrder
    carCareRating?: SortOrder
    punctualityRating?: SortOrder
  }

  export type EnumEstadoReporteFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReporte | EnumEstadoReporteFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReporte[] | ListEnumEstadoReporteFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReporte[] | ListEnumEstadoReporteFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReporteFilter<$PrismaModel> | $Enums.EstadoReporte
  }

  export type ReportCountOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    reporterId?: SortOrder
    reason?: SortOrder
    additionalInfo?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReportMaxOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    reporterId?: SortOrder
    reason?: SortOrder
    additionalInfo?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReportMinOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    reporterId?: SortOrder
    reason?: SortOrder
    additionalInfo?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumEstadoReporteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReporte | EnumEstadoReporteFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReporte[] | ListEnumEstadoReporteFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReporte[] | ListEnumEstadoReporteFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReporteWithAggregatesFilter<$PrismaModel> | $Enums.EstadoReporte
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoReporteFilter<$PrismaModel>
    _max?: NestedEnumEstadoReporteFilter<$PrismaModel>
  }

  export type CarScalarRelationFilter = {
    is?: CarWhereInput
    isNot?: CarWhereInput
  }

  export type CombustibleCountOrderByAggregateInput = {
    id?: SortOrder
    tipoDeCombustible?: SortOrder
    carId?: SortOrder
  }

  export type CombustibleMaxOrderByAggregateInput = {
    id?: SortOrder
    tipoDeCombustible?: SortOrder
    carId?: SortOrder
  }

  export type CombustibleMinOrderByAggregateInput = {
    id?: SortOrder
    tipoDeCombustible?: SortOrder
    carId?: SortOrder
  }

  export type CaracteristicaAdicionalCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    carId?: SortOrder
  }

  export type CaracteristicaAdicionalMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    carId?: SortOrder
  }

  export type CaracteristicaAdicionalMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    carId?: SortOrder
  }

  export type ImagenCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    carId?: SortOrder
  }

  export type ImagenMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    carId?: SortOrder
  }

  export type ImagenMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    carId?: SortOrder
  }

  export type FavoritoRenterIdCarIdCompoundUniqueInput = {
    renterId: string
    carId: string
  }

  export type FavoritoCountOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    carId?: SortOrder
  }

  export type FavoritoMaxOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    carId?: SortOrder
  }

  export type FavoritoMinOrderByAggregateInput = {
    id?: SortOrder
    renterId?: SortOrder
    carId?: SortOrder
  }

  export type DescuentoCountOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    porcentaje?: SortOrder
  }

  export type DescuentoAvgOrderByAggregateInput = {
    porcentaje?: SortOrder
  }

  export type DescuentoMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    porcentaje?: SortOrder
  }

  export type DescuentoMinOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    porcentaje?: SortOrder
  }

  export type DescuentoSumOrderByAggregateInput = {
    porcentaje?: SortOrder
  }

  export type CalificacionHostUsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    comportamiento?: SortOrder
    cuidadoVehiculo?: SortOrder
    puntualidad?: SortOrder
    comentario?: SortOrder
    reservationId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type CalificacionHostUsuarioAvgOrderByAggregateInput = {
    comportamiento?: SortOrder
    cuidadoVehiculo?: SortOrder
    puntualidad?: SortOrder
  }

  export type CalificacionHostUsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    comportamiento?: SortOrder
    cuidadoVehiculo?: SortOrder
    puntualidad?: SortOrder
    comentario?: SortOrder
    reservationId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type CalificacionHostUsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    comportamiento?: SortOrder
    cuidadoVehiculo?: SortOrder
    puntualidad?: SortOrder
    comentario?: SortOrder
    reservationId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type CalificacionHostUsuarioSumOrderByAggregateInput = {
    comportamiento?: SortOrder
    cuidadoVehiculo?: SortOrder
    puntualidad?: SortOrder
  }

  export type ReviewCreateNestedManyWithoutHostInput = {
    create?: XOR<ReviewCreateWithoutHostInput, ReviewUncheckedCreateWithoutHostInput> | ReviewCreateWithoutHostInput[] | ReviewUncheckedCreateWithoutHostInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutHostInput | ReviewCreateOrConnectWithoutHostInput[]
    createMany?: ReviewCreateManyHostInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ReportCreateNestedManyWithoutReporterInput = {
    create?: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput> | ReportCreateWithoutReporterInput[] | ReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutReporterInput | ReportCreateOrConnectWithoutReporterInput[]
    createMany?: ReportCreateManyReporterInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutHostInput = {
    create?: XOR<ReservationCreateWithoutHostInput, ReservationUncheckedCreateWithoutHostInput> | ReservationCreateWithoutHostInput[] | ReservationUncheckedCreateWithoutHostInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutHostInput | ReservationCreateOrConnectWithoutHostInput[]
    createMany?: ReservationCreateManyHostInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type CarCreateNestedManyWithoutUserInput = {
    create?: XOR<CarCreateWithoutUserInput, CarUncheckedCreateWithoutUserInput> | CarCreateWithoutUserInput[] | CarUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CarCreateOrConnectWithoutUserInput | CarCreateOrConnectWithoutUserInput[]
    createMany?: CarCreateManyUserInputEnvelope
    connect?: CarWhereUniqueInput | CarWhereUniqueInput[]
  }

  export type CalificacionHostUsuarioCreateNestedManyWithoutCalificadorInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutCalificadorInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput> | CalificacionHostUsuarioCreateWithoutCalificadorInput[] | CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutCalificadorInput | CalificacionHostUsuarioCreateOrConnectWithoutCalificadorInput[]
    createMany?: CalificacionHostUsuarioCreateManyCalificadorInputEnvelope
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutHostInput = {
    create?: XOR<ReviewCreateWithoutHostInput, ReviewUncheckedCreateWithoutHostInput> | ReviewCreateWithoutHostInput[] | ReviewUncheckedCreateWithoutHostInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutHostInput | ReviewCreateOrConnectWithoutHostInput[]
    createMany?: ReviewCreateManyHostInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ReportUncheckedCreateNestedManyWithoutReporterInput = {
    create?: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput> | ReportCreateWithoutReporterInput[] | ReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutReporterInput | ReportCreateOrConnectWithoutReporterInput[]
    createMany?: ReportCreateManyReporterInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutHostInput = {
    create?: XOR<ReservationCreateWithoutHostInput, ReservationUncheckedCreateWithoutHostInput> | ReservationCreateWithoutHostInput[] | ReservationUncheckedCreateWithoutHostInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutHostInput | ReservationCreateOrConnectWithoutHostInput[]
    createMany?: ReservationCreateManyHostInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type CarUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CarCreateWithoutUserInput, CarUncheckedCreateWithoutUserInput> | CarCreateWithoutUserInput[] | CarUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CarCreateOrConnectWithoutUserInput | CarCreateOrConnectWithoutUserInput[]
    createMany?: CarCreateManyUserInputEnvelope
    connect?: CarWhereUniqueInput | CarWhereUniqueInput[]
  }

  export type CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadorInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutCalificadorInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput> | CalificacionHostUsuarioCreateWithoutCalificadorInput[] | CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutCalificadorInput | CalificacionHostUsuarioCreateOrConnectWithoutCalificadorInput[]
    createMany?: CalificacionHostUsuarioCreateManyCalificadorInputEnvelope
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableEnumGeneroFieldUpdateOperationsInput = {
    set?: $Enums.Genero | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type ReviewUpdateManyWithoutHostNestedInput = {
    create?: XOR<ReviewCreateWithoutHostInput, ReviewUncheckedCreateWithoutHostInput> | ReviewCreateWithoutHostInput[] | ReviewUncheckedCreateWithoutHostInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutHostInput | ReviewCreateOrConnectWithoutHostInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutHostInput | ReviewUpsertWithWhereUniqueWithoutHostInput[]
    createMany?: ReviewCreateManyHostInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutHostInput | ReviewUpdateWithWhereUniqueWithoutHostInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutHostInput | ReviewUpdateManyWithWhereWithoutHostInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ReportUpdateManyWithoutReporterNestedInput = {
    create?: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput> | ReportCreateWithoutReporterInput[] | ReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutReporterInput | ReportCreateOrConnectWithoutReporterInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutReporterInput | ReportUpsertWithWhereUniqueWithoutReporterInput[]
    createMany?: ReportCreateManyReporterInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutReporterInput | ReportUpdateWithWhereUniqueWithoutReporterInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutReporterInput | ReportUpdateManyWithWhereWithoutReporterInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutHostNestedInput = {
    create?: XOR<ReservationCreateWithoutHostInput, ReservationUncheckedCreateWithoutHostInput> | ReservationCreateWithoutHostInput[] | ReservationUncheckedCreateWithoutHostInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutHostInput | ReservationCreateOrConnectWithoutHostInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutHostInput | ReservationUpsertWithWhereUniqueWithoutHostInput[]
    createMany?: ReservationCreateManyHostInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutHostInput | ReservationUpdateWithWhereUniqueWithoutHostInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutHostInput | ReservationUpdateManyWithWhereWithoutHostInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type CarUpdateManyWithoutUserNestedInput = {
    create?: XOR<CarCreateWithoutUserInput, CarUncheckedCreateWithoutUserInput> | CarCreateWithoutUserInput[] | CarUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CarCreateOrConnectWithoutUserInput | CarCreateOrConnectWithoutUserInput[]
    upsert?: CarUpsertWithWhereUniqueWithoutUserInput | CarUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CarCreateManyUserInputEnvelope
    set?: CarWhereUniqueInput | CarWhereUniqueInput[]
    disconnect?: CarWhereUniqueInput | CarWhereUniqueInput[]
    delete?: CarWhereUniqueInput | CarWhereUniqueInput[]
    connect?: CarWhereUniqueInput | CarWhereUniqueInput[]
    update?: CarUpdateWithWhereUniqueWithoutUserInput | CarUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CarUpdateManyWithWhereWithoutUserInput | CarUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CarScalarWhereInput | CarScalarWhereInput[]
  }

  export type CalificacionHostUsuarioUpdateManyWithoutCalificadorNestedInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutCalificadorInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput> | CalificacionHostUsuarioCreateWithoutCalificadorInput[] | CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutCalificadorInput | CalificacionHostUsuarioCreateOrConnectWithoutCalificadorInput[]
    upsert?: CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadorInput | CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadorInput[]
    createMany?: CalificacionHostUsuarioCreateManyCalificadorInputEnvelope
    set?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    disconnect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    delete?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    update?: CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadorInput | CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadorInput[]
    updateMany?: CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadorInput | CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadorInput[]
    deleteMany?: CalificacionHostUsuarioScalarWhereInput | CalificacionHostUsuarioScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutHostNestedInput = {
    create?: XOR<ReviewCreateWithoutHostInput, ReviewUncheckedCreateWithoutHostInput> | ReviewCreateWithoutHostInput[] | ReviewUncheckedCreateWithoutHostInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutHostInput | ReviewCreateOrConnectWithoutHostInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutHostInput | ReviewUpsertWithWhereUniqueWithoutHostInput[]
    createMany?: ReviewCreateManyHostInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutHostInput | ReviewUpdateWithWhereUniqueWithoutHostInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutHostInput | ReviewUpdateManyWithWhereWithoutHostInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ReportUncheckedUpdateManyWithoutReporterNestedInput = {
    create?: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput> | ReportCreateWithoutReporterInput[] | ReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutReporterInput | ReportCreateOrConnectWithoutReporterInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutReporterInput | ReportUpsertWithWhereUniqueWithoutReporterInput[]
    createMany?: ReportCreateManyReporterInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutReporterInput | ReportUpdateWithWhereUniqueWithoutReporterInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutReporterInput | ReportUpdateManyWithWhereWithoutReporterInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutHostNestedInput = {
    create?: XOR<ReservationCreateWithoutHostInput, ReservationUncheckedCreateWithoutHostInput> | ReservationCreateWithoutHostInput[] | ReservationUncheckedCreateWithoutHostInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutHostInput | ReservationCreateOrConnectWithoutHostInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutHostInput | ReservationUpsertWithWhereUniqueWithoutHostInput[]
    createMany?: ReservationCreateManyHostInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutHostInput | ReservationUpdateWithWhereUniqueWithoutHostInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutHostInput | ReservationUpdateManyWithWhereWithoutHostInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type CarUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CarCreateWithoutUserInput, CarUncheckedCreateWithoutUserInput> | CarCreateWithoutUserInput[] | CarUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CarCreateOrConnectWithoutUserInput | CarCreateOrConnectWithoutUserInput[]
    upsert?: CarUpsertWithWhereUniqueWithoutUserInput | CarUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CarCreateManyUserInputEnvelope
    set?: CarWhereUniqueInput | CarWhereUniqueInput[]
    disconnect?: CarWhereUniqueInput | CarWhereUniqueInput[]
    delete?: CarWhereUniqueInput | CarWhereUniqueInput[]
    connect?: CarWhereUniqueInput | CarWhereUniqueInput[]
    update?: CarUpdateWithWhereUniqueWithoutUserInput | CarUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CarUpdateManyWithWhereWithoutUserInput | CarUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CarScalarWhereInput | CarScalarWhereInput[]
  }

  export type CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadorNestedInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutCalificadorInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput> | CalificacionHostUsuarioCreateWithoutCalificadorInput[] | CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutCalificadorInput | CalificacionHostUsuarioCreateOrConnectWithoutCalificadorInput[]
    upsert?: CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadorInput | CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadorInput[]
    createMany?: CalificacionHostUsuarioCreateManyCalificadorInputEnvelope
    set?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    disconnect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    delete?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    update?: CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadorInput | CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadorInput[]
    updateMany?: CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadorInput | CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadorInput[]
    deleteMany?: CalificacionHostUsuarioScalarWhereInput | CalificacionHostUsuarioScalarWhereInput[]
  }

  export type ReviewCreateNestedManyWithoutRenterInput = {
    create?: XOR<ReviewCreateWithoutRenterInput, ReviewUncheckedCreateWithoutRenterInput> | ReviewCreateWithoutRenterInput[] | ReviewUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutRenterInput | ReviewCreateOrConnectWithoutRenterInput[]
    createMany?: ReviewCreateManyRenterInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ReportCreateNestedManyWithoutRenterInput = {
    create?: XOR<ReportCreateWithoutRenterInput, ReportUncheckedCreateWithoutRenterInput> | ReportCreateWithoutRenterInput[] | ReportUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutRenterInput | ReportCreateOrConnectWithoutRenterInput[]
    createMany?: ReportCreateManyRenterInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutRenterInput = {
    create?: XOR<ReservationCreateWithoutRenterInput, ReservationUncheckedCreateWithoutRenterInput> | ReservationCreateWithoutRenterInput[] | ReservationUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutRenterInput | ReservationCreateOrConnectWithoutRenterInput[]
    createMany?: ReservationCreateManyRenterInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type FavoritoCreateNestedManyWithoutRenterInput = {
    create?: XOR<FavoritoCreateWithoutRenterInput, FavoritoUncheckedCreateWithoutRenterInput> | FavoritoCreateWithoutRenterInput[] | FavoritoUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutRenterInput | FavoritoCreateOrConnectWithoutRenterInput[]
    createMany?: FavoritoCreateManyRenterInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type CalificacionHostUsuarioCreateNestedManyWithoutCalificadoInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutCalificadoInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput> | CalificacionHostUsuarioCreateWithoutCalificadoInput[] | CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutCalificadoInput | CalificacionHostUsuarioCreateOrConnectWithoutCalificadoInput[]
    createMany?: CalificacionHostUsuarioCreateManyCalificadoInputEnvelope
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutRenterInput = {
    create?: XOR<ReviewCreateWithoutRenterInput, ReviewUncheckedCreateWithoutRenterInput> | ReviewCreateWithoutRenterInput[] | ReviewUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutRenterInput | ReviewCreateOrConnectWithoutRenterInput[]
    createMany?: ReviewCreateManyRenterInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ReportUncheckedCreateNestedManyWithoutRenterInput = {
    create?: XOR<ReportCreateWithoutRenterInput, ReportUncheckedCreateWithoutRenterInput> | ReportCreateWithoutRenterInput[] | ReportUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutRenterInput | ReportCreateOrConnectWithoutRenterInput[]
    createMany?: ReportCreateManyRenterInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutRenterInput = {
    create?: XOR<ReservationCreateWithoutRenterInput, ReservationUncheckedCreateWithoutRenterInput> | ReservationCreateWithoutRenterInput[] | ReservationUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutRenterInput | ReservationCreateOrConnectWithoutRenterInput[]
    createMany?: ReservationCreateManyRenterInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type FavoritoUncheckedCreateNestedManyWithoutRenterInput = {
    create?: XOR<FavoritoCreateWithoutRenterInput, FavoritoUncheckedCreateWithoutRenterInput> | FavoritoCreateWithoutRenterInput[] | FavoritoUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutRenterInput | FavoritoCreateOrConnectWithoutRenterInput[]
    createMany?: FavoritoCreateManyRenterInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadoInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutCalificadoInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput> | CalificacionHostUsuarioCreateWithoutCalificadoInput[] | CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutCalificadoInput | CalificacionHostUsuarioCreateOrConnectWithoutCalificadoInput[]
    createMany?: CalificacionHostUsuarioCreateManyCalificadoInputEnvelope
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ReviewUpdateManyWithoutRenterNestedInput = {
    create?: XOR<ReviewCreateWithoutRenterInput, ReviewUncheckedCreateWithoutRenterInput> | ReviewCreateWithoutRenterInput[] | ReviewUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutRenterInput | ReviewCreateOrConnectWithoutRenterInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutRenterInput | ReviewUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: ReviewCreateManyRenterInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutRenterInput | ReviewUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutRenterInput | ReviewUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ReportUpdateManyWithoutRenterNestedInput = {
    create?: XOR<ReportCreateWithoutRenterInput, ReportUncheckedCreateWithoutRenterInput> | ReportCreateWithoutRenterInput[] | ReportUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutRenterInput | ReportCreateOrConnectWithoutRenterInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutRenterInput | ReportUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: ReportCreateManyRenterInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutRenterInput | ReportUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutRenterInput | ReportUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutRenterNestedInput = {
    create?: XOR<ReservationCreateWithoutRenterInput, ReservationUncheckedCreateWithoutRenterInput> | ReservationCreateWithoutRenterInput[] | ReservationUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutRenterInput | ReservationCreateOrConnectWithoutRenterInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutRenterInput | ReservationUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: ReservationCreateManyRenterInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutRenterInput | ReservationUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutRenterInput | ReservationUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type FavoritoUpdateManyWithoutRenterNestedInput = {
    create?: XOR<FavoritoCreateWithoutRenterInput, FavoritoUncheckedCreateWithoutRenterInput> | FavoritoCreateWithoutRenterInput[] | FavoritoUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutRenterInput | FavoritoCreateOrConnectWithoutRenterInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutRenterInput | FavoritoUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: FavoritoCreateManyRenterInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutRenterInput | FavoritoUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutRenterInput | FavoritoUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type CalificacionHostUsuarioUpdateManyWithoutCalificadoNestedInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutCalificadoInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput> | CalificacionHostUsuarioCreateWithoutCalificadoInput[] | CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutCalificadoInput | CalificacionHostUsuarioCreateOrConnectWithoutCalificadoInput[]
    upsert?: CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadoInput | CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadoInput[]
    createMany?: CalificacionHostUsuarioCreateManyCalificadoInputEnvelope
    set?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    disconnect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    delete?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    update?: CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadoInput | CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadoInput[]
    updateMany?: CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadoInput | CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadoInput[]
    deleteMany?: CalificacionHostUsuarioScalarWhereInput | CalificacionHostUsuarioScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutRenterNestedInput = {
    create?: XOR<ReviewCreateWithoutRenterInput, ReviewUncheckedCreateWithoutRenterInput> | ReviewCreateWithoutRenterInput[] | ReviewUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutRenterInput | ReviewCreateOrConnectWithoutRenterInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutRenterInput | ReviewUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: ReviewCreateManyRenterInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutRenterInput | ReviewUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutRenterInput | ReviewUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ReportUncheckedUpdateManyWithoutRenterNestedInput = {
    create?: XOR<ReportCreateWithoutRenterInput, ReportUncheckedCreateWithoutRenterInput> | ReportCreateWithoutRenterInput[] | ReportUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutRenterInput | ReportCreateOrConnectWithoutRenterInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutRenterInput | ReportUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: ReportCreateManyRenterInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutRenterInput | ReportUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutRenterInput | ReportUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutRenterNestedInput = {
    create?: XOR<ReservationCreateWithoutRenterInput, ReservationUncheckedCreateWithoutRenterInput> | ReservationCreateWithoutRenterInput[] | ReservationUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutRenterInput | ReservationCreateOrConnectWithoutRenterInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutRenterInput | ReservationUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: ReservationCreateManyRenterInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutRenterInput | ReservationUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutRenterInput | ReservationUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type FavoritoUncheckedUpdateManyWithoutRenterNestedInput = {
    create?: XOR<FavoritoCreateWithoutRenterInput, FavoritoUncheckedCreateWithoutRenterInput> | FavoritoCreateWithoutRenterInput[] | FavoritoUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutRenterInput | FavoritoCreateOrConnectWithoutRenterInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutRenterInput | FavoritoUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: FavoritoCreateManyRenterInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutRenterInput | FavoritoUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutRenterInput | FavoritoUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadoNestedInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutCalificadoInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput> | CalificacionHostUsuarioCreateWithoutCalificadoInput[] | CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutCalificadoInput | CalificacionHostUsuarioCreateOrConnectWithoutCalificadoInput[]
    upsert?: CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadoInput | CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadoInput[]
    createMany?: CalificacionHostUsuarioCreateManyCalificadoInputEnvelope
    set?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    disconnect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    delete?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    update?: CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadoInput | CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadoInput[]
    updateMany?: CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadoInput | CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadoInput[]
    deleteMany?: CalificacionHostUsuarioScalarWhereInput | CalificacionHostUsuarioScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCarsInput = {
    create?: XOR<UserCreateWithoutCarsInput, UserUncheckedCreateWithoutCarsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCarsInput
    connect?: UserWhereUniqueInput
  }

  export type CombustibleCreateNestedManyWithoutCarInput = {
    create?: XOR<CombustibleCreateWithoutCarInput, CombustibleUncheckedCreateWithoutCarInput> | CombustibleCreateWithoutCarInput[] | CombustibleUncheckedCreateWithoutCarInput[]
    connectOrCreate?: CombustibleCreateOrConnectWithoutCarInput | CombustibleCreateOrConnectWithoutCarInput[]
    createMany?: CombustibleCreateManyCarInputEnvelope
    connect?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
  }

  export type CaracteristicaAdicionalCreateNestedManyWithoutCarInput = {
    create?: XOR<CaracteristicaAdicionalCreateWithoutCarInput, CaracteristicaAdicionalUncheckedCreateWithoutCarInput> | CaracteristicaAdicionalCreateWithoutCarInput[] | CaracteristicaAdicionalUncheckedCreateWithoutCarInput[]
    connectOrCreate?: CaracteristicaAdicionalCreateOrConnectWithoutCarInput | CaracteristicaAdicionalCreateOrConnectWithoutCarInput[]
    createMany?: CaracteristicaAdicionalCreateManyCarInputEnvelope
    connect?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
  }

  export type ImagenCreateNestedManyWithoutCarInput = {
    create?: XOR<ImagenCreateWithoutCarInput, ImagenUncheckedCreateWithoutCarInput> | ImagenCreateWithoutCarInput[] | ImagenUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ImagenCreateOrConnectWithoutCarInput | ImagenCreateOrConnectWithoutCarInput[]
    createMany?: ImagenCreateManyCarInputEnvelope
    connect?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
  }

  export type FavoritoCreateNestedManyWithoutCarInput = {
    create?: XOR<FavoritoCreateWithoutCarInput, FavoritoUncheckedCreateWithoutCarInput> | FavoritoCreateWithoutCarInput[] | FavoritoUncheckedCreateWithoutCarInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutCarInput | FavoritoCreateOrConnectWithoutCarInput[]
    createMany?: FavoritoCreateManyCarInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutCarInput = {
    create?: XOR<ReservationCreateWithoutCarInput, ReservationUncheckedCreateWithoutCarInput> | ReservationCreateWithoutCarInput[] | ReservationUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutCarInput | ReservationCreateOrConnectWithoutCarInput[]
    createMany?: ReservationCreateManyCarInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutCarInput = {
    create?: XOR<ReviewCreateWithoutCarInput, ReviewUncheckedCreateWithoutCarInput> | ReviewCreateWithoutCarInput[] | ReviewUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCarInput | ReviewCreateOrConnectWithoutCarInput[]
    createMany?: ReviewCreateManyCarInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type CombustibleUncheckedCreateNestedManyWithoutCarInput = {
    create?: XOR<CombustibleCreateWithoutCarInput, CombustibleUncheckedCreateWithoutCarInput> | CombustibleCreateWithoutCarInput[] | CombustibleUncheckedCreateWithoutCarInput[]
    connectOrCreate?: CombustibleCreateOrConnectWithoutCarInput | CombustibleCreateOrConnectWithoutCarInput[]
    createMany?: CombustibleCreateManyCarInputEnvelope
    connect?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
  }

  export type CaracteristicaAdicionalUncheckedCreateNestedManyWithoutCarInput = {
    create?: XOR<CaracteristicaAdicionalCreateWithoutCarInput, CaracteristicaAdicionalUncheckedCreateWithoutCarInput> | CaracteristicaAdicionalCreateWithoutCarInput[] | CaracteristicaAdicionalUncheckedCreateWithoutCarInput[]
    connectOrCreate?: CaracteristicaAdicionalCreateOrConnectWithoutCarInput | CaracteristicaAdicionalCreateOrConnectWithoutCarInput[]
    createMany?: CaracteristicaAdicionalCreateManyCarInputEnvelope
    connect?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
  }

  export type ImagenUncheckedCreateNestedManyWithoutCarInput = {
    create?: XOR<ImagenCreateWithoutCarInput, ImagenUncheckedCreateWithoutCarInput> | ImagenCreateWithoutCarInput[] | ImagenUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ImagenCreateOrConnectWithoutCarInput | ImagenCreateOrConnectWithoutCarInput[]
    createMany?: ImagenCreateManyCarInputEnvelope
    connect?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
  }

  export type FavoritoUncheckedCreateNestedManyWithoutCarInput = {
    create?: XOR<FavoritoCreateWithoutCarInput, FavoritoUncheckedCreateWithoutCarInput> | FavoritoCreateWithoutCarInput[] | FavoritoUncheckedCreateWithoutCarInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutCarInput | FavoritoCreateOrConnectWithoutCarInput[]
    createMany?: FavoritoCreateManyCarInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutCarInput = {
    create?: XOR<ReservationCreateWithoutCarInput, ReservationUncheckedCreateWithoutCarInput> | ReservationCreateWithoutCarInput[] | ReservationUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutCarInput | ReservationCreateOrConnectWithoutCarInput[]
    createMany?: ReservationCreateManyCarInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutCarInput = {
    create?: XOR<ReviewCreateWithoutCarInput, ReviewUncheckedCreateWithoutCarInput> | ReviewCreateWithoutCarInput[] | ReviewUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCarInput | ReviewCreateOrConnectWithoutCarInput[]
    createMany?: ReviewCreateManyCarInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type EnumCarStatusFieldUpdateOperationsInput = {
    set?: $Enums.CarStatus
  }

  export type UserUpdateOneRequiredWithoutCarsNestedInput = {
    create?: XOR<UserCreateWithoutCarsInput, UserUncheckedCreateWithoutCarsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCarsInput
    upsert?: UserUpsertWithoutCarsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCarsInput, UserUpdateWithoutCarsInput>, UserUncheckedUpdateWithoutCarsInput>
  }

  export type CombustibleUpdateManyWithoutCarNestedInput = {
    create?: XOR<CombustibleCreateWithoutCarInput, CombustibleUncheckedCreateWithoutCarInput> | CombustibleCreateWithoutCarInput[] | CombustibleUncheckedCreateWithoutCarInput[]
    connectOrCreate?: CombustibleCreateOrConnectWithoutCarInput | CombustibleCreateOrConnectWithoutCarInput[]
    upsert?: CombustibleUpsertWithWhereUniqueWithoutCarInput | CombustibleUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: CombustibleCreateManyCarInputEnvelope
    set?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
    disconnect?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
    delete?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
    connect?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
    update?: CombustibleUpdateWithWhereUniqueWithoutCarInput | CombustibleUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: CombustibleUpdateManyWithWhereWithoutCarInput | CombustibleUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: CombustibleScalarWhereInput | CombustibleScalarWhereInput[]
  }

  export type CaracteristicaAdicionalUpdateManyWithoutCarNestedInput = {
    create?: XOR<CaracteristicaAdicionalCreateWithoutCarInput, CaracteristicaAdicionalUncheckedCreateWithoutCarInput> | CaracteristicaAdicionalCreateWithoutCarInput[] | CaracteristicaAdicionalUncheckedCreateWithoutCarInput[]
    connectOrCreate?: CaracteristicaAdicionalCreateOrConnectWithoutCarInput | CaracteristicaAdicionalCreateOrConnectWithoutCarInput[]
    upsert?: CaracteristicaAdicionalUpsertWithWhereUniqueWithoutCarInput | CaracteristicaAdicionalUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: CaracteristicaAdicionalCreateManyCarInputEnvelope
    set?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
    disconnect?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
    delete?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
    connect?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
    update?: CaracteristicaAdicionalUpdateWithWhereUniqueWithoutCarInput | CaracteristicaAdicionalUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: CaracteristicaAdicionalUpdateManyWithWhereWithoutCarInput | CaracteristicaAdicionalUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: CaracteristicaAdicionalScalarWhereInput | CaracteristicaAdicionalScalarWhereInput[]
  }

  export type ImagenUpdateManyWithoutCarNestedInput = {
    create?: XOR<ImagenCreateWithoutCarInput, ImagenUncheckedCreateWithoutCarInput> | ImagenCreateWithoutCarInput[] | ImagenUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ImagenCreateOrConnectWithoutCarInput | ImagenCreateOrConnectWithoutCarInput[]
    upsert?: ImagenUpsertWithWhereUniqueWithoutCarInput | ImagenUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: ImagenCreateManyCarInputEnvelope
    set?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
    disconnect?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
    delete?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
    connect?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
    update?: ImagenUpdateWithWhereUniqueWithoutCarInput | ImagenUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: ImagenUpdateManyWithWhereWithoutCarInput | ImagenUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: ImagenScalarWhereInput | ImagenScalarWhereInput[]
  }

  export type FavoritoUpdateManyWithoutCarNestedInput = {
    create?: XOR<FavoritoCreateWithoutCarInput, FavoritoUncheckedCreateWithoutCarInput> | FavoritoCreateWithoutCarInput[] | FavoritoUncheckedCreateWithoutCarInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutCarInput | FavoritoCreateOrConnectWithoutCarInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutCarInput | FavoritoUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: FavoritoCreateManyCarInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutCarInput | FavoritoUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutCarInput | FavoritoUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutCarNestedInput = {
    create?: XOR<ReservationCreateWithoutCarInput, ReservationUncheckedCreateWithoutCarInput> | ReservationCreateWithoutCarInput[] | ReservationUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutCarInput | ReservationCreateOrConnectWithoutCarInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutCarInput | ReservationUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: ReservationCreateManyCarInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutCarInput | ReservationUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutCarInput | ReservationUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutCarNestedInput = {
    create?: XOR<ReviewCreateWithoutCarInput, ReviewUncheckedCreateWithoutCarInput> | ReviewCreateWithoutCarInput[] | ReviewUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCarInput | ReviewCreateOrConnectWithoutCarInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutCarInput | ReviewUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: ReviewCreateManyCarInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutCarInput | ReviewUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutCarInput | ReviewUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type CombustibleUncheckedUpdateManyWithoutCarNestedInput = {
    create?: XOR<CombustibleCreateWithoutCarInput, CombustibleUncheckedCreateWithoutCarInput> | CombustibleCreateWithoutCarInput[] | CombustibleUncheckedCreateWithoutCarInput[]
    connectOrCreate?: CombustibleCreateOrConnectWithoutCarInput | CombustibleCreateOrConnectWithoutCarInput[]
    upsert?: CombustibleUpsertWithWhereUniqueWithoutCarInput | CombustibleUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: CombustibleCreateManyCarInputEnvelope
    set?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
    disconnect?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
    delete?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
    connect?: CombustibleWhereUniqueInput | CombustibleWhereUniqueInput[]
    update?: CombustibleUpdateWithWhereUniqueWithoutCarInput | CombustibleUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: CombustibleUpdateManyWithWhereWithoutCarInput | CombustibleUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: CombustibleScalarWhereInput | CombustibleScalarWhereInput[]
  }

  export type CaracteristicaAdicionalUncheckedUpdateManyWithoutCarNestedInput = {
    create?: XOR<CaracteristicaAdicionalCreateWithoutCarInput, CaracteristicaAdicionalUncheckedCreateWithoutCarInput> | CaracteristicaAdicionalCreateWithoutCarInput[] | CaracteristicaAdicionalUncheckedCreateWithoutCarInput[]
    connectOrCreate?: CaracteristicaAdicionalCreateOrConnectWithoutCarInput | CaracteristicaAdicionalCreateOrConnectWithoutCarInput[]
    upsert?: CaracteristicaAdicionalUpsertWithWhereUniqueWithoutCarInput | CaracteristicaAdicionalUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: CaracteristicaAdicionalCreateManyCarInputEnvelope
    set?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
    disconnect?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
    delete?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
    connect?: CaracteristicaAdicionalWhereUniqueInput | CaracteristicaAdicionalWhereUniqueInput[]
    update?: CaracteristicaAdicionalUpdateWithWhereUniqueWithoutCarInput | CaracteristicaAdicionalUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: CaracteristicaAdicionalUpdateManyWithWhereWithoutCarInput | CaracteristicaAdicionalUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: CaracteristicaAdicionalScalarWhereInput | CaracteristicaAdicionalScalarWhereInput[]
  }

  export type ImagenUncheckedUpdateManyWithoutCarNestedInput = {
    create?: XOR<ImagenCreateWithoutCarInput, ImagenUncheckedCreateWithoutCarInput> | ImagenCreateWithoutCarInput[] | ImagenUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ImagenCreateOrConnectWithoutCarInput | ImagenCreateOrConnectWithoutCarInput[]
    upsert?: ImagenUpsertWithWhereUniqueWithoutCarInput | ImagenUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: ImagenCreateManyCarInputEnvelope
    set?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
    disconnect?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
    delete?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
    connect?: ImagenWhereUniqueInput | ImagenWhereUniqueInput[]
    update?: ImagenUpdateWithWhereUniqueWithoutCarInput | ImagenUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: ImagenUpdateManyWithWhereWithoutCarInput | ImagenUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: ImagenScalarWhereInput | ImagenScalarWhereInput[]
  }

  export type FavoritoUncheckedUpdateManyWithoutCarNestedInput = {
    create?: XOR<FavoritoCreateWithoutCarInput, FavoritoUncheckedCreateWithoutCarInput> | FavoritoCreateWithoutCarInput[] | FavoritoUncheckedCreateWithoutCarInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutCarInput | FavoritoCreateOrConnectWithoutCarInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutCarInput | FavoritoUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: FavoritoCreateManyCarInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutCarInput | FavoritoUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutCarInput | FavoritoUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutCarNestedInput = {
    create?: XOR<ReservationCreateWithoutCarInput, ReservationUncheckedCreateWithoutCarInput> | ReservationCreateWithoutCarInput[] | ReservationUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutCarInput | ReservationCreateOrConnectWithoutCarInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutCarInput | ReservationUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: ReservationCreateManyCarInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutCarInput | ReservationUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutCarInput | ReservationUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutCarNestedInput = {
    create?: XOR<ReviewCreateWithoutCarInput, ReviewUncheckedCreateWithoutCarInput> | ReviewCreateWithoutCarInput[] | ReviewUncheckedCreateWithoutCarInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCarInput | ReviewCreateOrConnectWithoutCarInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutCarInput | ReviewUpsertWithWhereUniqueWithoutCarInput[]
    createMany?: ReviewCreateManyCarInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutCarInput | ReviewUpdateWithWhereUniqueWithoutCarInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutCarInput | ReviewUpdateManyWithWhereWithoutCarInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type RenterCreateNestedOneWithoutReservationsInput = {
    create?: XOR<RenterCreateWithoutReservationsInput, RenterUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: RenterCreateOrConnectWithoutReservationsInput
    connect?: RenterWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReservationsInput = {
    create?: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservationsInput
    connect?: UserWhereUniqueInput
  }

  export type CarCreateNestedOneWithoutReservationsInput = {
    create?: XOR<CarCreateWithoutReservationsInput, CarUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: CarCreateOrConnectWithoutReservationsInput
    connect?: CarWhereUniqueInput
  }

  export type DescuentoCreateNestedOneWithoutReservasInput = {
    create?: XOR<DescuentoCreateWithoutReservasInput, DescuentoUncheckedCreateWithoutReservasInput>
    connectOrCreate?: DescuentoCreateOrConnectWithoutReservasInput
    connect?: DescuentoWhereUniqueInput
  }

  export type ReviewCreateNestedManyWithoutReservationInput = {
    create?: XOR<ReviewCreateWithoutReservationInput, ReviewUncheckedCreateWithoutReservationInput> | ReviewCreateWithoutReservationInput[] | ReviewUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutReservationInput | ReviewCreateOrConnectWithoutReservationInput[]
    createMany?: ReviewCreateManyReservationInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type CalificacionHostUsuarioCreateNestedManyWithoutReservationInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutReservationInput, CalificacionHostUsuarioUncheckedCreateWithoutReservationInput> | CalificacionHostUsuarioCreateWithoutReservationInput[] | CalificacionHostUsuarioUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutReservationInput | CalificacionHostUsuarioCreateOrConnectWithoutReservationInput[]
    createMany?: CalificacionHostUsuarioCreateManyReservationInputEnvelope
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutReservationInput = {
    create?: XOR<ReviewCreateWithoutReservationInput, ReviewUncheckedCreateWithoutReservationInput> | ReviewCreateWithoutReservationInput[] | ReviewUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutReservationInput | ReviewCreateOrConnectWithoutReservationInput[]
    createMany?: ReviewCreateManyReservationInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type CalificacionHostUsuarioUncheckedCreateNestedManyWithoutReservationInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutReservationInput, CalificacionHostUsuarioUncheckedCreateWithoutReservationInput> | CalificacionHostUsuarioCreateWithoutReservationInput[] | CalificacionHostUsuarioUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutReservationInput | CalificacionHostUsuarioCreateOrConnectWithoutReservationInput[]
    createMany?: CalificacionHostUsuarioCreateManyReservationInputEnvelope
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
  }

  export type EnumEstadoReservacionFieldUpdateOperationsInput = {
    set?: $Enums.EstadoReservacion
  }

  export type RenterUpdateOneRequiredWithoutReservationsNestedInput = {
    create?: XOR<RenterCreateWithoutReservationsInput, RenterUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: RenterCreateOrConnectWithoutReservationsInput
    upsert?: RenterUpsertWithoutReservationsInput
    connect?: RenterWhereUniqueInput
    update?: XOR<XOR<RenterUpdateToOneWithWhereWithoutReservationsInput, RenterUpdateWithoutReservationsInput>, RenterUncheckedUpdateWithoutReservationsInput>
  }

  export type UserUpdateOneRequiredWithoutReservationsNestedInput = {
    create?: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservationsInput
    upsert?: UserUpsertWithoutReservationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservationsInput, UserUpdateWithoutReservationsInput>, UserUncheckedUpdateWithoutReservationsInput>
  }

  export type CarUpdateOneWithoutReservationsNestedInput = {
    create?: XOR<CarCreateWithoutReservationsInput, CarUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: CarCreateOrConnectWithoutReservationsInput
    upsert?: CarUpsertWithoutReservationsInput
    disconnect?: CarWhereInput | boolean
    delete?: CarWhereInput | boolean
    connect?: CarWhereUniqueInput
    update?: XOR<XOR<CarUpdateToOneWithWhereWithoutReservationsInput, CarUpdateWithoutReservationsInput>, CarUncheckedUpdateWithoutReservationsInput>
  }

  export type DescuentoUpdateOneWithoutReservasNestedInput = {
    create?: XOR<DescuentoCreateWithoutReservasInput, DescuentoUncheckedCreateWithoutReservasInput>
    connectOrCreate?: DescuentoCreateOrConnectWithoutReservasInput
    upsert?: DescuentoUpsertWithoutReservasInput
    disconnect?: DescuentoWhereInput | boolean
    delete?: DescuentoWhereInput | boolean
    connect?: DescuentoWhereUniqueInput
    update?: XOR<XOR<DescuentoUpdateToOneWithWhereWithoutReservasInput, DescuentoUpdateWithoutReservasInput>, DescuentoUncheckedUpdateWithoutReservasInput>
  }

  export type ReviewUpdateManyWithoutReservationNestedInput = {
    create?: XOR<ReviewCreateWithoutReservationInput, ReviewUncheckedCreateWithoutReservationInput> | ReviewCreateWithoutReservationInput[] | ReviewUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutReservationInput | ReviewCreateOrConnectWithoutReservationInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutReservationInput | ReviewUpsertWithWhereUniqueWithoutReservationInput[]
    createMany?: ReviewCreateManyReservationInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutReservationInput | ReviewUpdateWithWhereUniqueWithoutReservationInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutReservationInput | ReviewUpdateManyWithWhereWithoutReservationInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type CalificacionHostUsuarioUpdateManyWithoutReservationNestedInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutReservationInput, CalificacionHostUsuarioUncheckedCreateWithoutReservationInput> | CalificacionHostUsuarioCreateWithoutReservationInput[] | CalificacionHostUsuarioUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutReservationInput | CalificacionHostUsuarioCreateOrConnectWithoutReservationInput[]
    upsert?: CalificacionHostUsuarioUpsertWithWhereUniqueWithoutReservationInput | CalificacionHostUsuarioUpsertWithWhereUniqueWithoutReservationInput[]
    createMany?: CalificacionHostUsuarioCreateManyReservationInputEnvelope
    set?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    disconnect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    delete?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    update?: CalificacionHostUsuarioUpdateWithWhereUniqueWithoutReservationInput | CalificacionHostUsuarioUpdateWithWhereUniqueWithoutReservationInput[]
    updateMany?: CalificacionHostUsuarioUpdateManyWithWhereWithoutReservationInput | CalificacionHostUsuarioUpdateManyWithWhereWithoutReservationInput[]
    deleteMany?: CalificacionHostUsuarioScalarWhereInput | CalificacionHostUsuarioScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutReservationNestedInput = {
    create?: XOR<ReviewCreateWithoutReservationInput, ReviewUncheckedCreateWithoutReservationInput> | ReviewCreateWithoutReservationInput[] | ReviewUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutReservationInput | ReviewCreateOrConnectWithoutReservationInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutReservationInput | ReviewUpsertWithWhereUniqueWithoutReservationInput[]
    createMany?: ReviewCreateManyReservationInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutReservationInput | ReviewUpdateWithWhereUniqueWithoutReservationInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutReservationInput | ReviewUpdateManyWithWhereWithoutReservationInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type CalificacionHostUsuarioUncheckedUpdateManyWithoutReservationNestedInput = {
    create?: XOR<CalificacionHostUsuarioCreateWithoutReservationInput, CalificacionHostUsuarioUncheckedCreateWithoutReservationInput> | CalificacionHostUsuarioCreateWithoutReservationInput[] | CalificacionHostUsuarioUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: CalificacionHostUsuarioCreateOrConnectWithoutReservationInput | CalificacionHostUsuarioCreateOrConnectWithoutReservationInput[]
    upsert?: CalificacionHostUsuarioUpsertWithWhereUniqueWithoutReservationInput | CalificacionHostUsuarioUpsertWithWhereUniqueWithoutReservationInput[]
    createMany?: CalificacionHostUsuarioCreateManyReservationInputEnvelope
    set?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    disconnect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    delete?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    connect?: CalificacionHostUsuarioWhereUniqueInput | CalificacionHostUsuarioWhereUniqueInput[]
    update?: CalificacionHostUsuarioUpdateWithWhereUniqueWithoutReservationInput | CalificacionHostUsuarioUpdateWithWhereUniqueWithoutReservationInput[]
    updateMany?: CalificacionHostUsuarioUpdateManyWithWhereWithoutReservationInput | CalificacionHostUsuarioUpdateManyWithWhereWithoutReservationInput[]
    deleteMany?: CalificacionHostUsuarioScalarWhereInput | CalificacionHostUsuarioScalarWhereInput[]
  }

  export type RenterCreateNestedOneWithoutReviewsInput = {
    create?: XOR<RenterCreateWithoutReviewsInput, RenterUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: RenterCreateOrConnectWithoutReviewsInput
    connect?: RenterWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewsInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    connect?: UserWhereUniqueInput
  }

  export type ReservationCreateNestedOneWithoutReviewsInput = {
    create?: XOR<ReservationCreateWithoutReviewsInput, ReservationUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ReservationCreateOrConnectWithoutReviewsInput
    connect?: ReservationWhereUniqueInput
  }

  export type CarCreateNestedOneWithoutReviewsInput = {
    create?: XOR<CarCreateWithoutReviewsInput, CarUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: CarCreateOrConnectWithoutReviewsInput
    connect?: CarWhereUniqueInput
  }

  export type RenterUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<RenterCreateWithoutReviewsInput, RenterUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: RenterCreateOrConnectWithoutReviewsInput
    upsert?: RenterUpsertWithoutReviewsInput
    connect?: RenterWhereUniqueInput
    update?: XOR<XOR<RenterUpdateToOneWithWhereWithoutReviewsInput, RenterUpdateWithoutReviewsInput>, RenterUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    upsert?: UserUpsertWithoutReviewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewsInput, UserUpdateWithoutReviewsInput>, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type ReservationUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<ReservationCreateWithoutReviewsInput, ReservationUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ReservationCreateOrConnectWithoutReviewsInput
    upsert?: ReservationUpsertWithoutReviewsInput
    connect?: ReservationWhereUniqueInput
    update?: XOR<XOR<ReservationUpdateToOneWithWhereWithoutReviewsInput, ReservationUpdateWithoutReviewsInput>, ReservationUncheckedUpdateWithoutReviewsInput>
  }

  export type CarUpdateOneWithoutReviewsNestedInput = {
    create?: XOR<CarCreateWithoutReviewsInput, CarUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: CarCreateOrConnectWithoutReviewsInput
    upsert?: CarUpsertWithoutReviewsInput
    disconnect?: CarWhereInput | boolean
    delete?: CarWhereInput | boolean
    connect?: CarWhereUniqueInput
    update?: XOR<XOR<CarUpdateToOneWithWhereWithoutReviewsInput, CarUpdateWithoutReviewsInput>, CarUncheckedUpdateWithoutReviewsInput>
  }

  export type RenterCreateNestedOneWithoutReportsInput = {
    create?: XOR<RenterCreateWithoutReportsInput, RenterUncheckedCreateWithoutReportsInput>
    connectOrCreate?: RenterCreateOrConnectWithoutReportsInput
    connect?: RenterWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReportsInput = {
    create?: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumEstadoReporteFieldUpdateOperationsInput = {
    set?: $Enums.EstadoReporte
  }

  export type RenterUpdateOneRequiredWithoutReportsNestedInput = {
    create?: XOR<RenterCreateWithoutReportsInput, RenterUncheckedCreateWithoutReportsInput>
    connectOrCreate?: RenterCreateOrConnectWithoutReportsInput
    upsert?: RenterUpsertWithoutReportsInput
    connect?: RenterWhereUniqueInput
    update?: XOR<XOR<RenterUpdateToOneWithWhereWithoutReportsInput, RenterUpdateWithoutReportsInput>, RenterUncheckedUpdateWithoutReportsInput>
  }

  export type UserUpdateOneRequiredWithoutReportsNestedInput = {
    create?: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportsInput
    upsert?: UserUpsertWithoutReportsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReportsInput, UserUpdateWithoutReportsInput>, UserUncheckedUpdateWithoutReportsInput>
  }

  export type CarCreateNestedOneWithoutCombustiblesInput = {
    create?: XOR<CarCreateWithoutCombustiblesInput, CarUncheckedCreateWithoutCombustiblesInput>
    connectOrCreate?: CarCreateOrConnectWithoutCombustiblesInput
    connect?: CarWhereUniqueInput
  }

  export type CarUpdateOneRequiredWithoutCombustiblesNestedInput = {
    create?: XOR<CarCreateWithoutCombustiblesInput, CarUncheckedCreateWithoutCombustiblesInput>
    connectOrCreate?: CarCreateOrConnectWithoutCombustiblesInput
    upsert?: CarUpsertWithoutCombustiblesInput
    connect?: CarWhereUniqueInput
    update?: XOR<XOR<CarUpdateToOneWithWhereWithoutCombustiblesInput, CarUpdateWithoutCombustiblesInput>, CarUncheckedUpdateWithoutCombustiblesInput>
  }

  export type CarCreateNestedOneWithoutCaracteristicasInput = {
    create?: XOR<CarCreateWithoutCaracteristicasInput, CarUncheckedCreateWithoutCaracteristicasInput>
    connectOrCreate?: CarCreateOrConnectWithoutCaracteristicasInput
    connect?: CarWhereUniqueInput
  }

  export type CarUpdateOneRequiredWithoutCaracteristicasNestedInput = {
    create?: XOR<CarCreateWithoutCaracteristicasInput, CarUncheckedCreateWithoutCaracteristicasInput>
    connectOrCreate?: CarCreateOrConnectWithoutCaracteristicasInput
    upsert?: CarUpsertWithoutCaracteristicasInput
    connect?: CarWhereUniqueInput
    update?: XOR<XOR<CarUpdateToOneWithWhereWithoutCaracteristicasInput, CarUpdateWithoutCaracteristicasInput>, CarUncheckedUpdateWithoutCaracteristicasInput>
  }

  export type CarCreateNestedOneWithoutImagenesInput = {
    create?: XOR<CarCreateWithoutImagenesInput, CarUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: CarCreateOrConnectWithoutImagenesInput
    connect?: CarWhereUniqueInput
  }

  export type CarUpdateOneRequiredWithoutImagenesNestedInput = {
    create?: XOR<CarCreateWithoutImagenesInput, CarUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: CarCreateOrConnectWithoutImagenesInput
    upsert?: CarUpsertWithoutImagenesInput
    connect?: CarWhereUniqueInput
    update?: XOR<XOR<CarUpdateToOneWithWhereWithoutImagenesInput, CarUpdateWithoutImagenesInput>, CarUncheckedUpdateWithoutImagenesInput>
  }

  export type RenterCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<RenterCreateWithoutFavoritosInput, RenterUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: RenterCreateOrConnectWithoutFavoritosInput
    connect?: RenterWhereUniqueInput
  }

  export type CarCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<CarCreateWithoutFavoritosInput, CarUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: CarCreateOrConnectWithoutFavoritosInput
    connect?: CarWhereUniqueInput
  }

  export type RenterUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<RenterCreateWithoutFavoritosInput, RenterUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: RenterCreateOrConnectWithoutFavoritosInput
    upsert?: RenterUpsertWithoutFavoritosInput
    connect?: RenterWhereUniqueInput
    update?: XOR<XOR<RenterUpdateToOneWithWhereWithoutFavoritosInput, RenterUpdateWithoutFavoritosInput>, RenterUncheckedUpdateWithoutFavoritosInput>
  }

  export type CarUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<CarCreateWithoutFavoritosInput, CarUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: CarCreateOrConnectWithoutFavoritosInput
    upsert?: CarUpsertWithoutFavoritosInput
    connect?: CarWhereUniqueInput
    update?: XOR<XOR<CarUpdateToOneWithWhereWithoutFavoritosInput, CarUpdateWithoutFavoritosInput>, CarUncheckedUpdateWithoutFavoritosInput>
  }

  export type ReservationCreateNestedManyWithoutDescuentoInput = {
    create?: XOR<ReservationCreateWithoutDescuentoInput, ReservationUncheckedCreateWithoutDescuentoInput> | ReservationCreateWithoutDescuentoInput[] | ReservationUncheckedCreateWithoutDescuentoInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutDescuentoInput | ReservationCreateOrConnectWithoutDescuentoInput[]
    createMany?: ReservationCreateManyDescuentoInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutDescuentoInput = {
    create?: XOR<ReservationCreateWithoutDescuentoInput, ReservationUncheckedCreateWithoutDescuentoInput> | ReservationCreateWithoutDescuentoInput[] | ReservationUncheckedCreateWithoutDescuentoInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutDescuentoInput | ReservationCreateOrConnectWithoutDescuentoInput[]
    createMany?: ReservationCreateManyDescuentoInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type ReservationUpdateManyWithoutDescuentoNestedInput = {
    create?: XOR<ReservationCreateWithoutDescuentoInput, ReservationUncheckedCreateWithoutDescuentoInput> | ReservationCreateWithoutDescuentoInput[] | ReservationUncheckedCreateWithoutDescuentoInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutDescuentoInput | ReservationCreateOrConnectWithoutDescuentoInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutDescuentoInput | ReservationUpsertWithWhereUniqueWithoutDescuentoInput[]
    createMany?: ReservationCreateManyDescuentoInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutDescuentoInput | ReservationUpdateWithWhereUniqueWithoutDescuentoInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutDescuentoInput | ReservationUpdateManyWithWhereWithoutDescuentoInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutDescuentoNestedInput = {
    create?: XOR<ReservationCreateWithoutDescuentoInput, ReservationUncheckedCreateWithoutDescuentoInput> | ReservationCreateWithoutDescuentoInput[] | ReservationUncheckedCreateWithoutDescuentoInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutDescuentoInput | ReservationCreateOrConnectWithoutDescuentoInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutDescuentoInput | ReservationUpsertWithWhereUniqueWithoutDescuentoInput[]
    createMany?: ReservationCreateManyDescuentoInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutDescuentoInput | ReservationUpdateWithWhereUniqueWithoutDescuentoInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutDescuentoInput | ReservationUpdateManyWithWhereWithoutDescuentoInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type ReservationCreateNestedOneWithoutCalificacionesInput = {
    create?: XOR<ReservationCreateWithoutCalificacionesInput, ReservationUncheckedCreateWithoutCalificacionesInput>
    connectOrCreate?: ReservationCreateOrConnectWithoutCalificacionesInput
    connect?: ReservationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCalificacionesHechasInput = {
    create?: XOR<UserCreateWithoutCalificacionesHechasInput, UserUncheckedCreateWithoutCalificacionesHechasInput>
    connectOrCreate?: UserCreateOrConnectWithoutCalificacionesHechasInput
    connect?: UserWhereUniqueInput
  }

  export type RenterCreateNestedOneWithoutCalificacionesRecibidasInput = {
    create?: XOR<RenterCreateWithoutCalificacionesRecibidasInput, RenterUncheckedCreateWithoutCalificacionesRecibidasInput>
    connectOrCreate?: RenterCreateOrConnectWithoutCalificacionesRecibidasInput
    connect?: RenterWhereUniqueInput
  }

  export type ReservationUpdateOneRequiredWithoutCalificacionesNestedInput = {
    create?: XOR<ReservationCreateWithoutCalificacionesInput, ReservationUncheckedCreateWithoutCalificacionesInput>
    connectOrCreate?: ReservationCreateOrConnectWithoutCalificacionesInput
    upsert?: ReservationUpsertWithoutCalificacionesInput
    connect?: ReservationWhereUniqueInput
    update?: XOR<XOR<ReservationUpdateToOneWithWhereWithoutCalificacionesInput, ReservationUpdateWithoutCalificacionesInput>, ReservationUncheckedUpdateWithoutCalificacionesInput>
  }

  export type UserUpdateOneRequiredWithoutCalificacionesHechasNestedInput = {
    create?: XOR<UserCreateWithoutCalificacionesHechasInput, UserUncheckedCreateWithoutCalificacionesHechasInput>
    connectOrCreate?: UserCreateOrConnectWithoutCalificacionesHechasInput
    upsert?: UserUpsertWithoutCalificacionesHechasInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCalificacionesHechasInput, UserUpdateWithoutCalificacionesHechasInput>, UserUncheckedUpdateWithoutCalificacionesHechasInput>
  }

  export type RenterUpdateOneRequiredWithoutCalificacionesRecibidasNestedInput = {
    create?: XOR<RenterCreateWithoutCalificacionesRecibidasInput, RenterUncheckedCreateWithoutCalificacionesRecibidasInput>
    connectOrCreate?: RenterCreateOrConnectWithoutCalificacionesRecibidasInput
    upsert?: RenterUpsertWithoutCalificacionesRecibidasInput
    connect?: RenterWhereUniqueInput
    update?: XOR<XOR<RenterUpdateToOneWithWhereWithoutCalificacionesRecibidasInput, RenterUpdateWithoutCalificacionesRecibidasInput>, RenterUncheckedUpdateWithoutCalificacionesRecibidasInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumGeneroNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel> | null
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGeneroNullableFilter<$PrismaModel> | $Enums.Genero | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumGeneroNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel> | null
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGeneroNullableWithAggregatesFilter<$PrismaModel> | $Enums.Genero | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGeneroNullableFilter<$PrismaModel>
    _max?: NestedEnumGeneroNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumCarStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CarStatus | EnumCarStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CarStatus[] | ListEnumCarStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CarStatus[] | ListEnumCarStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCarStatusFilter<$PrismaModel> | $Enums.CarStatus
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumCarStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CarStatus | EnumCarStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CarStatus[] | ListEnumCarStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CarStatus[] | ListEnumCarStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCarStatusWithAggregatesFilter<$PrismaModel> | $Enums.CarStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCarStatusFilter<$PrismaModel>
    _max?: NestedEnumCarStatusFilter<$PrismaModel>
  }

  export type NestedEnumEstadoReservacionFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReservacion | EnumEstadoReservacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReservacion[] | ListEnumEstadoReservacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReservacion[] | ListEnumEstadoReservacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReservacionFilter<$PrismaModel> | $Enums.EstadoReservacion
  }

  export type NestedEnumEstadoReservacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReservacion | EnumEstadoReservacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReservacion[] | ListEnumEstadoReservacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReservacion[] | ListEnumEstadoReservacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReservacionWithAggregatesFilter<$PrismaModel> | $Enums.EstadoReservacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoReservacionFilter<$PrismaModel>
    _max?: NestedEnumEstadoReservacionFilter<$PrismaModel>
  }

  export type NestedEnumEstadoReporteFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReporte | EnumEstadoReporteFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReporte[] | ListEnumEstadoReporteFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReporte[] | ListEnumEstadoReporteFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReporteFilter<$PrismaModel> | $Enums.EstadoReporte
  }

  export type NestedEnumEstadoReporteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReporte | EnumEstadoReporteFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReporte[] | ListEnumEstadoReporteFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReporte[] | ListEnumEstadoReporteFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReporteWithAggregatesFilter<$PrismaModel> | $Enums.EstadoReporte
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoReporteFilter<$PrismaModel>
    _max?: NestedEnumEstadoReporteFilter<$PrismaModel>
  }

  export type ReviewCreateWithoutHostInput = {
    id?: string
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReviewsInput
    reservation: ReservationCreateNestedOneWithoutReviewsInput
    car?: CarCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutHostInput = {
    id?: string
    renterId: string
    reservationId: string
    carId?: string | null
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutHostInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutHostInput, ReviewUncheckedCreateWithoutHostInput>
  }

  export type ReviewCreateManyHostInputEnvelope = {
    data: ReviewCreateManyHostInput | ReviewCreateManyHostInput[]
    skipDuplicates?: boolean
  }

  export type ReportCreateWithoutReporterInput = {
    id?: string
    reason: string
    additionalInfo?: string | null
    status?: $Enums.EstadoReporte
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReportsInput
  }

  export type ReportUncheckedCreateWithoutReporterInput = {
    id?: string
    renterId: string
    reason: string
    additionalInfo?: string | null
    status?: $Enums.EstadoReporte
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReportCreateOrConnectWithoutReporterInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput>
  }

  export type ReportCreateManyReporterInputEnvelope = {
    data: ReportCreateManyReporterInput | ReportCreateManyReporterInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutHostInput = {
    id?: string
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReservationsInput
    car?: CarCreateNestedOneWithoutReservationsInput
    descuento?: DescuentoCreateNestedOneWithoutReservasInput
    reviews?: ReviewCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioCreateNestedManyWithoutReservationInput
  }

  export type ReservationUncheckedCreateWithoutHostInput = {
    id?: string
    renterId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutReservationInput
  }

  export type ReservationCreateOrConnectWithoutHostInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutHostInput, ReservationUncheckedCreateWithoutHostInput>
  }

  export type ReservationCreateManyHostInputEnvelope = {
    data: ReservationCreateManyHostInput | ReservationCreateManyHostInput[]
    skipDuplicates?: boolean
  }

  export type CarCreateWithoutUserInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
    combustibles?: CombustibleCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalCreateNestedManyWithoutCarInput
    imagenes?: ImagenCreateNestedManyWithoutCarInput
    favoritos?: FavoritoCreateNestedManyWithoutCarInput
    reservations?: ReservationCreateNestedManyWithoutCarInput
    reviews?: ReviewCreateNestedManyWithoutCarInput
  }

  export type CarUncheckedCreateWithoutUserInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
    combustibles?: CombustibleUncheckedCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalUncheckedCreateNestedManyWithoutCarInput
    imagenes?: ImagenUncheckedCreateNestedManyWithoutCarInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutCarInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCarInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCarInput
  }

  export type CarCreateOrConnectWithoutUserInput = {
    where: CarWhereUniqueInput
    create: XOR<CarCreateWithoutUserInput, CarUncheckedCreateWithoutUserInput>
  }

  export type CarCreateManyUserInputEnvelope = {
    data: CarCreateManyUserInput | CarCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CalificacionHostUsuarioCreateWithoutCalificadorInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    fechaCreacion?: Date | string
    reservation: ReservationCreateNestedOneWithoutCalificacionesInput
    calificado: RenterCreateNestedOneWithoutCalificacionesRecibidasInput
  }

  export type CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    reservationId: string
    calificadoId: string
    fechaCreacion?: Date | string
  }

  export type CalificacionHostUsuarioCreateOrConnectWithoutCalificadorInput = {
    where: CalificacionHostUsuarioWhereUniqueInput
    create: XOR<CalificacionHostUsuarioCreateWithoutCalificadorInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput>
  }

  export type CalificacionHostUsuarioCreateManyCalificadorInputEnvelope = {
    data: CalificacionHostUsuarioCreateManyCalificadorInput | CalificacionHostUsuarioCreateManyCalificadorInput[]
    skipDuplicates?: boolean
  }

  export type ReviewUpsertWithWhereUniqueWithoutHostInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutHostInput, ReviewUncheckedUpdateWithoutHostInput>
    create: XOR<ReviewCreateWithoutHostInput, ReviewUncheckedCreateWithoutHostInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutHostInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutHostInput, ReviewUncheckedUpdateWithoutHostInput>
  }

  export type ReviewUpdateManyWithWhereWithoutHostInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutHostInput>
  }

  export type ReviewScalarWhereInput = {
    AND?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    OR?: ReviewScalarWhereInput[]
    NOT?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    id?: StringFilter<"Review"> | string
    renterId?: StringFilter<"Review"> | string
    hostId?: StringFilter<"Review"> | string
    reservationId?: StringFilter<"Review"> | string
    carId?: StringNullableFilter<"Review"> | string | null
    rating?: IntFilter<"Review"> | number
    behaviorRating?: IntFilter<"Review"> | number
    carCareRating?: IntFilter<"Review"> | number
    punctualityRating?: IntFilter<"Review"> | number
    comment?: StringNullableFilter<"Review"> | string | null
    hostName?: StringFilter<"Review"> | string
    hostPicture?: StringNullableFilter<"Review"> | string | null
    renterName?: StringFilter<"Review"> | string
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
  }

  export type ReportUpsertWithWhereUniqueWithoutReporterInput = {
    where: ReportWhereUniqueInput
    update: XOR<ReportUpdateWithoutReporterInput, ReportUncheckedUpdateWithoutReporterInput>
    create: XOR<ReportCreateWithoutReporterInput, ReportUncheckedCreateWithoutReporterInput>
  }

  export type ReportUpdateWithWhereUniqueWithoutReporterInput = {
    where: ReportWhereUniqueInput
    data: XOR<ReportUpdateWithoutReporterInput, ReportUncheckedUpdateWithoutReporterInput>
  }

  export type ReportUpdateManyWithWhereWithoutReporterInput = {
    where: ReportScalarWhereInput
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyWithoutReporterInput>
  }

  export type ReportScalarWhereInput = {
    AND?: ReportScalarWhereInput | ReportScalarWhereInput[]
    OR?: ReportScalarWhereInput[]
    NOT?: ReportScalarWhereInput | ReportScalarWhereInput[]
    id?: StringFilter<"Report"> | string
    renterId?: StringFilter<"Report"> | string
    reporterId?: StringFilter<"Report"> | string
    reason?: StringFilter<"Report"> | string
    additionalInfo?: StringNullableFilter<"Report"> | string | null
    status?: EnumEstadoReporteFilter<"Report"> | $Enums.EstadoReporte
    createdAt?: DateTimeFilter<"Report"> | Date | string
    updatedAt?: DateTimeFilter<"Report"> | Date | string
  }

  export type ReservationUpsertWithWhereUniqueWithoutHostInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutHostInput, ReservationUncheckedUpdateWithoutHostInput>
    create: XOR<ReservationCreateWithoutHostInput, ReservationUncheckedCreateWithoutHostInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutHostInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutHostInput, ReservationUncheckedUpdateWithoutHostInput>
  }

  export type ReservationUpdateManyWithWhereWithoutHostInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutHostInput>
  }

  export type ReservationScalarWhereInput = {
    AND?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
    OR?: ReservationScalarWhereInput[]
    NOT?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
    id?: StringFilter<"Reservation"> | string
    renterId?: StringFilter<"Reservation"> | string
    hostId?: StringFilter<"Reservation"> | string
    carId?: StringNullableFilter<"Reservation"> | string | null
    fechaInicio?: DateTimeFilter<"Reservation"> | Date | string
    fechaFin?: DateTimeFilter<"Reservation"> | Date | string
    fechaCreacion?: DateTimeFilter<"Reservation"> | Date | string
    fechaExpiracion?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    estado?: EnumEstadoReservacionFilter<"Reservation"> | $Enums.EstadoReservacion
    descuentoId?: StringNullableFilter<"Reservation"> | string | null
    createdAt?: DateTimeFilter<"Reservation"> | Date | string
    updatedAt?: DateTimeFilter<"Reservation"> | Date | string
  }

  export type CarUpsertWithWhereUniqueWithoutUserInput = {
    where: CarWhereUniqueInput
    update: XOR<CarUpdateWithoutUserInput, CarUncheckedUpdateWithoutUserInput>
    create: XOR<CarCreateWithoutUserInput, CarUncheckedCreateWithoutUserInput>
  }

  export type CarUpdateWithWhereUniqueWithoutUserInput = {
    where: CarWhereUniqueInput
    data: XOR<CarUpdateWithoutUserInput, CarUncheckedUpdateWithoutUserInput>
  }

  export type CarUpdateManyWithWhereWithoutUserInput = {
    where: CarScalarWhereInput
    data: XOR<CarUpdateManyMutationInput, CarUncheckedUpdateManyWithoutUserInput>
  }

  export type CarScalarWhereInput = {
    AND?: CarScalarWhereInput | CarScalarWhereInput[]
    OR?: CarScalarWhereInput[]
    NOT?: CarScalarWhereInput | CarScalarWhereInput[]
    id?: StringFilter<"Car"> | string
    vin?: StringNullableFilter<"Car"> | string | null
    año?: IntFilter<"Car"> | number
    marca?: StringFilter<"Car"> | string
    modelo?: StringFilter<"Car"> | string
    placa?: StringFilter<"Car"> | string
    asientos?: IntNullableFilter<"Car"> | number | null
    puertas?: IntNullableFilter<"Car"> | number | null
    soat?: BoolNullableFilter<"Car"> | boolean | null
    precioPorDia?: FloatFilter<"Car"> | number
    numMantenimientos?: IntNullableFilter<"Car"> | number | null
    transmision?: StringNullableFilter<"Car"> | string | null
    estado?: EnumCarStatusFilter<"Car"> | $Enums.CarStatus
    direccion?: StringNullableFilter<"Car"> | string | null
    ciudad?: StringNullableFilter<"Car"> | string | null
    provincia?: StringNullableFilter<"Car"> | string | null
    pais?: StringNullableFilter<"Car"> | string | null
    color?: StringFilter<"Car"> | string
    userId?: StringFilter<"Car"> | string
    createdAt?: DateTimeFilter<"Car"> | Date | string
    updatedAt?: DateTimeFilter<"Car"> | Date | string
  }

  export type CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadorInput = {
    where: CalificacionHostUsuarioWhereUniqueInput
    update: XOR<CalificacionHostUsuarioUpdateWithoutCalificadorInput, CalificacionHostUsuarioUncheckedUpdateWithoutCalificadorInput>
    create: XOR<CalificacionHostUsuarioCreateWithoutCalificadorInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadorInput>
  }

  export type CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadorInput = {
    where: CalificacionHostUsuarioWhereUniqueInput
    data: XOR<CalificacionHostUsuarioUpdateWithoutCalificadorInput, CalificacionHostUsuarioUncheckedUpdateWithoutCalificadorInput>
  }

  export type CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadorInput = {
    where: CalificacionHostUsuarioScalarWhereInput
    data: XOR<CalificacionHostUsuarioUpdateManyMutationInput, CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadorInput>
  }

  export type CalificacionHostUsuarioScalarWhereInput = {
    AND?: CalificacionHostUsuarioScalarWhereInput | CalificacionHostUsuarioScalarWhereInput[]
    OR?: CalificacionHostUsuarioScalarWhereInput[]
    NOT?: CalificacionHostUsuarioScalarWhereInput | CalificacionHostUsuarioScalarWhereInput[]
    id?: StringFilter<"CalificacionHostUsuario"> | string
    comportamiento?: IntFilter<"CalificacionHostUsuario"> | number
    cuidadoVehiculo?: IntFilter<"CalificacionHostUsuario"> | number
    puntualidad?: IntFilter<"CalificacionHostUsuario"> | number
    comentario?: StringNullableFilter<"CalificacionHostUsuario"> | string | null
    reservationId?: StringFilter<"CalificacionHostUsuario"> | string
    calificadorId?: StringFilter<"CalificacionHostUsuario"> | string
    calificadoId?: StringFilter<"CalificacionHostUsuario"> | string
    fechaCreacion?: DateTimeFilter<"CalificacionHostUsuario"> | Date | string
  }

  export type ReviewCreateWithoutRenterInput = {
    id?: string
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
    host: UserCreateNestedOneWithoutReviewsInput
    reservation: ReservationCreateNestedOneWithoutReviewsInput
    car?: CarCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutRenterInput = {
    id?: string
    hostId: string
    reservationId: string
    carId?: string | null
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutRenterInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutRenterInput, ReviewUncheckedCreateWithoutRenterInput>
  }

  export type ReviewCreateManyRenterInputEnvelope = {
    data: ReviewCreateManyRenterInput | ReviewCreateManyRenterInput[]
    skipDuplicates?: boolean
  }

  export type ReportCreateWithoutRenterInput = {
    id?: string
    reason: string
    additionalInfo?: string | null
    status?: $Enums.EstadoReporte
    createdAt?: Date | string
    updatedAt?: Date | string
    reporter: UserCreateNestedOneWithoutReportsInput
  }

  export type ReportUncheckedCreateWithoutRenterInput = {
    id?: string
    reporterId: string
    reason: string
    additionalInfo?: string | null
    status?: $Enums.EstadoReporte
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReportCreateOrConnectWithoutRenterInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutRenterInput, ReportUncheckedCreateWithoutRenterInput>
  }

  export type ReportCreateManyRenterInputEnvelope = {
    data: ReportCreateManyRenterInput | ReportCreateManyRenterInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutRenterInput = {
    id?: string
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    createdAt?: Date | string
    updatedAt?: Date | string
    host: UserCreateNestedOneWithoutReservationsInput
    car?: CarCreateNestedOneWithoutReservationsInput
    descuento?: DescuentoCreateNestedOneWithoutReservasInput
    reviews?: ReviewCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioCreateNestedManyWithoutReservationInput
  }

  export type ReservationUncheckedCreateWithoutRenterInput = {
    id?: string
    hostId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutReservationInput
  }

  export type ReservationCreateOrConnectWithoutRenterInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutRenterInput, ReservationUncheckedCreateWithoutRenterInput>
  }

  export type ReservationCreateManyRenterInputEnvelope = {
    data: ReservationCreateManyRenterInput | ReservationCreateManyRenterInput[]
    skipDuplicates?: boolean
  }

  export type FavoritoCreateWithoutRenterInput = {
    id?: string
    car: CarCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritoUncheckedCreateWithoutRenterInput = {
    id?: string
    carId: string
  }

  export type FavoritoCreateOrConnectWithoutRenterInput = {
    where: FavoritoWhereUniqueInput
    create: XOR<FavoritoCreateWithoutRenterInput, FavoritoUncheckedCreateWithoutRenterInput>
  }

  export type FavoritoCreateManyRenterInputEnvelope = {
    data: FavoritoCreateManyRenterInput | FavoritoCreateManyRenterInput[]
    skipDuplicates?: boolean
  }

  export type CalificacionHostUsuarioCreateWithoutCalificadoInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    fechaCreacion?: Date | string
    reservation: ReservationCreateNestedOneWithoutCalificacionesInput
    calificador: UserCreateNestedOneWithoutCalificacionesHechasInput
  }

  export type CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    reservationId: string
    calificadorId: string
    fechaCreacion?: Date | string
  }

  export type CalificacionHostUsuarioCreateOrConnectWithoutCalificadoInput = {
    where: CalificacionHostUsuarioWhereUniqueInput
    create: XOR<CalificacionHostUsuarioCreateWithoutCalificadoInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput>
  }

  export type CalificacionHostUsuarioCreateManyCalificadoInputEnvelope = {
    data: CalificacionHostUsuarioCreateManyCalificadoInput | CalificacionHostUsuarioCreateManyCalificadoInput[]
    skipDuplicates?: boolean
  }

  export type ReviewUpsertWithWhereUniqueWithoutRenterInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutRenterInput, ReviewUncheckedUpdateWithoutRenterInput>
    create: XOR<ReviewCreateWithoutRenterInput, ReviewUncheckedCreateWithoutRenterInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutRenterInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutRenterInput, ReviewUncheckedUpdateWithoutRenterInput>
  }

  export type ReviewUpdateManyWithWhereWithoutRenterInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutRenterInput>
  }

  export type ReportUpsertWithWhereUniqueWithoutRenterInput = {
    where: ReportWhereUniqueInput
    update: XOR<ReportUpdateWithoutRenterInput, ReportUncheckedUpdateWithoutRenterInput>
    create: XOR<ReportCreateWithoutRenterInput, ReportUncheckedCreateWithoutRenterInput>
  }

  export type ReportUpdateWithWhereUniqueWithoutRenterInput = {
    where: ReportWhereUniqueInput
    data: XOR<ReportUpdateWithoutRenterInput, ReportUncheckedUpdateWithoutRenterInput>
  }

  export type ReportUpdateManyWithWhereWithoutRenterInput = {
    where: ReportScalarWhereInput
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyWithoutRenterInput>
  }

  export type ReservationUpsertWithWhereUniqueWithoutRenterInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutRenterInput, ReservationUncheckedUpdateWithoutRenterInput>
    create: XOR<ReservationCreateWithoutRenterInput, ReservationUncheckedCreateWithoutRenterInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutRenterInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutRenterInput, ReservationUncheckedUpdateWithoutRenterInput>
  }

  export type ReservationUpdateManyWithWhereWithoutRenterInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutRenterInput>
  }

  export type FavoritoUpsertWithWhereUniqueWithoutRenterInput = {
    where: FavoritoWhereUniqueInput
    update: XOR<FavoritoUpdateWithoutRenterInput, FavoritoUncheckedUpdateWithoutRenterInput>
    create: XOR<FavoritoCreateWithoutRenterInput, FavoritoUncheckedCreateWithoutRenterInput>
  }

  export type FavoritoUpdateWithWhereUniqueWithoutRenterInput = {
    where: FavoritoWhereUniqueInput
    data: XOR<FavoritoUpdateWithoutRenterInput, FavoritoUncheckedUpdateWithoutRenterInput>
  }

  export type FavoritoUpdateManyWithWhereWithoutRenterInput = {
    where: FavoritoScalarWhereInput
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyWithoutRenterInput>
  }

  export type FavoritoScalarWhereInput = {
    AND?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
    OR?: FavoritoScalarWhereInput[]
    NOT?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
    id?: StringFilter<"Favorito"> | string
    renterId?: StringFilter<"Favorito"> | string
    carId?: StringFilter<"Favorito"> | string
  }

  export type CalificacionHostUsuarioUpsertWithWhereUniqueWithoutCalificadoInput = {
    where: CalificacionHostUsuarioWhereUniqueInput
    update: XOR<CalificacionHostUsuarioUpdateWithoutCalificadoInput, CalificacionHostUsuarioUncheckedUpdateWithoutCalificadoInput>
    create: XOR<CalificacionHostUsuarioCreateWithoutCalificadoInput, CalificacionHostUsuarioUncheckedCreateWithoutCalificadoInput>
  }

  export type CalificacionHostUsuarioUpdateWithWhereUniqueWithoutCalificadoInput = {
    where: CalificacionHostUsuarioWhereUniqueInput
    data: XOR<CalificacionHostUsuarioUpdateWithoutCalificadoInput, CalificacionHostUsuarioUncheckedUpdateWithoutCalificadoInput>
  }

  export type CalificacionHostUsuarioUpdateManyWithWhereWithoutCalificadoInput = {
    where: CalificacionHostUsuarioScalarWhereInput
    data: XOR<CalificacionHostUsuarioUpdateManyMutationInput, CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadoInput>
  }

  export type UserCreateWithoutCarsInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewCreateNestedManyWithoutHostInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    reservations?: ReservationCreateNestedManyWithoutHostInput
    calificacionesHechas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadorInput
  }

  export type UserUncheckedCreateWithoutCarsInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewUncheckedCreateNestedManyWithoutHostInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutHostInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadorInput
  }

  export type UserCreateOrConnectWithoutCarsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCarsInput, UserUncheckedCreateWithoutCarsInput>
  }

  export type CombustibleCreateWithoutCarInput = {
    id?: string
    tipoDeCombustible: string
  }

  export type CombustibleUncheckedCreateWithoutCarInput = {
    id?: string
    tipoDeCombustible: string
  }

  export type CombustibleCreateOrConnectWithoutCarInput = {
    where: CombustibleWhereUniqueInput
    create: XOR<CombustibleCreateWithoutCarInput, CombustibleUncheckedCreateWithoutCarInput>
  }

  export type CombustibleCreateManyCarInputEnvelope = {
    data: CombustibleCreateManyCarInput | CombustibleCreateManyCarInput[]
    skipDuplicates?: boolean
  }

  export type CaracteristicaAdicionalCreateWithoutCarInput = {
    id?: string
    nombre: string
  }

  export type CaracteristicaAdicionalUncheckedCreateWithoutCarInput = {
    id?: string
    nombre: string
  }

  export type CaracteristicaAdicionalCreateOrConnectWithoutCarInput = {
    where: CaracteristicaAdicionalWhereUniqueInput
    create: XOR<CaracteristicaAdicionalCreateWithoutCarInput, CaracteristicaAdicionalUncheckedCreateWithoutCarInput>
  }

  export type CaracteristicaAdicionalCreateManyCarInputEnvelope = {
    data: CaracteristicaAdicionalCreateManyCarInput | CaracteristicaAdicionalCreateManyCarInput[]
    skipDuplicates?: boolean
  }

  export type ImagenCreateWithoutCarInput = {
    id?: string
    url: string
  }

  export type ImagenUncheckedCreateWithoutCarInput = {
    id?: string
    url: string
  }

  export type ImagenCreateOrConnectWithoutCarInput = {
    where: ImagenWhereUniqueInput
    create: XOR<ImagenCreateWithoutCarInput, ImagenUncheckedCreateWithoutCarInput>
  }

  export type ImagenCreateManyCarInputEnvelope = {
    data: ImagenCreateManyCarInput | ImagenCreateManyCarInput[]
    skipDuplicates?: boolean
  }

  export type FavoritoCreateWithoutCarInput = {
    id?: string
    renter: RenterCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritoUncheckedCreateWithoutCarInput = {
    id?: string
    renterId: string
  }

  export type FavoritoCreateOrConnectWithoutCarInput = {
    where: FavoritoWhereUniqueInput
    create: XOR<FavoritoCreateWithoutCarInput, FavoritoUncheckedCreateWithoutCarInput>
  }

  export type FavoritoCreateManyCarInputEnvelope = {
    data: FavoritoCreateManyCarInput | FavoritoCreateManyCarInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutCarInput = {
    id?: string
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReservationsInput
    host: UserCreateNestedOneWithoutReservationsInput
    descuento?: DescuentoCreateNestedOneWithoutReservasInput
    reviews?: ReviewCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioCreateNestedManyWithoutReservationInput
  }

  export type ReservationUncheckedCreateWithoutCarInput = {
    id?: string
    renterId: string
    hostId: string
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutReservationInput
  }

  export type ReservationCreateOrConnectWithoutCarInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutCarInput, ReservationUncheckedCreateWithoutCarInput>
  }

  export type ReservationCreateManyCarInputEnvelope = {
    data: ReservationCreateManyCarInput | ReservationCreateManyCarInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutCarInput = {
    id?: string
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReviewsInput
    host: UserCreateNestedOneWithoutReviewsInput
    reservation: ReservationCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutCarInput = {
    id?: string
    renterId: string
    hostId: string
    reservationId: string
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutCarInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutCarInput, ReviewUncheckedCreateWithoutCarInput>
  }

  export type ReviewCreateManyCarInputEnvelope = {
    data: ReviewCreateManyCarInput | ReviewCreateManyCarInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCarsInput = {
    update: XOR<UserUpdateWithoutCarsInput, UserUncheckedUpdateWithoutCarsInput>
    create: XOR<UserCreateWithoutCarsInput, UserUncheckedCreateWithoutCarsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCarsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCarsInput, UserUncheckedUpdateWithoutCarsInput>
  }

  export type UserUpdateWithoutCarsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUpdateManyWithoutHostNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    reservations?: ReservationUpdateManyWithoutHostNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUpdateManyWithoutCalificadorNestedInput
  }

  export type UserUncheckedUpdateWithoutCarsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUncheckedUpdateManyWithoutHostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutHostNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadorNestedInput
  }

  export type CombustibleUpsertWithWhereUniqueWithoutCarInput = {
    where: CombustibleWhereUniqueInput
    update: XOR<CombustibleUpdateWithoutCarInput, CombustibleUncheckedUpdateWithoutCarInput>
    create: XOR<CombustibleCreateWithoutCarInput, CombustibleUncheckedCreateWithoutCarInput>
  }

  export type CombustibleUpdateWithWhereUniqueWithoutCarInput = {
    where: CombustibleWhereUniqueInput
    data: XOR<CombustibleUpdateWithoutCarInput, CombustibleUncheckedUpdateWithoutCarInput>
  }

  export type CombustibleUpdateManyWithWhereWithoutCarInput = {
    where: CombustibleScalarWhereInput
    data: XOR<CombustibleUpdateManyMutationInput, CombustibleUncheckedUpdateManyWithoutCarInput>
  }

  export type CombustibleScalarWhereInput = {
    AND?: CombustibleScalarWhereInput | CombustibleScalarWhereInput[]
    OR?: CombustibleScalarWhereInput[]
    NOT?: CombustibleScalarWhereInput | CombustibleScalarWhereInput[]
    id?: StringFilter<"Combustible"> | string
    tipoDeCombustible?: StringFilter<"Combustible"> | string
    carId?: StringFilter<"Combustible"> | string
  }

  export type CaracteristicaAdicionalUpsertWithWhereUniqueWithoutCarInput = {
    where: CaracteristicaAdicionalWhereUniqueInput
    update: XOR<CaracteristicaAdicionalUpdateWithoutCarInput, CaracteristicaAdicionalUncheckedUpdateWithoutCarInput>
    create: XOR<CaracteristicaAdicionalCreateWithoutCarInput, CaracteristicaAdicionalUncheckedCreateWithoutCarInput>
  }

  export type CaracteristicaAdicionalUpdateWithWhereUniqueWithoutCarInput = {
    where: CaracteristicaAdicionalWhereUniqueInput
    data: XOR<CaracteristicaAdicionalUpdateWithoutCarInput, CaracteristicaAdicionalUncheckedUpdateWithoutCarInput>
  }

  export type CaracteristicaAdicionalUpdateManyWithWhereWithoutCarInput = {
    where: CaracteristicaAdicionalScalarWhereInput
    data: XOR<CaracteristicaAdicionalUpdateManyMutationInput, CaracteristicaAdicionalUncheckedUpdateManyWithoutCarInput>
  }

  export type CaracteristicaAdicionalScalarWhereInput = {
    AND?: CaracteristicaAdicionalScalarWhereInput | CaracteristicaAdicionalScalarWhereInput[]
    OR?: CaracteristicaAdicionalScalarWhereInput[]
    NOT?: CaracteristicaAdicionalScalarWhereInput | CaracteristicaAdicionalScalarWhereInput[]
    id?: StringFilter<"CaracteristicaAdicional"> | string
    nombre?: StringFilter<"CaracteristicaAdicional"> | string
    carId?: StringFilter<"CaracteristicaAdicional"> | string
  }

  export type ImagenUpsertWithWhereUniqueWithoutCarInput = {
    where: ImagenWhereUniqueInput
    update: XOR<ImagenUpdateWithoutCarInput, ImagenUncheckedUpdateWithoutCarInput>
    create: XOR<ImagenCreateWithoutCarInput, ImagenUncheckedCreateWithoutCarInput>
  }

  export type ImagenUpdateWithWhereUniqueWithoutCarInput = {
    where: ImagenWhereUniqueInput
    data: XOR<ImagenUpdateWithoutCarInput, ImagenUncheckedUpdateWithoutCarInput>
  }

  export type ImagenUpdateManyWithWhereWithoutCarInput = {
    where: ImagenScalarWhereInput
    data: XOR<ImagenUpdateManyMutationInput, ImagenUncheckedUpdateManyWithoutCarInput>
  }

  export type ImagenScalarWhereInput = {
    AND?: ImagenScalarWhereInput | ImagenScalarWhereInput[]
    OR?: ImagenScalarWhereInput[]
    NOT?: ImagenScalarWhereInput | ImagenScalarWhereInput[]
    id?: StringFilter<"Imagen"> | string
    url?: StringFilter<"Imagen"> | string
    carId?: StringFilter<"Imagen"> | string
  }

  export type FavoritoUpsertWithWhereUniqueWithoutCarInput = {
    where: FavoritoWhereUniqueInput
    update: XOR<FavoritoUpdateWithoutCarInput, FavoritoUncheckedUpdateWithoutCarInput>
    create: XOR<FavoritoCreateWithoutCarInput, FavoritoUncheckedCreateWithoutCarInput>
  }

  export type FavoritoUpdateWithWhereUniqueWithoutCarInput = {
    where: FavoritoWhereUniqueInput
    data: XOR<FavoritoUpdateWithoutCarInput, FavoritoUncheckedUpdateWithoutCarInput>
  }

  export type FavoritoUpdateManyWithWhereWithoutCarInput = {
    where: FavoritoScalarWhereInput
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyWithoutCarInput>
  }

  export type ReservationUpsertWithWhereUniqueWithoutCarInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutCarInput, ReservationUncheckedUpdateWithoutCarInput>
    create: XOR<ReservationCreateWithoutCarInput, ReservationUncheckedCreateWithoutCarInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutCarInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutCarInput, ReservationUncheckedUpdateWithoutCarInput>
  }

  export type ReservationUpdateManyWithWhereWithoutCarInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutCarInput>
  }

  export type ReviewUpsertWithWhereUniqueWithoutCarInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutCarInput, ReviewUncheckedUpdateWithoutCarInput>
    create: XOR<ReviewCreateWithoutCarInput, ReviewUncheckedCreateWithoutCarInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutCarInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutCarInput, ReviewUncheckedUpdateWithoutCarInput>
  }

  export type ReviewUpdateManyWithWhereWithoutCarInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutCarInput>
  }

  export type RenterCreateWithoutReservationsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewCreateNestedManyWithoutRenterInput
    reports?: ReportCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadoInput
  }

  export type RenterUncheckedCreateWithoutReservationsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutRenterInput
    reports?: ReportUncheckedCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadoInput
  }

  export type RenterCreateOrConnectWithoutReservationsInput = {
    where: RenterWhereUniqueInput
    create: XOR<RenterCreateWithoutReservationsInput, RenterUncheckedCreateWithoutReservationsInput>
  }

  export type UserCreateWithoutReservationsInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewCreateNestedManyWithoutHostInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    cars?: CarCreateNestedManyWithoutUserInput
    calificacionesHechas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadorInput
  }

  export type UserUncheckedCreateWithoutReservationsInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewUncheckedCreateNestedManyWithoutHostInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    cars?: CarUncheckedCreateNestedManyWithoutUserInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadorInput
  }

  export type UserCreateOrConnectWithoutReservationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
  }

  export type CarCreateWithoutReservationsInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCarsInput
    combustibles?: CombustibleCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalCreateNestedManyWithoutCarInput
    imagenes?: ImagenCreateNestedManyWithoutCarInput
    favoritos?: FavoritoCreateNestedManyWithoutCarInput
    reviews?: ReviewCreateNestedManyWithoutCarInput
  }

  export type CarUncheckedCreateWithoutReservationsInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    combustibles?: CombustibleUncheckedCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalUncheckedCreateNestedManyWithoutCarInput
    imagenes?: ImagenUncheckedCreateNestedManyWithoutCarInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutCarInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCarInput
  }

  export type CarCreateOrConnectWithoutReservationsInput = {
    where: CarWhereUniqueInput
    create: XOR<CarCreateWithoutReservationsInput, CarUncheckedCreateWithoutReservationsInput>
  }

  export type DescuentoCreateWithoutReservasInput = {
    id?: string
    fecha: Date | string
    porcentaje: number
  }

  export type DescuentoUncheckedCreateWithoutReservasInput = {
    id?: string
    fecha: Date | string
    porcentaje: number
  }

  export type DescuentoCreateOrConnectWithoutReservasInput = {
    where: DescuentoWhereUniqueInput
    create: XOR<DescuentoCreateWithoutReservasInput, DescuentoUncheckedCreateWithoutReservasInput>
  }

  export type ReviewCreateWithoutReservationInput = {
    id?: string
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReviewsInput
    host: UserCreateNestedOneWithoutReviewsInput
    car?: CarCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutReservationInput = {
    id?: string
    renterId: string
    hostId: string
    carId?: string | null
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutReservationInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutReservationInput, ReviewUncheckedCreateWithoutReservationInput>
  }

  export type ReviewCreateManyReservationInputEnvelope = {
    data: ReviewCreateManyReservationInput | ReviewCreateManyReservationInput[]
    skipDuplicates?: boolean
  }

  export type CalificacionHostUsuarioCreateWithoutReservationInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    fechaCreacion?: Date | string
    calificador: UserCreateNestedOneWithoutCalificacionesHechasInput
    calificado: RenterCreateNestedOneWithoutCalificacionesRecibidasInput
  }

  export type CalificacionHostUsuarioUncheckedCreateWithoutReservationInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    calificadorId: string
    calificadoId: string
    fechaCreacion?: Date | string
  }

  export type CalificacionHostUsuarioCreateOrConnectWithoutReservationInput = {
    where: CalificacionHostUsuarioWhereUniqueInput
    create: XOR<CalificacionHostUsuarioCreateWithoutReservationInput, CalificacionHostUsuarioUncheckedCreateWithoutReservationInput>
  }

  export type CalificacionHostUsuarioCreateManyReservationInputEnvelope = {
    data: CalificacionHostUsuarioCreateManyReservationInput | CalificacionHostUsuarioCreateManyReservationInput[]
    skipDuplicates?: boolean
  }

  export type RenterUpsertWithoutReservationsInput = {
    update: XOR<RenterUpdateWithoutReservationsInput, RenterUncheckedUpdateWithoutReservationsInput>
    create: XOR<RenterCreateWithoutReservationsInput, RenterUncheckedCreateWithoutReservationsInput>
    where?: RenterWhereInput
  }

  export type RenterUpdateToOneWithWhereWithoutReservationsInput = {
    where?: RenterWhereInput
    data: XOR<RenterUpdateWithoutReservationsInput, RenterUncheckedUpdateWithoutReservationsInput>
  }

  export type RenterUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUpdateManyWithoutRenterNestedInput
    reports?: ReportUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUpdateManyWithoutCalificadoNestedInput
  }

  export type RenterUncheckedUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutRenterNestedInput
    reports?: ReportUncheckedUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadoNestedInput
  }

  export type UserUpsertWithoutReservationsInput = {
    update: XOR<UserUpdateWithoutReservationsInput, UserUncheckedUpdateWithoutReservationsInput>
    create: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservationsInput, UserUncheckedUpdateWithoutReservationsInput>
  }

  export type UserUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUpdateManyWithoutHostNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    cars?: CarUpdateManyWithoutUserNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUpdateManyWithoutCalificadorNestedInput
  }

  export type UserUncheckedUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUncheckedUpdateManyWithoutHostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    cars?: CarUncheckedUpdateManyWithoutUserNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadorNestedInput
  }

  export type CarUpsertWithoutReservationsInput = {
    update: XOR<CarUpdateWithoutReservationsInput, CarUncheckedUpdateWithoutReservationsInput>
    create: XOR<CarCreateWithoutReservationsInput, CarUncheckedCreateWithoutReservationsInput>
    where?: CarWhereInput
  }

  export type CarUpdateToOneWithWhereWithoutReservationsInput = {
    where?: CarWhereInput
    data: XOR<CarUpdateWithoutReservationsInput, CarUncheckedUpdateWithoutReservationsInput>
  }

  export type CarUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCarsNestedInput
    combustibles?: CombustibleUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUpdateManyWithoutCarNestedInput
    reviews?: ReviewUpdateManyWithoutCarNestedInput
  }

  export type CarUncheckedUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    combustibles?: CombustibleUncheckedUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUncheckedUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUncheckedUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutCarNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCarNestedInput
  }

  export type DescuentoUpsertWithoutReservasInput = {
    update: XOR<DescuentoUpdateWithoutReservasInput, DescuentoUncheckedUpdateWithoutReservasInput>
    create: XOR<DescuentoCreateWithoutReservasInput, DescuentoUncheckedCreateWithoutReservasInput>
    where?: DescuentoWhereInput
  }

  export type DescuentoUpdateToOneWithWhereWithoutReservasInput = {
    where?: DescuentoWhereInput
    data: XOR<DescuentoUpdateWithoutReservasInput, DescuentoUncheckedUpdateWithoutReservasInput>
  }

  export type DescuentoUpdateWithoutReservasInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje?: FloatFieldUpdateOperationsInput | number
  }

  export type DescuentoUncheckedUpdateWithoutReservasInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    porcentaje?: FloatFieldUpdateOperationsInput | number
  }

  export type ReviewUpsertWithWhereUniqueWithoutReservationInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutReservationInput, ReviewUncheckedUpdateWithoutReservationInput>
    create: XOR<ReviewCreateWithoutReservationInput, ReviewUncheckedCreateWithoutReservationInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutReservationInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutReservationInput, ReviewUncheckedUpdateWithoutReservationInput>
  }

  export type ReviewUpdateManyWithWhereWithoutReservationInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutReservationInput>
  }

  export type CalificacionHostUsuarioUpsertWithWhereUniqueWithoutReservationInput = {
    where: CalificacionHostUsuarioWhereUniqueInput
    update: XOR<CalificacionHostUsuarioUpdateWithoutReservationInput, CalificacionHostUsuarioUncheckedUpdateWithoutReservationInput>
    create: XOR<CalificacionHostUsuarioCreateWithoutReservationInput, CalificacionHostUsuarioUncheckedCreateWithoutReservationInput>
  }

  export type CalificacionHostUsuarioUpdateWithWhereUniqueWithoutReservationInput = {
    where: CalificacionHostUsuarioWhereUniqueInput
    data: XOR<CalificacionHostUsuarioUpdateWithoutReservationInput, CalificacionHostUsuarioUncheckedUpdateWithoutReservationInput>
  }

  export type CalificacionHostUsuarioUpdateManyWithWhereWithoutReservationInput = {
    where: CalificacionHostUsuarioScalarWhereInput
    data: XOR<CalificacionHostUsuarioUpdateManyMutationInput, CalificacionHostUsuarioUncheckedUpdateManyWithoutReservationInput>
  }

  export type RenterCreateWithoutReviewsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reports?: ReportCreateNestedManyWithoutRenterInput
    reservations?: ReservationCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadoInput
  }

  export type RenterUncheckedCreateWithoutReviewsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reports?: ReportUncheckedCreateNestedManyWithoutRenterInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadoInput
  }

  export type RenterCreateOrConnectWithoutReviewsInput = {
    where: RenterWhereUniqueInput
    create: XOR<RenterCreateWithoutReviewsInput, RenterUncheckedCreateWithoutReviewsInput>
  }

  export type UserCreateWithoutReviewsInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reports?: ReportCreateNestedManyWithoutReporterInput
    reservations?: ReservationCreateNestedManyWithoutHostInput
    cars?: CarCreateNestedManyWithoutUserInput
    calificacionesHechas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadorInput
  }

  export type UserUncheckedCreateWithoutReviewsInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutHostInput
    cars?: CarUncheckedCreateNestedManyWithoutUserInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadorInput
  }

  export type UserCreateOrConnectWithoutReviewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
  }

  export type ReservationCreateWithoutReviewsInput = {
    id?: string
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReservationsInput
    host: UserCreateNestedOneWithoutReservationsInput
    car?: CarCreateNestedOneWithoutReservationsInput
    descuento?: DescuentoCreateNestedOneWithoutReservasInput
    calificaciones?: CalificacionHostUsuarioCreateNestedManyWithoutReservationInput
  }

  export type ReservationUncheckedCreateWithoutReviewsInput = {
    id?: string
    renterId: string
    hostId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calificaciones?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutReservationInput
  }

  export type ReservationCreateOrConnectWithoutReviewsInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutReviewsInput, ReservationUncheckedCreateWithoutReviewsInput>
  }

  export type CarCreateWithoutReviewsInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCarsInput
    combustibles?: CombustibleCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalCreateNestedManyWithoutCarInput
    imagenes?: ImagenCreateNestedManyWithoutCarInput
    favoritos?: FavoritoCreateNestedManyWithoutCarInput
    reservations?: ReservationCreateNestedManyWithoutCarInput
  }

  export type CarUncheckedCreateWithoutReviewsInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    combustibles?: CombustibleUncheckedCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalUncheckedCreateNestedManyWithoutCarInput
    imagenes?: ImagenUncheckedCreateNestedManyWithoutCarInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutCarInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCarInput
  }

  export type CarCreateOrConnectWithoutReviewsInput = {
    where: CarWhereUniqueInput
    create: XOR<CarCreateWithoutReviewsInput, CarUncheckedCreateWithoutReviewsInput>
  }

  export type RenterUpsertWithoutReviewsInput = {
    update: XOR<RenterUpdateWithoutReviewsInput, RenterUncheckedUpdateWithoutReviewsInput>
    create: XOR<RenterCreateWithoutReviewsInput, RenterUncheckedCreateWithoutReviewsInput>
    where?: RenterWhereInput
  }

  export type RenterUpdateToOneWithWhereWithoutReviewsInput = {
    where?: RenterWhereInput
    data: XOR<RenterUpdateWithoutReviewsInput, RenterUncheckedUpdateWithoutReviewsInput>
  }

  export type RenterUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reports?: ReportUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUpdateManyWithoutCalificadoNestedInput
  }

  export type RenterUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reports?: ReportUncheckedUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadoNestedInput
  }

  export type UserUpsertWithoutReviewsInput = {
    update: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reports?: ReportUpdateManyWithoutReporterNestedInput
    reservations?: ReservationUpdateManyWithoutHostNestedInput
    cars?: CarUpdateManyWithoutUserNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUpdateManyWithoutCalificadorNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutHostNestedInput
    cars?: CarUncheckedUpdateManyWithoutUserNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadorNestedInput
  }

  export type ReservationUpsertWithoutReviewsInput = {
    update: XOR<ReservationUpdateWithoutReviewsInput, ReservationUncheckedUpdateWithoutReviewsInput>
    create: XOR<ReservationCreateWithoutReviewsInput, ReservationUncheckedCreateWithoutReviewsInput>
    where?: ReservationWhereInput
  }

  export type ReservationUpdateToOneWithWhereWithoutReviewsInput = {
    where?: ReservationWhereInput
    data: XOR<ReservationUpdateWithoutReviewsInput, ReservationUncheckedUpdateWithoutReviewsInput>
  }

  export type ReservationUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReservationsNestedInput
    host?: UserUpdateOneRequiredWithoutReservationsNestedInput
    car?: CarUpdateOneWithoutReservationsNestedInput
    descuento?: DescuentoUpdateOneWithoutReservasNestedInput
    calificaciones?: CalificacionHostUsuarioUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calificaciones?: CalificacionHostUsuarioUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type CarUpsertWithoutReviewsInput = {
    update: XOR<CarUpdateWithoutReviewsInput, CarUncheckedUpdateWithoutReviewsInput>
    create: XOR<CarCreateWithoutReviewsInput, CarUncheckedCreateWithoutReviewsInput>
    where?: CarWhereInput
  }

  export type CarUpdateToOneWithWhereWithoutReviewsInput = {
    where?: CarWhereInput
    data: XOR<CarUpdateWithoutReviewsInput, CarUncheckedUpdateWithoutReviewsInput>
  }

  export type CarUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCarsNestedInput
    combustibles?: CombustibleUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUpdateManyWithoutCarNestedInput
    reservations?: ReservationUpdateManyWithoutCarNestedInput
  }

  export type CarUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    combustibles?: CombustibleUncheckedUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUncheckedUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUncheckedUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutCarNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCarNestedInput
  }

  export type RenterCreateWithoutReportsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewCreateNestedManyWithoutRenterInput
    reservations?: ReservationCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadoInput
  }

  export type RenterUncheckedCreateWithoutReportsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutRenterInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadoInput
  }

  export type RenterCreateOrConnectWithoutReportsInput = {
    where: RenterWhereUniqueInput
    create: XOR<RenterCreateWithoutReportsInput, RenterUncheckedCreateWithoutReportsInput>
  }

  export type UserCreateWithoutReportsInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewCreateNestedManyWithoutHostInput
    reservations?: ReservationCreateNestedManyWithoutHostInput
    cars?: CarCreateNestedManyWithoutUserInput
    calificacionesHechas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadorInput
  }

  export type UserUncheckedCreateWithoutReportsInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewUncheckedCreateNestedManyWithoutHostInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutHostInput
    cars?: CarUncheckedCreateNestedManyWithoutUserInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadorInput
  }

  export type UserCreateOrConnectWithoutReportsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
  }

  export type RenterUpsertWithoutReportsInput = {
    update: XOR<RenterUpdateWithoutReportsInput, RenterUncheckedUpdateWithoutReportsInput>
    create: XOR<RenterCreateWithoutReportsInput, RenterUncheckedCreateWithoutReportsInput>
    where?: RenterWhereInput
  }

  export type RenterUpdateToOneWithWhereWithoutReportsInput = {
    where?: RenterWhereInput
    data: XOR<RenterUpdateWithoutReportsInput, RenterUncheckedUpdateWithoutReportsInput>
  }

  export type RenterUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUpdateManyWithoutCalificadoNestedInput
  }

  export type RenterUncheckedUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadoNestedInput
  }

  export type UserUpsertWithoutReportsInput = {
    update: XOR<UserUpdateWithoutReportsInput, UserUncheckedUpdateWithoutReportsInput>
    create: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReportsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReportsInput, UserUncheckedUpdateWithoutReportsInput>
  }

  export type UserUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUpdateManyWithoutHostNestedInput
    reservations?: ReservationUpdateManyWithoutHostNestedInput
    cars?: CarUpdateManyWithoutUserNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUpdateManyWithoutCalificadorNestedInput
  }

  export type UserUncheckedUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUncheckedUpdateManyWithoutHostNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutHostNestedInput
    cars?: CarUncheckedUpdateManyWithoutUserNestedInput
    calificacionesHechas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadorNestedInput
  }

  export type CarCreateWithoutCombustiblesInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCarsInput
    caracteristicas?: CaracteristicaAdicionalCreateNestedManyWithoutCarInput
    imagenes?: ImagenCreateNestedManyWithoutCarInput
    favoritos?: FavoritoCreateNestedManyWithoutCarInput
    reservations?: ReservationCreateNestedManyWithoutCarInput
    reviews?: ReviewCreateNestedManyWithoutCarInput
  }

  export type CarUncheckedCreateWithoutCombustiblesInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    caracteristicas?: CaracteristicaAdicionalUncheckedCreateNestedManyWithoutCarInput
    imagenes?: ImagenUncheckedCreateNestedManyWithoutCarInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutCarInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCarInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCarInput
  }

  export type CarCreateOrConnectWithoutCombustiblesInput = {
    where: CarWhereUniqueInput
    create: XOR<CarCreateWithoutCombustiblesInput, CarUncheckedCreateWithoutCombustiblesInput>
  }

  export type CarUpsertWithoutCombustiblesInput = {
    update: XOR<CarUpdateWithoutCombustiblesInput, CarUncheckedUpdateWithoutCombustiblesInput>
    create: XOR<CarCreateWithoutCombustiblesInput, CarUncheckedCreateWithoutCombustiblesInput>
    where?: CarWhereInput
  }

  export type CarUpdateToOneWithWhereWithoutCombustiblesInput = {
    where?: CarWhereInput
    data: XOR<CarUpdateWithoutCombustiblesInput, CarUncheckedUpdateWithoutCombustiblesInput>
  }

  export type CarUpdateWithoutCombustiblesInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCarsNestedInput
    caracteristicas?: CaracteristicaAdicionalUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUpdateManyWithoutCarNestedInput
    reservations?: ReservationUpdateManyWithoutCarNestedInput
    reviews?: ReviewUpdateManyWithoutCarNestedInput
  }

  export type CarUncheckedUpdateWithoutCombustiblesInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    caracteristicas?: CaracteristicaAdicionalUncheckedUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUncheckedUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutCarNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCarNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCarNestedInput
  }

  export type CarCreateWithoutCaracteristicasInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCarsInput
    combustibles?: CombustibleCreateNestedManyWithoutCarInput
    imagenes?: ImagenCreateNestedManyWithoutCarInput
    favoritos?: FavoritoCreateNestedManyWithoutCarInput
    reservations?: ReservationCreateNestedManyWithoutCarInput
    reviews?: ReviewCreateNestedManyWithoutCarInput
  }

  export type CarUncheckedCreateWithoutCaracteristicasInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    combustibles?: CombustibleUncheckedCreateNestedManyWithoutCarInput
    imagenes?: ImagenUncheckedCreateNestedManyWithoutCarInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutCarInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCarInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCarInput
  }

  export type CarCreateOrConnectWithoutCaracteristicasInput = {
    where: CarWhereUniqueInput
    create: XOR<CarCreateWithoutCaracteristicasInput, CarUncheckedCreateWithoutCaracteristicasInput>
  }

  export type CarUpsertWithoutCaracteristicasInput = {
    update: XOR<CarUpdateWithoutCaracteristicasInput, CarUncheckedUpdateWithoutCaracteristicasInput>
    create: XOR<CarCreateWithoutCaracteristicasInput, CarUncheckedCreateWithoutCaracteristicasInput>
    where?: CarWhereInput
  }

  export type CarUpdateToOneWithWhereWithoutCaracteristicasInput = {
    where?: CarWhereInput
    data: XOR<CarUpdateWithoutCaracteristicasInput, CarUncheckedUpdateWithoutCaracteristicasInput>
  }

  export type CarUpdateWithoutCaracteristicasInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCarsNestedInput
    combustibles?: CombustibleUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUpdateManyWithoutCarNestedInput
    reservations?: ReservationUpdateManyWithoutCarNestedInput
    reviews?: ReviewUpdateManyWithoutCarNestedInput
  }

  export type CarUncheckedUpdateWithoutCaracteristicasInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    combustibles?: CombustibleUncheckedUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUncheckedUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutCarNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCarNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCarNestedInput
  }

  export type CarCreateWithoutImagenesInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCarsInput
    combustibles?: CombustibleCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalCreateNestedManyWithoutCarInput
    favoritos?: FavoritoCreateNestedManyWithoutCarInput
    reservations?: ReservationCreateNestedManyWithoutCarInput
    reviews?: ReviewCreateNestedManyWithoutCarInput
  }

  export type CarUncheckedCreateWithoutImagenesInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    combustibles?: CombustibleUncheckedCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalUncheckedCreateNestedManyWithoutCarInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutCarInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCarInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCarInput
  }

  export type CarCreateOrConnectWithoutImagenesInput = {
    where: CarWhereUniqueInput
    create: XOR<CarCreateWithoutImagenesInput, CarUncheckedCreateWithoutImagenesInput>
  }

  export type CarUpsertWithoutImagenesInput = {
    update: XOR<CarUpdateWithoutImagenesInput, CarUncheckedUpdateWithoutImagenesInput>
    create: XOR<CarCreateWithoutImagenesInput, CarUncheckedCreateWithoutImagenesInput>
    where?: CarWhereInput
  }

  export type CarUpdateToOneWithWhereWithoutImagenesInput = {
    where?: CarWhereInput
    data: XOR<CarUpdateWithoutImagenesInput, CarUncheckedUpdateWithoutImagenesInput>
  }

  export type CarUpdateWithoutImagenesInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCarsNestedInput
    combustibles?: CombustibleUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUpdateManyWithoutCarNestedInput
    reservations?: ReservationUpdateManyWithoutCarNestedInput
    reviews?: ReviewUpdateManyWithoutCarNestedInput
  }

  export type CarUncheckedUpdateWithoutImagenesInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    combustibles?: CombustibleUncheckedUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUncheckedUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutCarNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCarNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCarNestedInput
  }

  export type RenterCreateWithoutFavoritosInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewCreateNestedManyWithoutRenterInput
    reports?: ReportCreateNestedManyWithoutRenterInput
    reservations?: ReservationCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioCreateNestedManyWithoutCalificadoInput
  }

  export type RenterUncheckedCreateWithoutFavoritosInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutRenterInput
    reports?: ReportUncheckedCreateNestedManyWithoutRenterInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRenterInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutCalificadoInput
  }

  export type RenterCreateOrConnectWithoutFavoritosInput = {
    where: RenterWhereUniqueInput
    create: XOR<RenterCreateWithoutFavoritosInput, RenterUncheckedCreateWithoutFavoritosInput>
  }

  export type CarCreateWithoutFavoritosInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCarsInput
    combustibles?: CombustibleCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalCreateNestedManyWithoutCarInput
    imagenes?: ImagenCreateNestedManyWithoutCarInput
    reservations?: ReservationCreateNestedManyWithoutCarInput
    reviews?: ReviewCreateNestedManyWithoutCarInput
  }

  export type CarUncheckedCreateWithoutFavoritosInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    combustibles?: CombustibleUncheckedCreateNestedManyWithoutCarInput
    caracteristicas?: CaracteristicaAdicionalUncheckedCreateNestedManyWithoutCarInput
    imagenes?: ImagenUncheckedCreateNestedManyWithoutCarInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCarInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutCarInput
  }

  export type CarCreateOrConnectWithoutFavoritosInput = {
    where: CarWhereUniqueInput
    create: XOR<CarCreateWithoutFavoritosInput, CarUncheckedCreateWithoutFavoritosInput>
  }

  export type RenterUpsertWithoutFavoritosInput = {
    update: XOR<RenterUpdateWithoutFavoritosInput, RenterUncheckedUpdateWithoutFavoritosInput>
    create: XOR<RenterCreateWithoutFavoritosInput, RenterUncheckedCreateWithoutFavoritosInput>
    where?: RenterWhereInput
  }

  export type RenterUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: RenterWhereInput
    data: XOR<RenterUpdateWithoutFavoritosInput, RenterUncheckedUpdateWithoutFavoritosInput>
  }

  export type RenterUpdateWithoutFavoritosInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUpdateManyWithoutRenterNestedInput
    reports?: ReportUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUpdateManyWithoutCalificadoNestedInput
  }

  export type RenterUncheckedUpdateWithoutFavoritosInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutRenterNestedInput
    reports?: ReportUncheckedUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRenterNestedInput
    calificacionesRecibidas?: CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadoNestedInput
  }

  export type CarUpsertWithoutFavoritosInput = {
    update: XOR<CarUpdateWithoutFavoritosInput, CarUncheckedUpdateWithoutFavoritosInput>
    create: XOR<CarCreateWithoutFavoritosInput, CarUncheckedCreateWithoutFavoritosInput>
    where?: CarWhereInput
  }

  export type CarUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: CarWhereInput
    data: XOR<CarUpdateWithoutFavoritosInput, CarUncheckedUpdateWithoutFavoritosInput>
  }

  export type CarUpdateWithoutFavoritosInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCarsNestedInput
    combustibles?: CombustibleUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUpdateManyWithoutCarNestedInput
    reservations?: ReservationUpdateManyWithoutCarNestedInput
    reviews?: ReviewUpdateManyWithoutCarNestedInput
  }

  export type CarUncheckedUpdateWithoutFavoritosInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    combustibles?: CombustibleUncheckedUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUncheckedUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUncheckedUpdateManyWithoutCarNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCarNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCarNestedInput
  }

  export type ReservationCreateWithoutDescuentoInput = {
    id?: string
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReservationsInput
    host: UserCreateNestedOneWithoutReservationsInput
    car?: CarCreateNestedOneWithoutReservationsInput
    reviews?: ReviewCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioCreateNestedManyWithoutReservationInput
  }

  export type ReservationUncheckedCreateWithoutDescuentoInput = {
    id?: string
    renterId: string
    hostId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutReservationInput
    calificaciones?: CalificacionHostUsuarioUncheckedCreateNestedManyWithoutReservationInput
  }

  export type ReservationCreateOrConnectWithoutDescuentoInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutDescuentoInput, ReservationUncheckedCreateWithoutDescuentoInput>
  }

  export type ReservationCreateManyDescuentoInputEnvelope = {
    data: ReservationCreateManyDescuentoInput | ReservationCreateManyDescuentoInput[]
    skipDuplicates?: boolean
  }

  export type ReservationUpsertWithWhereUniqueWithoutDescuentoInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutDescuentoInput, ReservationUncheckedUpdateWithoutDescuentoInput>
    create: XOR<ReservationCreateWithoutDescuentoInput, ReservationUncheckedCreateWithoutDescuentoInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutDescuentoInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutDescuentoInput, ReservationUncheckedUpdateWithoutDescuentoInput>
  }

  export type ReservationUpdateManyWithWhereWithoutDescuentoInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutDescuentoInput>
  }

  export type ReservationCreateWithoutCalificacionesInput = {
    id?: string
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    createdAt?: Date | string
    updatedAt?: Date | string
    renter: RenterCreateNestedOneWithoutReservationsInput
    host: UserCreateNestedOneWithoutReservationsInput
    car?: CarCreateNestedOneWithoutReservationsInput
    descuento?: DescuentoCreateNestedOneWithoutReservasInput
    reviews?: ReviewCreateNestedManyWithoutReservationInput
  }

  export type ReservationUncheckedCreateWithoutCalificacionesInput = {
    id?: string
    renterId: string
    hostId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutReservationInput
  }

  export type ReservationCreateOrConnectWithoutCalificacionesInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutCalificacionesInput, ReservationUncheckedCreateWithoutCalificacionesInput>
  }

  export type UserCreateWithoutCalificacionesHechasInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewCreateNestedManyWithoutHostInput
    reports?: ReportCreateNestedManyWithoutReporterInput
    reservations?: ReservationCreateNestedManyWithoutHostInput
    cars?: CarCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCalificacionesHechasInput = {
    id?: string
    nombre?: string | null
    email: string
    password?: string | null
    googleId?: string | null
    image?: string | null
    telefono?: string | null
    genero?: $Enums.Genero | null
    fechaNacimiento?: Date | string | null
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role?: $Enums.UserRole
    reviews?: ReviewUncheckedCreateNestedManyWithoutHostInput
    reports?: ReportUncheckedCreateNestedManyWithoutReporterInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutHostInput
    cars?: CarUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCalificacionesHechasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCalificacionesHechasInput, UserUncheckedCreateWithoutCalificacionesHechasInput>
  }

  export type RenterCreateWithoutCalificacionesRecibidasInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewCreateNestedManyWithoutRenterInput
    reports?: ReportCreateNestedManyWithoutRenterInput
    reservations?: ReservationCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoCreateNestedManyWithoutRenterInput
  }

  export type RenterUncheckedCreateWithoutCalificacionesRecibidasInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    occupation?: string | null
    address?: string | null
    age?: number | null
    profilePicture?: string | null
    rating?: number
    memberSince?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutRenterInput
    reports?: ReportUncheckedCreateNestedManyWithoutRenterInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutRenterInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutRenterInput
  }

  export type RenterCreateOrConnectWithoutCalificacionesRecibidasInput = {
    where: RenterWhereUniqueInput
    create: XOR<RenterCreateWithoutCalificacionesRecibidasInput, RenterUncheckedCreateWithoutCalificacionesRecibidasInput>
  }

  export type ReservationUpsertWithoutCalificacionesInput = {
    update: XOR<ReservationUpdateWithoutCalificacionesInput, ReservationUncheckedUpdateWithoutCalificacionesInput>
    create: XOR<ReservationCreateWithoutCalificacionesInput, ReservationUncheckedCreateWithoutCalificacionesInput>
    where?: ReservationWhereInput
  }

  export type ReservationUpdateToOneWithWhereWithoutCalificacionesInput = {
    where?: ReservationWhereInput
    data: XOR<ReservationUpdateWithoutCalificacionesInput, ReservationUncheckedUpdateWithoutCalificacionesInput>
  }

  export type ReservationUpdateWithoutCalificacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReservationsNestedInput
    host?: UserUpdateOneRequiredWithoutReservationsNestedInput
    car?: CarUpdateOneWithoutReservationsNestedInput
    descuento?: DescuentoUpdateOneWithoutReservasNestedInput
    reviews?: ReviewUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateWithoutCalificacionesInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type UserUpsertWithoutCalificacionesHechasInput = {
    update: XOR<UserUpdateWithoutCalificacionesHechasInput, UserUncheckedUpdateWithoutCalificacionesHechasInput>
    create: XOR<UserCreateWithoutCalificacionesHechasInput, UserUncheckedCreateWithoutCalificacionesHechasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCalificacionesHechasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCalificacionesHechasInput, UserUncheckedUpdateWithoutCalificacionesHechasInput>
  }

  export type UserUpdateWithoutCalificacionesHechasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUpdateManyWithoutHostNestedInput
    reports?: ReportUpdateManyWithoutReporterNestedInput
    reservations?: ReservationUpdateManyWithoutHostNestedInput
    cars?: CarUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCalificacionesHechasInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableEnumGeneroFieldUpdateOperationsInput | $Enums.Genero | null
    fechaNacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    reviews?: ReviewUncheckedUpdateManyWithoutHostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutReporterNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutHostNestedInput
    cars?: CarUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RenterUpsertWithoutCalificacionesRecibidasInput = {
    update: XOR<RenterUpdateWithoutCalificacionesRecibidasInput, RenterUncheckedUpdateWithoutCalificacionesRecibidasInput>
    create: XOR<RenterCreateWithoutCalificacionesRecibidasInput, RenterUncheckedCreateWithoutCalificacionesRecibidasInput>
    where?: RenterWhereInput
  }

  export type RenterUpdateToOneWithWhereWithoutCalificacionesRecibidasInput = {
    where?: RenterWhereInput
    data: XOR<RenterUpdateWithoutCalificacionesRecibidasInput, RenterUncheckedUpdateWithoutCalificacionesRecibidasInput>
  }

  export type RenterUpdateWithoutCalificacionesRecibidasInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUpdateManyWithoutRenterNestedInput
    reports?: ReportUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUpdateManyWithoutRenterNestedInput
  }

  export type RenterUncheckedUpdateWithoutCalificacionesRecibidasInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    profilePicture?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    memberSince?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutRenterNestedInput
    reports?: ReportUncheckedUpdateManyWithoutRenterNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutRenterNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutRenterNestedInput
  }

  export type ReviewCreateManyHostInput = {
    id?: string
    renterId: string
    reservationId: string
    carId?: string | null
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReportCreateManyReporterInput = {
    id?: string
    renterId: string
    reason: string
    additionalInfo?: string | null
    status?: $Enums.EstadoReporte
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReservationCreateManyHostInput = {
    id?: string
    renterId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CarCreateManyUserInput = {
    id?: string
    vin?: string | null
    año: number
    marca: string
    modelo: string
    placa: string
    asientos?: number | null
    puertas?: number | null
    soat?: boolean | null
    precioPorDia: number
    numMantenimientos?: number | null
    transmision?: string | null
    estado?: $Enums.CarStatus
    direccion?: string | null
    ciudad?: string | null
    provincia?: string | null
    pais?: string | null
    color: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CalificacionHostUsuarioCreateManyCalificadorInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    reservationId: string
    calificadoId: string
    fechaCreacion?: Date | string
  }

  export type ReviewUpdateWithoutHostInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReviewsNestedInput
    reservation?: ReservationUpdateOneRequiredWithoutReviewsNestedInput
    car?: CarUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutHostInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    reservationId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutHostInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    reservationId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportUpdateWithoutReporterInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReportsNestedInput
  }

  export type ReportUncheckedUpdateWithoutReporterInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportUncheckedUpdateManyWithoutReporterInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationUpdateWithoutHostInput = {
    id?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReservationsNestedInput
    car?: CarUpdateOneWithoutReservationsNestedInput
    descuento?: DescuentoUpdateOneWithoutReservasNestedInput
    reviews?: ReviewUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateWithoutHostInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateManyWithoutHostInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CarUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    combustibles?: CombustibleUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUpdateManyWithoutCarNestedInput
    reservations?: ReservationUpdateManyWithoutCarNestedInput
    reviews?: ReviewUpdateManyWithoutCarNestedInput
  }

  export type CarUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    combustibles?: CombustibleUncheckedUpdateManyWithoutCarNestedInput
    caracteristicas?: CaracteristicaAdicionalUncheckedUpdateManyWithoutCarNestedInput
    imagenes?: ImagenUncheckedUpdateManyWithoutCarNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutCarNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCarNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutCarNestedInput
  }

  export type CarUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    vin?: NullableStringFieldUpdateOperationsInput | string | null
    año?: IntFieldUpdateOperationsInput | number
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    placa?: StringFieldUpdateOperationsInput | string
    asientos?: NullableIntFieldUpdateOperationsInput | number | null
    puertas?: NullableIntFieldUpdateOperationsInput | number | null
    soat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    precioPorDia?: FloatFieldUpdateOperationsInput | number
    numMantenimientos?: NullableIntFieldUpdateOperationsInput | number | null
    transmision?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumCarStatusFieldUpdateOperationsInput | $Enums.CarStatus
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    provincia?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionHostUsuarioUpdateWithoutCalificadorInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reservation?: ReservationUpdateOneRequiredWithoutCalificacionesNestedInput
    calificado?: RenterUpdateOneRequiredWithoutCalificacionesRecibidasNestedInput
  }

  export type CalificacionHostUsuarioUncheckedUpdateWithoutCalificadorInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    reservationId?: StringFieldUpdateOperationsInput | string
    calificadoId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadorInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    reservationId?: StringFieldUpdateOperationsInput | string
    calificadoId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateManyRenterInput = {
    id?: string
    hostId: string
    reservationId: string
    carId?: string | null
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReportCreateManyRenterInput = {
    id?: string
    reporterId: string
    reason: string
    additionalInfo?: string | null
    status?: $Enums.EstadoReporte
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReservationCreateManyRenterInput = {
    id?: string
    hostId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FavoritoCreateManyRenterInput = {
    id?: string
    carId: string
  }

  export type CalificacionHostUsuarioCreateManyCalificadoInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    reservationId: string
    calificadorId: string
    fechaCreacion?: Date | string
  }

  export type ReviewUpdateWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    host?: UserUpdateOneRequiredWithoutReviewsNestedInput
    reservation?: ReservationUpdateOneRequiredWithoutReviewsNestedInput
    car?: CarUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    reservationId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    reservationId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportUpdateWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reporter?: UserUpdateOneRequiredWithoutReportsNestedInput
  }

  export type ReportUncheckedUpdateWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportUncheckedUpdateManyWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    additionalInfo?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumEstadoReporteFieldUpdateOperationsInput | $Enums.EstadoReporte
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationUpdateWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    host?: UserUpdateOneRequiredWithoutReservationsNestedInput
    car?: CarUpdateOneWithoutReservationsNestedInput
    descuento?: DescuentoUpdateOneWithoutReservasNestedInput
    reviews?: ReviewUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateManyWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritoUpdateWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    car?: CarUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritoUncheckedUpdateWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoUncheckedUpdateManyWithoutRenterInput = {
    id?: StringFieldUpdateOperationsInput | string
    carId?: StringFieldUpdateOperationsInput | string
  }

  export type CalificacionHostUsuarioUpdateWithoutCalificadoInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reservation?: ReservationUpdateOneRequiredWithoutCalificacionesNestedInput
    calificador?: UserUpdateOneRequiredWithoutCalificacionesHechasNestedInput
  }

  export type CalificacionHostUsuarioUncheckedUpdateWithoutCalificadoInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    reservationId?: StringFieldUpdateOperationsInput | string
    calificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionHostUsuarioUncheckedUpdateManyWithoutCalificadoInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    reservationId?: StringFieldUpdateOperationsInput | string
    calificadorId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CombustibleCreateManyCarInput = {
    id?: string
    tipoDeCombustible: string
  }

  export type CaracteristicaAdicionalCreateManyCarInput = {
    id?: string
    nombre: string
  }

  export type ImagenCreateManyCarInput = {
    id?: string
    url: string
  }

  export type FavoritoCreateManyCarInput = {
    id?: string
    renterId: string
  }

  export type ReservationCreateManyCarInput = {
    id?: string
    renterId: string
    hostId: string
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    descuentoId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateManyCarInput = {
    id?: string
    renterId: string
    hostId: string
    reservationId: string
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CombustibleUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeCombustible?: StringFieldUpdateOperationsInput | string
  }

  export type CombustibleUncheckedUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeCombustible?: StringFieldUpdateOperationsInput | string
  }

  export type CombustibleUncheckedUpdateManyWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipoDeCombustible?: StringFieldUpdateOperationsInput | string
  }

  export type CaracteristicaAdicionalUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CaracteristicaAdicionalUncheckedUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CaracteristicaAdicionalUncheckedUpdateManyWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ImagenUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type ImagenUncheckedUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type ImagenUncheckedUpdateManyWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    renter?: RenterUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritoUncheckedUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoUncheckedUpdateManyWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
  }

  export type ReservationUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReservationsNestedInput
    host?: UserUpdateOneRequiredWithoutReservationsNestedInput
    descuento?: DescuentoUpdateOneWithoutReservasNestedInput
    reviews?: ReviewUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateManyWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    descuentoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReviewsNestedInput
    host?: UserUpdateOneRequiredWithoutReviewsNestedInput
    reservation?: ReservationUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    reservationId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutCarInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    reservationId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateManyReservationInput = {
    id?: string
    renterId: string
    hostId: string
    carId?: string | null
    rating: number
    behaviorRating: number
    carCareRating: number
    punctualityRating: number
    comment?: string | null
    hostName: string
    hostPicture?: string | null
    renterName: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CalificacionHostUsuarioCreateManyReservationInput = {
    id?: string
    comportamiento: number
    cuidadoVehiculo: number
    puntualidad: number
    comentario?: string | null
    calificadorId: string
    calificadoId: string
    fechaCreacion?: Date | string
  }

  export type ReviewUpdateWithoutReservationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReviewsNestedInput
    host?: UserUpdateOneRequiredWithoutReviewsNestedInput
    car?: CarUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutReservationInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutReservationInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: IntFieldUpdateOperationsInput | number
    behaviorRating?: IntFieldUpdateOperationsInput | number
    carCareRating?: IntFieldUpdateOperationsInput | number
    punctualityRating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    hostName?: StringFieldUpdateOperationsInput | string
    hostPicture?: NullableStringFieldUpdateOperationsInput | string | null
    renterName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionHostUsuarioUpdateWithoutReservationInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    calificador?: UserUpdateOneRequiredWithoutCalificacionesHechasNestedInput
    calificado?: RenterUpdateOneRequiredWithoutCalificacionesRecibidasNestedInput
  }

  export type CalificacionHostUsuarioUncheckedUpdateWithoutReservationInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    calificadorId?: StringFieldUpdateOperationsInput | string
    calificadoId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionHostUsuarioUncheckedUpdateManyWithoutReservationInput = {
    id?: StringFieldUpdateOperationsInput | string
    comportamiento?: IntFieldUpdateOperationsInput | number
    cuidadoVehiculo?: IntFieldUpdateOperationsInput | number
    puntualidad?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    calificadorId?: StringFieldUpdateOperationsInput | string
    calificadoId?: StringFieldUpdateOperationsInput | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationCreateManyDescuentoInput = {
    id?: string
    renterId: string
    hostId: string
    carId?: string | null
    fechaInicio: Date | string
    fechaFin: Date | string
    fechaCreacion?: Date | string
    fechaExpiracion?: Date | string | null
    estado?: $Enums.EstadoReservacion
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReservationUpdateWithoutDescuentoInput = {
    id?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReservationsNestedInput
    host?: UserUpdateOneRequiredWithoutReservationsNestedInput
    car?: CarUpdateOneWithoutReservationsNestedInput
    reviews?: ReviewUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateWithoutDescuentoInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutReservationNestedInput
    calificaciones?: CalificacionHostUsuarioUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type ReservationUncheckedUpdateManyWithoutDescuentoInput = {
    id?: StringFieldUpdateOperationsInput | string
    renterId?: StringFieldUpdateOperationsInput | string
    hostId?: StringFieldUpdateOperationsInput | string
    carId?: NullableStringFieldUpdateOperationsInput | string | null
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaExpiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReservacionFieldUpdateOperationsInput | $Enums.EstadoReservacion
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}