
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  email: 'email',
  password: 'password',
  googleId: 'googleId',
  image: 'image',
  telefono: 'telefono',
  genero: 'genero',
  fechaNacimiento: 'fechaNacimiento',
  direccion: 'direccion',
  ciudad: 'ciudad',
  provincia: 'provincia',
  pais: 'pais',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role'
};

exports.Prisma.RenterScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  occupation: 'occupation',
  address: 'address',
  age: 'age',
  profilePicture: 'profilePicture',
  rating: 'rating',
  memberSince: 'memberSince',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CarScalarFieldEnum = {
  id: 'id',
  vin: 'vin',
  año: 'año',
  marca: 'marca',
  modelo: 'modelo',
  placa: 'placa',
  asientos: 'asientos',
  puertas: 'puertas',
  soat: 'soat',
  precioPorDia: 'precioPorDia',
  numMantenimientos: 'numMantenimientos',
  transmision: 'transmision',
  estado: 'estado',
  direccion: 'direccion',
  ciudad: 'ciudad',
  provincia: 'provincia',
  pais: 'pais',
  color: 'color',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReservationScalarFieldEnum = {
  id: 'id',
  renterId: 'renterId',
  hostId: 'hostId',
  carId: 'carId',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  fechaCreacion: 'fechaCreacion',
  fechaExpiracion: 'fechaExpiracion',
  estado: 'estado',
  descuentoId: 'descuentoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  renterId: 'renterId',
  hostId: 'hostId',
  reservationId: 'reservationId',
  carId: 'carId',
  rating: 'rating',
  behaviorRating: 'behaviorRating',
  carCareRating: 'carCareRating',
  punctualityRating: 'punctualityRating',
  comment: 'comment',
  hostName: 'hostName',
  hostPicture: 'hostPicture',
  renterName: 'renterName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  renterId: 'renterId',
  reporterId: 'reporterId',
  reason: 'reason',
  additionalInfo: 'additionalInfo',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CombustibleScalarFieldEnum = {
  id: 'id',
  tipoDeCombustible: 'tipoDeCombustible',
  carId: 'carId'
};

exports.Prisma.CaracteristicaAdicionalScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  carId: 'carId'
};

exports.Prisma.ImagenScalarFieldEnum = {
  id: 'id',
  url: 'url',
  carId: 'carId'
};

exports.Prisma.FavoritoScalarFieldEnum = {
  id: 'id',
  renterId: 'renterId',
  carId: 'carId'
};

exports.Prisma.DescuentoScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  porcentaje: 'porcentaje'
};

exports.Prisma.CalificacionHostUsuarioScalarFieldEnum = {
  id: 'id',
  comportamiento: 'comportamiento',
  cuidadoVehiculo: 'cuidadoVehiculo',
  puntualidad: 'puntualidad',
  comentario: 'comentario',
  reservationId: 'reservationId',
  calificadorId: 'calificadorId',
  calificadoId: 'calificadoId',
  fechaCreacion: 'fechaCreacion'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Genero = exports.$Enums.Genero = {
  MASCULINO: 'MASCULINO',
  FEMENINO: 'FEMENINO',
  OTRO: 'OTRO'
};

exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  HOST: 'HOST',
  RENTER: 'RENTER'
};

exports.CarStatus = exports.$Enums.CarStatus = {
  DISPONIBLE: 'DISPONIBLE',
  RESERVADO: 'RESERVADO',
  MANTENIMIENTO: 'MANTENIMIENTO'
};

exports.EstadoReservacion = exports.$Enums.EstadoReservacion = {
  PENDIENTE: 'PENDIENTE',
  CONFIRMADA: 'CONFIRMADA',
  EN_CURSO: 'EN_CURSO',
  COMPLETADA: 'COMPLETADA',
  CANCELADA: 'CANCELADA'
};

exports.EstadoReporte = exports.$Enums.EstadoReporte = {
  PENDIENTE: 'PENDIENTE',
  EN_REVISION: 'EN_REVISION',
  RESUELTO: 'RESUELTO',
  DESCARTADO: 'DESCARTADO'
};

exports.Prisma.ModelName = {
  User: 'User',
  Renter: 'Renter',
  Car: 'Car',
  Reservation: 'Reservation',
  Review: 'Review',
  Report: 'Report',
  Combustible: 'Combustible',
  CaracteristicaAdicional: 'CaracteristicaAdicional',
  Imagen: 'Imagen',
  Favorito: 'Favorito',
  Descuento: 'Descuento',
  CalificacionHostUsuario: 'CalificacionHostUsuario'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
